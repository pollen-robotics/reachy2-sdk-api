/**
 * @fileoverview gRPC-Web generated client stub for component.orbita2d
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: orbita2d.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as component_pb from './component_pb';
import * as orbita2d_pb from './orbita2d_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';


export class Orbita2DServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAllOrbita2D = new grpcWeb.MethodDescriptor(
    '/component.orbita2d.Orbita2DService/GetAllOrbita2D',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    orbita2d_pb.ListOfOrbita2D,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    orbita2d_pb.ListOfOrbita2D.deserializeBinary
  );

  getAllOrbita2D(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<orbita2d_pb.ListOfOrbita2D>;

  getAllOrbita2D(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: orbita2d_pb.ListOfOrbita2D) => void): grpcWeb.ClientReadableStream<orbita2d_pb.ListOfOrbita2D>;

  getAllOrbita2D(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: orbita2d_pb.ListOfOrbita2D) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/component.orbita2d.Orbita2DService/GetAllOrbita2D',
        request,
        metadata || {},
        this.methodDescriptorGetAllOrbita2D,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/component.orbita2d.Orbita2DService/GetAllOrbita2D',
    request,
    metadata || {},
    this.methodDescriptorGetAllOrbita2D);
  }

  methodDescriptorGetState = new grpcWeb.MethodDescriptor(
    '/component.orbita2d.Orbita2DService/GetState',
    grpcWeb.MethodType.UNARY,
    orbita2d_pb.Orbita2DStateRequest,
    orbita2d_pb.Orbita2DState,
    (request: orbita2d_pb.Orbita2DStateRequest) => {
      return request.serializeBinary();
    },
    orbita2d_pb.Orbita2DState.deserializeBinary
  );

  getState(
    request: orbita2d_pb.Orbita2DStateRequest,
    metadata: grpcWeb.Metadata | null): Promise<orbita2d_pb.Orbita2DState>;

  getState(
    request: orbita2d_pb.Orbita2DStateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: orbita2d_pb.Orbita2DState) => void): grpcWeb.ClientReadableStream<orbita2d_pb.Orbita2DState>;

  getState(
    request: orbita2d_pb.Orbita2DStateRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: orbita2d_pb.Orbita2DState) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/component.orbita2d.Orbita2DService/GetState',
        request,
        metadata || {},
        this.methodDescriptorGetState,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/component.orbita2d.Orbita2DService/GetState',
    request,
    metadata || {},
    this.methodDescriptorGetState);
  }

  methodDescriptorStreamState = new grpcWeb.MethodDescriptor(
    '/component.orbita2d.Orbita2DService/StreamState',
    grpcWeb.MethodType.SERVER_STREAMING,
    orbita2d_pb.Orbita2DStreamStateRequest,
    orbita2d_pb.Orbita2DState,
    (request: orbita2d_pb.Orbita2DStreamStateRequest) => {
      return request.serializeBinary();
    },
    orbita2d_pb.Orbita2DState.deserializeBinary
  );

  streamState(
    request: orbita2d_pb.Orbita2DStreamStateRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<orbita2d_pb.Orbita2DState> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/component.orbita2d.Orbita2DService/StreamState',
      request,
      metadata || {},
      this.methodDescriptorStreamState);
  }

  methodDescriptorSendCommand = new grpcWeb.MethodDescriptor(
    '/component.orbita2d.Orbita2DService/SendCommand',
    grpcWeb.MethodType.UNARY,
    orbita2d_pb.Orbita2DsCommand,
    google_protobuf_empty_pb.Empty,
    (request: orbita2d_pb.Orbita2DsCommand) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  sendCommand(
    request: orbita2d_pb.Orbita2DsCommand,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  sendCommand(
    request: orbita2d_pb.Orbita2DsCommand,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  sendCommand(
    request: orbita2d_pb.Orbita2DsCommand,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/component.orbita2d.Orbita2DService/SendCommand',
        request,
        metadata || {},
        this.methodDescriptorSendCommand,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/component.orbita2d.Orbita2DService/SendCommand',
    request,
    metadata || {},
    this.methodDescriptorSendCommand);
  }

  methodDescriptorAudit = new grpcWeb.MethodDescriptor(
    '/component.orbita2d.Orbita2DService/Audit',
    grpcWeb.MethodType.UNARY,
    component_pb.ComponentId,
    orbita2d_pb.Orbita2DStatus,
    (request: component_pb.ComponentId) => {
      return request.serializeBinary();
    },
    orbita2d_pb.Orbita2DStatus.deserializeBinary
  );

  audit(
    request: component_pb.ComponentId,
    metadata: grpcWeb.Metadata | null): Promise<orbita2d_pb.Orbita2DStatus>;

  audit(
    request: component_pb.ComponentId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: orbita2d_pb.Orbita2DStatus) => void): grpcWeb.ClientReadableStream<orbita2d_pb.Orbita2DStatus>;

  audit(
    request: component_pb.ComponentId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: orbita2d_pb.Orbita2DStatus) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/component.orbita2d.Orbita2DService/Audit',
        request,
        metadata || {},
        this.methodDescriptorAudit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/component.orbita2d.Orbita2DService/Audit',
    request,
    metadata || {},
    this.methodDescriptorAudit);
  }

  methodDescriptorHeartBeat = new grpcWeb.MethodDescriptor(
    '/component.orbita2d.Orbita2DService/HeartBeat',
    grpcWeb.MethodType.UNARY,
    component_pb.ComponentId,
    google_protobuf_empty_pb.Empty,
    (request: component_pb.ComponentId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  heartBeat(
    request: component_pb.ComponentId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  heartBeat(
    request: component_pb.ComponentId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  heartBeat(
    request: component_pb.ComponentId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/component.orbita2d.Orbita2DService/HeartBeat',
        request,
        metadata || {},
        this.methodDescriptorHeartBeat,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/component.orbita2d.Orbita2DService/HeartBeat',
    request,
    metadata || {},
    this.methodDescriptorHeartBeat);
  }

  methodDescriptorRestart = new grpcWeb.MethodDescriptor(
    '/component.orbita2d.Orbita2DService/Restart',
    grpcWeb.MethodType.UNARY,
    component_pb.ComponentId,
    google_protobuf_empty_pb.Empty,
    (request: component_pb.ComponentId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  restart(
    request: component_pb.ComponentId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  restart(
    request: component_pb.ComponentId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  restart(
    request: component_pb.ComponentId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/component.orbita2d.Orbita2DService/Restart',
        request,
        metadata || {},
        this.methodDescriptorRestart,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/component.orbita2d.Orbita2DService/Restart',
    request,
    metadata || {},
    this.methodDescriptorRestart);
  }

}


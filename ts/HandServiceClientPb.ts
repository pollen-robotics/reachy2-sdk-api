/**
 * @fileoverview gRPC-Web generated client stub for reachy.part.hand
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: hand.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as part_pb from './part_pb';
import * as hand_pb from './hand_pb';


export class HandServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAllHands = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/GetAllHands',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    hand_pb.ListOfHand,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    hand_pb.ListOfHand.deserializeBinary
  );

  getAllHands(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<hand_pb.ListOfHand>;

  getAllHands(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: hand_pb.ListOfHand) => void): grpcWeb.ClientReadableStream<hand_pb.ListOfHand>;

  getAllHands(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: hand_pb.ListOfHand) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/GetAllHands',
        request,
        metadata || {},
        this.methodDescriptorGetAllHands,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/GetAllHands',
    request,
    metadata || {},
    this.methodDescriptorGetAllHands);
  }

  methodDescriptorGetHandState = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/GetHandState',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    hand_pb.HandState,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    hand_pb.HandState.deserializeBinary
  );

  getHandState(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<hand_pb.HandState>;

  getHandState(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: hand_pb.HandState) => void): grpcWeb.ClientReadableStream<hand_pb.HandState>;

  getHandState(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: hand_pb.HandState) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/GetHandState',
        request,
        metadata || {},
        this.methodDescriptorGetHandState,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/GetHandState',
    request,
    metadata || {},
    this.methodDescriptorGetHandState);
  }

  methodDescriptorOpenHand = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/OpenHand',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  openHand(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  openHand(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  openHand(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/OpenHand',
        request,
        metadata || {},
        this.methodDescriptorOpenHand,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/OpenHand',
    request,
    metadata || {},
    this.methodDescriptorOpenHand);
  }

  methodDescriptorCloseHand = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/CloseHand',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  closeHand(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  closeHand(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  closeHand(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/CloseHand',
        request,
        metadata || {},
        this.methodDescriptorCloseHand,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/CloseHand',
    request,
    metadata || {},
    this.methodDescriptorCloseHand);
  }

  methodDescriptorAudit = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/Audit',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    hand_pb.HandStatus,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    hand_pb.HandStatus.deserializeBinary
  );

  audit(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<hand_pb.HandStatus>;

  audit(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: hand_pb.HandStatus) => void): grpcWeb.ClientReadableStream<hand_pb.HandStatus>;

  audit(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: hand_pb.HandStatus) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/Audit',
        request,
        metadata || {},
        this.methodDescriptorAudit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/Audit',
    request,
    metadata || {},
    this.methodDescriptorAudit);
  }

  methodDescriptorHeartBeat = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/HeartBeat',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  heartBeat(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  heartBeat(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  heartBeat(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/HeartBeat',
        request,
        metadata || {},
        this.methodDescriptorHeartBeat,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/HeartBeat',
    request,
    metadata || {},
    this.methodDescriptorHeartBeat);
  }

  methodDescriptorRestart = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/Restart',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  restart(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  restart(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  restart(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/Restart',
        request,
        metadata || {},
        this.methodDescriptorRestart,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/Restart',
    request,
    metadata || {},
    this.methodDescriptorRestart);
  }

  methodDescriptorResetDefaultValues = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/ResetDefaultValues',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  resetDefaultValues(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  resetDefaultValues(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  resetDefaultValues(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/ResetDefaultValues',
        request,
        metadata || {},
        this.methodDescriptorResetDefaultValues,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/ResetDefaultValues',
    request,
    metadata || {},
    this.methodDescriptorResetDefaultValues);
  }

  methodDescriptorTurnOn = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/TurnOn',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  turnOn(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  turnOn(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  turnOn(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/TurnOn',
        request,
        metadata || {},
        this.methodDescriptorTurnOn,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/TurnOn',
    request,
    metadata || {},
    this.methodDescriptorTurnOn);
  }

  methodDescriptorTurnOff = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/TurnOff',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  turnOff(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  turnOff(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  turnOff(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/TurnOff',
        request,
        metadata || {},
        this.methodDescriptorTurnOff,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/TurnOff',
    request,
    metadata || {},
    this.methodDescriptorTurnOff);
  }

  methodDescriptorGetJointLimit = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/GetJointLimit',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    hand_pb.JointsLimits,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    hand_pb.JointsLimits.deserializeBinary
  );

  getJointLimit(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<hand_pb.JointsLimits>;

  getJointLimit(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: hand_pb.JointsLimits) => void): grpcWeb.ClientReadableStream<hand_pb.JointsLimits>;

  getJointLimit(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: hand_pb.JointsLimits) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/GetJointLimit',
        request,
        metadata || {},
        this.methodDescriptorGetJointLimit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/GetJointLimit',
    request,
    metadata || {},
    this.methodDescriptorGetJointLimit);
  }

  methodDescriptorGetTemperature = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/GetTemperature',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    hand_pb.HandTemperatures,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    hand_pb.HandTemperatures.deserializeBinary
  );

  getTemperature(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<hand_pb.HandTemperatures>;

  getTemperature(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: hand_pb.HandTemperatures) => void): grpcWeb.ClientReadableStream<hand_pb.HandTemperatures>;

  getTemperature(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: hand_pb.HandTemperatures) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/GetTemperature',
        request,
        metadata || {},
        this.methodDescriptorGetTemperature,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/GetTemperature',
    request,
    metadata || {},
    this.methodDescriptorGetTemperature);
  }

  methodDescriptorGetHandGoalPosition = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/GetHandGoalPosition',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    hand_pb.HandPosition,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    hand_pb.HandPosition.deserializeBinary
  );

  getHandGoalPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<hand_pb.HandPosition>;

  getHandGoalPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: hand_pb.HandPosition) => void): grpcWeb.ClientReadableStream<hand_pb.HandPosition>;

  getHandGoalPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: hand_pb.HandPosition) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/GetHandGoalPosition',
        request,
        metadata || {},
        this.methodDescriptorGetHandGoalPosition,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/GetHandGoalPosition',
    request,
    metadata || {},
    this.methodDescriptorGetHandGoalPosition);
  }

  methodDescriptorSetSpeedLimit = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/SetSpeedLimit',
    grpcWeb.MethodType.UNARY,
    hand_pb.SpeedLimitRequest,
    google_protobuf_empty_pb.Empty,
    (request: hand_pb.SpeedLimitRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  setSpeedLimit(
    request: hand_pb.SpeedLimitRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  setSpeedLimit(
    request: hand_pb.SpeedLimitRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  setSpeedLimit(
    request: hand_pb.SpeedLimitRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/SetSpeedLimit',
        request,
        metadata || {},
        this.methodDescriptorSetSpeedLimit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/SetSpeedLimit',
    request,
    metadata || {},
    this.methodDescriptorSetSpeedLimit);
  }

  methodDescriptorGetForce = new grpcWeb.MethodDescriptor(
    '/reachy.part.hand.HandService/GetForce',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    hand_pb.Force,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    hand_pb.Force.deserializeBinary
  );

  getForce(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<hand_pb.Force>;

  getForce(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: hand_pb.Force) => void): grpcWeb.ClientReadableStream<hand_pb.Force>;

  getForce(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: hand_pb.Force) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.hand.HandService/GetForce',
        request,
        metadata || {},
        this.methodDescriptorGetForce,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.hand.HandService/GetForce',
    request,
    metadata || {},
    this.methodDescriptorGetForce);
  }

}


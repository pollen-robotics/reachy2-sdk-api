/**
 * @fileoverview gRPC-Web generated client stub for reachy.part.arm
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: arm.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as kinematics_pb from './kinematics_pb';
import * as part_pb from './part_pb';
import * as arm_pb from './arm_pb';


export class ArmServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAllArms = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/GetAllArms',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    arm_pb.ListOfArm,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    arm_pb.ListOfArm.deserializeBinary
  );

  getAllArms(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<arm_pb.ListOfArm>;

  getAllArms(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: arm_pb.ListOfArm) => void): grpcWeb.ClientReadableStream<arm_pb.ListOfArm>;

  getAllArms(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: arm_pb.ListOfArm) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/GetAllArms',
        request,
        metadata || {},
        this.methodDescriptorGetAllArms,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/GetAllArms',
    request,
    metadata || {},
    this.methodDescriptorGetAllArms);
  }

  methodDescriptorGetState = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/GetState',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    arm_pb.ArmState,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    arm_pb.ArmState.deserializeBinary
  );

  getState(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<arm_pb.ArmState>;

  getState(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: arm_pb.ArmState) => void): grpcWeb.ClientReadableStream<arm_pb.ArmState>;

  getState(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: arm_pb.ArmState) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/GetState',
        request,
        metadata || {},
        this.methodDescriptorGetState,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/GetState',
    request,
    metadata || {},
    this.methodDescriptorGetState);
  }

  methodDescriptorComputeArmFK = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/ComputeArmFK',
    grpcWeb.MethodType.UNARY,
    arm_pb.ArmFKRequest,
    arm_pb.ArmFKSolution,
    (request: arm_pb.ArmFKRequest) => {
      return request.serializeBinary();
    },
    arm_pb.ArmFKSolution.deserializeBinary
  );

  computeArmFK(
    request: arm_pb.ArmFKRequest,
    metadata: grpcWeb.Metadata | null): Promise<arm_pb.ArmFKSolution>;

  computeArmFK(
    request: arm_pb.ArmFKRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: arm_pb.ArmFKSolution) => void): grpcWeb.ClientReadableStream<arm_pb.ArmFKSolution>;

  computeArmFK(
    request: arm_pb.ArmFKRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: arm_pb.ArmFKSolution) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/ComputeArmFK',
        request,
        metadata || {},
        this.methodDescriptorComputeArmFK,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/ComputeArmFK',
    request,
    metadata || {},
    this.methodDescriptorComputeArmFK);
  }

  methodDescriptorComputeArmIK = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/ComputeArmIK',
    grpcWeb.MethodType.UNARY,
    arm_pb.ArmIKRequest,
    arm_pb.ArmIKSolution,
    (request: arm_pb.ArmIKRequest) => {
      return request.serializeBinary();
    },
    arm_pb.ArmIKSolution.deserializeBinary
  );

  computeArmIK(
    request: arm_pb.ArmIKRequest,
    metadata: grpcWeb.Metadata | null): Promise<arm_pb.ArmIKSolution>;

  computeArmIK(
    request: arm_pb.ArmIKRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: arm_pb.ArmIKSolution) => void): grpcWeb.ClientReadableStream<arm_pb.ArmIKSolution>;

  computeArmIK(
    request: arm_pb.ArmIKRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: arm_pb.ArmIKSolution) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/ComputeArmIK',
        request,
        metadata || {},
        this.methodDescriptorComputeArmIK,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/ComputeArmIK',
    request,
    metadata || {},
    this.methodDescriptorComputeArmIK);
  }

  methodDescriptorGoToCartesianPosition = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/GoToCartesianPosition',
    grpcWeb.MethodType.UNARY,
    arm_pb.ArmCartesianGoal,
    google_protobuf_empty_pb.Empty,
    (request: arm_pb.ArmCartesianGoal) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  goToCartesianPosition(
    request: arm_pb.ArmCartesianGoal,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  goToCartesianPosition(
    request: arm_pb.ArmCartesianGoal,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  goToCartesianPosition(
    request: arm_pb.ArmCartesianGoal,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/GoToCartesianPosition',
        request,
        metadata || {},
        this.methodDescriptorGoToCartesianPosition,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/GoToCartesianPosition',
    request,
    metadata || {},
    this.methodDescriptorGoToCartesianPosition);
  }

  methodDescriptorGoToJointPosition = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/GoToJointPosition',
    grpcWeb.MethodType.UNARY,
    arm_pb.ArmJointGoal,
    google_protobuf_empty_pb.Empty,
    (request: arm_pb.ArmJointGoal) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  goToJointPosition(
    request: arm_pb.ArmJointGoal,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  goToJointPosition(
    request: arm_pb.ArmJointGoal,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  goToJointPosition(
    request: arm_pb.ArmJointGoal,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/GoToJointPosition',
        request,
        metadata || {},
        this.methodDescriptorGoToJointPosition,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/GoToJointPosition',
    request,
    metadata || {},
    this.methodDescriptorGoToJointPosition);
  }

  methodDescriptorGetCartesianPosition = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/GetCartesianPosition',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    kinematics_pb.Matrix4x4,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    kinematics_pb.Matrix4x4.deserializeBinary
  );

  getCartesianPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<kinematics_pb.Matrix4x4>;

  getCartesianPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: kinematics_pb.Matrix4x4) => void): grpcWeb.ClientReadableStream<kinematics_pb.Matrix4x4>;

  getCartesianPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: kinematics_pb.Matrix4x4) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/GetCartesianPosition',
        request,
        metadata || {},
        this.methodDescriptorGetCartesianPosition,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/GetCartesianPosition',
    request,
    metadata || {},
    this.methodDescriptorGetCartesianPosition);
  }

  methodDescriptorGetJointPosition = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/GetJointPosition',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    arm_pb.ArmPosition,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    arm_pb.ArmPosition.deserializeBinary
  );

  getJointPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<arm_pb.ArmPosition>;

  getJointPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: arm_pb.ArmPosition) => void): grpcWeb.ClientReadableStream<arm_pb.ArmPosition>;

  getJointPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: arm_pb.ArmPosition) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/GetJointPosition',
        request,
        metadata || {},
        this.methodDescriptorGetJointPosition,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/GetJointPosition',
    request,
    metadata || {},
    this.methodDescriptorGetJointPosition);
  }

  methodDescriptorAudit = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/Audit',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    arm_pb.ArmStatus,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    arm_pb.ArmStatus.deserializeBinary
  );

  audit(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<arm_pb.ArmStatus>;

  audit(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: arm_pb.ArmStatus) => void): grpcWeb.ClientReadableStream<arm_pb.ArmStatus>;

  audit(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: arm_pb.ArmStatus) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/Audit',
        request,
        metadata || {},
        this.methodDescriptorAudit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/Audit',
    request,
    metadata || {},
    this.methodDescriptorAudit);
  }

  methodDescriptorHeartBeat = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/HeartBeat',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  heartBeat(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  heartBeat(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  heartBeat(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/HeartBeat',
        request,
        metadata || {},
        this.methodDescriptorHeartBeat,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/HeartBeat',
    request,
    metadata || {},
    this.methodDescriptorHeartBeat);
  }

  methodDescriptorRestart = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/Restart',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  restart(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  restart(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  restart(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/Restart',
        request,
        metadata || {},
        this.methodDescriptorRestart,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/Restart',
    request,
    metadata || {},
    this.methodDescriptorRestart);
  }

  methodDescriptorResetDefaultValues = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/ResetDefaultValues',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  resetDefaultValues(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  resetDefaultValues(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  resetDefaultValues(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/ResetDefaultValues',
        request,
        metadata || {},
        this.methodDescriptorResetDefaultValues,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/ResetDefaultValues',
    request,
    metadata || {},
    this.methodDescriptorResetDefaultValues);
  }

  methodDescriptorTurnOn = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/TurnOn',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  turnOn(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  turnOn(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  turnOn(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/TurnOn',
        request,
        metadata || {},
        this.methodDescriptorTurnOn,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/TurnOn',
    request,
    metadata || {},
    this.methodDescriptorTurnOn);
  }

  methodDescriptorTurnOff = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/TurnOff',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    google_protobuf_empty_pb.Empty,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  turnOff(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  turnOff(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  turnOff(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/TurnOff',
        request,
        metadata || {},
        this.methodDescriptorTurnOff,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/TurnOff',
    request,
    metadata || {},
    this.methodDescriptorTurnOff);
  }

  methodDescriptorGetJointsLimits = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/GetJointsLimits',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    arm_pb.ArmLimits,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    arm_pb.ArmLimits.deserializeBinary
  );

  getJointsLimits(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<arm_pb.ArmLimits>;

  getJointsLimits(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: arm_pb.ArmLimits) => void): grpcWeb.ClientReadableStream<arm_pb.ArmLimits>;

  getJointsLimits(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: arm_pb.ArmLimits) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/GetJointsLimits',
        request,
        metadata || {},
        this.methodDescriptorGetJointsLimits,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/GetJointsLimits',
    request,
    metadata || {},
    this.methodDescriptorGetJointsLimits);
  }

  methodDescriptorGetTemperatures = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/GetTemperatures',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    arm_pb.ArmTemperatures,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    arm_pb.ArmTemperatures.deserializeBinary
  );

  getTemperatures(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<arm_pb.ArmTemperatures>;

  getTemperatures(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: arm_pb.ArmTemperatures) => void): grpcWeb.ClientReadableStream<arm_pb.ArmTemperatures>;

  getTemperatures(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: arm_pb.ArmTemperatures) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/GetTemperatures',
        request,
        metadata || {},
        this.methodDescriptorGetTemperatures,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/GetTemperatures',
    request,
    metadata || {},
    this.methodDescriptorGetTemperatures);
  }

  methodDescriptorGetJointGoalPosition = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/GetJointGoalPosition',
    grpcWeb.MethodType.UNARY,
    part_pb.PartId,
    arm_pb.ArmPosition,
    (request: part_pb.PartId) => {
      return request.serializeBinary();
    },
    arm_pb.ArmPosition.deserializeBinary
  );

  getJointGoalPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null): Promise<arm_pb.ArmPosition>;

  getJointGoalPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: arm_pb.ArmPosition) => void): grpcWeb.ClientReadableStream<arm_pb.ArmPosition>;

  getJointGoalPosition(
    request: part_pb.PartId,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: arm_pb.ArmPosition) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/GetJointGoalPosition',
        request,
        metadata || {},
        this.methodDescriptorGetJointGoalPosition,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/GetJointGoalPosition',
    request,
    metadata || {},
    this.methodDescriptorGetJointGoalPosition);
  }

  methodDescriptorSetSpeedLimit = new grpcWeb.MethodDescriptor(
    '/reachy.part.arm.ArmService/SetSpeedLimit',
    grpcWeb.MethodType.UNARY,
    arm_pb.SpeedLimitRequest,
    google_protobuf_empty_pb.Empty,
    (request: arm_pb.SpeedLimitRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  setSpeedLimit(
    request: arm_pb.SpeedLimitRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  setSpeedLimit(
    request: arm_pb.SpeedLimitRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  setSpeedLimit(
    request: arm_pb.SpeedLimitRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/reachy.part.arm.ArmService/SetSpeedLimit',
        request,
        metadata || {},
        this.methodDescriptorSetSpeedLimit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/reachy.part.arm.ArmService/SetSpeedLimit',
    request,
    metadata || {},
    this.methodDescriptorSetSpeedLimit);
  }

}


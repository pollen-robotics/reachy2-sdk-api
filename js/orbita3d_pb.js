// source: orbita3d.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var component_pb = require('./component_pb.js');
goog.object.extend(proto, component_pb);
var kinematics_pb = require('./kinematics_pb.js');
goog.object.extend(proto, kinematics_pb);
goog.exportSymbol('proto.component.orbita3d.Float3D', null, global);
goog.exportSymbol('proto.component.orbita3d.ListOfOrbita3DInfo', null, global);
goog.exportSymbol('proto.component.orbita3d.Orbita3DCommand', null, global);
goog.exportSymbol('proto.component.orbita3d.Orbita3DField', null, global);
goog.exportSymbol('proto.component.orbita3d.Orbita3DInfo', null, global);
goog.exportSymbol('proto.component.orbita3d.Orbita3DState', null, global);
goog.exportSymbol('proto.component.orbita3d.Orbita3DStateRequest', null, global);
goog.exportSymbol('proto.component.orbita3d.Orbita3DStatus', null, global);
goog.exportSymbol('proto.component.orbita3d.Orbita3DStreamStateRequest', null, global);
goog.exportSymbol('proto.component.orbita3d.PID3D', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.component.orbita3d.Orbita3DState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.component.orbita3d.Orbita3DState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.component.orbita3d.Orbita3DState.displayName = 'proto.component.orbita3d.Orbita3DState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.component.orbita3d.Orbita3DStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.component.orbita3d.Orbita3DStateRequest.repeatedFields_, null);
};
goog.inherits(proto.component.orbita3d.Orbita3DStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.component.orbita3d.Orbita3DStateRequest.displayName = 'proto.component.orbita3d.Orbita3DStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.component.orbita3d.Orbita3DStreamStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.component.orbita3d.Orbita3DStreamStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.component.orbita3d.Orbita3DStreamStateRequest.displayName = 'proto.component.orbita3d.Orbita3DStreamStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.component.orbita3d.PID3D = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.component.orbita3d.PID3D, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.component.orbita3d.PID3D.displayName = 'proto.component.orbita3d.PID3D';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.component.orbita3d.Float3D = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.component.orbita3d.Float3D, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.component.orbita3d.Float3D.displayName = 'proto.component.orbita3d.Float3D';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.component.orbita3d.Orbita3DCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.component.orbita3d.Orbita3DCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.component.orbita3d.Orbita3DCommand.displayName = 'proto.component.orbita3d.Orbita3DCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.component.orbita3d.Orbita3DInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.component.orbita3d.Orbita3DInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.component.orbita3d.Orbita3DInfo.displayName = 'proto.component.orbita3d.Orbita3DInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.component.orbita3d.ListOfOrbita3DInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.component.orbita3d.ListOfOrbita3DInfo.repeatedFields_, null);
};
goog.inherits(proto.component.orbita3d.ListOfOrbita3DInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.component.orbita3d.ListOfOrbita3DInfo.displayName = 'proto.component.orbita3d.ListOfOrbita3DInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.component.orbita3d.Orbita3DStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.component.orbita3d.Orbita3DStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.component.orbita3d.Orbita3DStatus.displayName = 'proto.component.orbita3d.Orbita3DStatus';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.component.orbita3d.Orbita3DState.prototype.toObject = function(opt_includeInstance) {
  return proto.component.orbita3d.Orbita3DState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.component.orbita3d.Orbita3DState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DState.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    presentPosition: (f = msg.getPresentPosition()) && proto.component.orbita3d.Float3D.toObject(includeInstance, f),
    presentSpeed: (f = msg.getPresentSpeed()) && proto.component.orbita3d.Float3D.toObject(includeInstance, f),
    presentLoad: (f = msg.getPresentLoad()) && proto.component.orbita3d.Float3D.toObject(includeInstance, f),
    temperature: (f = msg.getTemperature()) && proto.component.orbita3d.Float3D.toObject(includeInstance, f),
    compliant: (f = msg.getCompliant()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    goalPosition: (f = msg.getGoalPosition()) && proto.component.orbita3d.Float3D.toObject(includeInstance, f),
    speedLimit: (f = msg.getSpeedLimit()) && proto.component.orbita3d.Float3D.toObject(includeInstance, f),
    torqueLimit: (f = msg.getTorqueLimit()) && proto.component.orbita3d.Float3D.toObject(includeInstance, f),
    pid: (f = msg.getPid()) && proto.component.orbita3d.PID3D.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.component.orbita3d.Orbita3DState}
 */
proto.component.orbita3d.Orbita3DState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.component.orbita3d.Orbita3DState;
  return proto.component.orbita3d.Orbita3DState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.component.orbita3d.Orbita3DState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.component.orbita3d.Orbita3DState}
 */
proto.component.orbita3d.Orbita3DState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 4:
      var value = new proto.component.orbita3d.Float3D;
      reader.readMessage(value,proto.component.orbita3d.Float3D.deserializeBinaryFromReader);
      msg.setPresentPosition(value);
      break;
    case 5:
      var value = new proto.component.orbita3d.Float3D;
      reader.readMessage(value,proto.component.orbita3d.Float3D.deserializeBinaryFromReader);
      msg.setPresentSpeed(value);
      break;
    case 6:
      var value = new proto.component.orbita3d.Float3D;
      reader.readMessage(value,proto.component.orbita3d.Float3D.deserializeBinaryFromReader);
      msg.setPresentLoad(value);
      break;
    case 7:
      var value = new proto.component.orbita3d.Float3D;
      reader.readMessage(value,proto.component.orbita3d.Float3D.deserializeBinaryFromReader);
      msg.setTemperature(value);
      break;
    case 8:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setCompliant(value);
      break;
    case 9:
      var value = new proto.component.orbita3d.Float3D;
      reader.readMessage(value,proto.component.orbita3d.Float3D.deserializeBinaryFromReader);
      msg.setGoalPosition(value);
      break;
    case 10:
      var value = new proto.component.orbita3d.Float3D;
      reader.readMessage(value,proto.component.orbita3d.Float3D.deserializeBinaryFromReader);
      msg.setSpeedLimit(value);
      break;
    case 11:
      var value = new proto.component.orbita3d.Float3D;
      reader.readMessage(value,proto.component.orbita3d.Float3D.deserializeBinaryFromReader);
      msg.setTorqueLimit(value);
      break;
    case 12:
      var value = new proto.component.orbita3d.PID3D;
      reader.readMessage(value,proto.component.orbita3d.PID3D.deserializeBinaryFromReader);
      msg.setPid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.component.orbita3d.Orbita3DState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.component.orbita3d.Orbita3DState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.component.orbita3d.Orbita3DState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPresentPosition();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.component.orbita3d.Float3D.serializeBinaryToWriter
    );
  }
  f = message.getPresentSpeed();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.component.orbita3d.Float3D.serializeBinaryToWriter
    );
  }
  f = message.getPresentLoad();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.component.orbita3d.Float3D.serializeBinaryToWriter
    );
  }
  f = message.getTemperature();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.component.orbita3d.Float3D.serializeBinaryToWriter
    );
  }
  f = message.getCompliant();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getGoalPosition();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.component.orbita3d.Float3D.serializeBinaryToWriter
    );
  }
  f = message.getSpeedLimit();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.component.orbita3d.Float3D.serializeBinaryToWriter
    );
  }
  f = message.getTorqueLimit();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.component.orbita3d.Float3D.serializeBinaryToWriter
    );
  }
  f = message.getPid();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.component.orbita3d.PID3D.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.component.orbita3d.Orbita3DState.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
*/
proto.component.orbita3d.Orbita3DState.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DState.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.component.orbita3d.Orbita3DState.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string uid = 3;
 * @return {string}
 */
proto.component.orbita3d.Orbita3DState.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Float3D present_position = 4;
 * @return {?proto.component.orbita3d.Float3D}
 */
proto.component.orbita3d.Orbita3DState.prototype.getPresentPosition = function() {
  return /** @type{?proto.component.orbita3d.Float3D} */ (
    jspb.Message.getWrapperField(this, proto.component.orbita3d.Float3D, 4));
};


/**
 * @param {?proto.component.orbita3d.Float3D|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
*/
proto.component.orbita3d.Orbita3DState.prototype.setPresentPosition = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.clearPresentPosition = function() {
  return this.setPresentPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DState.prototype.hasPresentPosition = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Float3D present_speed = 5;
 * @return {?proto.component.orbita3d.Float3D}
 */
proto.component.orbita3d.Orbita3DState.prototype.getPresentSpeed = function() {
  return /** @type{?proto.component.orbita3d.Float3D} */ (
    jspb.Message.getWrapperField(this, proto.component.orbita3d.Float3D, 5));
};


/**
 * @param {?proto.component.orbita3d.Float3D|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
*/
proto.component.orbita3d.Orbita3DState.prototype.setPresentSpeed = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.clearPresentSpeed = function() {
  return this.setPresentSpeed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DState.prototype.hasPresentSpeed = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Float3D present_load = 6;
 * @return {?proto.component.orbita3d.Float3D}
 */
proto.component.orbita3d.Orbita3DState.prototype.getPresentLoad = function() {
  return /** @type{?proto.component.orbita3d.Float3D} */ (
    jspb.Message.getWrapperField(this, proto.component.orbita3d.Float3D, 6));
};


/**
 * @param {?proto.component.orbita3d.Float3D|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
*/
proto.component.orbita3d.Orbita3DState.prototype.setPresentLoad = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.clearPresentLoad = function() {
  return this.setPresentLoad(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DState.prototype.hasPresentLoad = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Float3D temperature = 7;
 * @return {?proto.component.orbita3d.Float3D}
 */
proto.component.orbita3d.Orbita3DState.prototype.getTemperature = function() {
  return /** @type{?proto.component.orbita3d.Float3D} */ (
    jspb.Message.getWrapperField(this, proto.component.orbita3d.Float3D, 7));
};


/**
 * @param {?proto.component.orbita3d.Float3D|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
*/
proto.component.orbita3d.Orbita3DState.prototype.setTemperature = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.clearTemperature = function() {
  return this.setTemperature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DState.prototype.hasTemperature = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.BoolValue compliant = 8;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.component.orbita3d.Orbita3DState.prototype.getCompliant = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 8));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
*/
proto.component.orbita3d.Orbita3DState.prototype.setCompliant = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.clearCompliant = function() {
  return this.setCompliant(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DState.prototype.hasCompliant = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Float3D goal_position = 9;
 * @return {?proto.component.orbita3d.Float3D}
 */
proto.component.orbita3d.Orbita3DState.prototype.getGoalPosition = function() {
  return /** @type{?proto.component.orbita3d.Float3D} */ (
    jspb.Message.getWrapperField(this, proto.component.orbita3d.Float3D, 9));
};


/**
 * @param {?proto.component.orbita3d.Float3D|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
*/
proto.component.orbita3d.Orbita3DState.prototype.setGoalPosition = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.clearGoalPosition = function() {
  return this.setGoalPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DState.prototype.hasGoalPosition = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Float3D speed_limit = 10;
 * @return {?proto.component.orbita3d.Float3D}
 */
proto.component.orbita3d.Orbita3DState.prototype.getSpeedLimit = function() {
  return /** @type{?proto.component.orbita3d.Float3D} */ (
    jspb.Message.getWrapperField(this, proto.component.orbita3d.Float3D, 10));
};


/**
 * @param {?proto.component.orbita3d.Float3D|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
*/
proto.component.orbita3d.Orbita3DState.prototype.setSpeedLimit = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.clearSpeedLimit = function() {
  return this.setSpeedLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DState.prototype.hasSpeedLimit = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Float3D torque_limit = 11;
 * @return {?proto.component.orbita3d.Float3D}
 */
proto.component.orbita3d.Orbita3DState.prototype.getTorqueLimit = function() {
  return /** @type{?proto.component.orbita3d.Float3D} */ (
    jspb.Message.getWrapperField(this, proto.component.orbita3d.Float3D, 11));
};


/**
 * @param {?proto.component.orbita3d.Float3D|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
*/
proto.component.orbita3d.Orbita3DState.prototype.setTorqueLimit = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.clearTorqueLimit = function() {
  return this.setTorqueLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DState.prototype.hasTorqueLimit = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PID3D pid = 12;
 * @return {?proto.component.orbita3d.PID3D}
 */
proto.component.orbita3d.Orbita3DState.prototype.getPid = function() {
  return /** @type{?proto.component.orbita3d.PID3D} */ (
    jspb.Message.getWrapperField(this, proto.component.orbita3d.PID3D, 12));
};


/**
 * @param {?proto.component.orbita3d.PID3D|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
*/
proto.component.orbita3d.Orbita3DState.prototype.setPid = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DState} returns this
 */
proto.component.orbita3d.Orbita3DState.prototype.clearPid = function() {
  return this.setPid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DState.prototype.hasPid = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.component.orbita3d.Orbita3DStateRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.component.orbita3d.Orbita3DStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.component.orbita3d.Orbita3DStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.component.orbita3d.Orbita3DStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    id: (f = msg.getId()) && component_pb.ComponentId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.component.orbita3d.Orbita3DStateRequest}
 */
proto.component.orbita3d.Orbita3DStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.component.orbita3d.Orbita3DStateRequest;
  return proto.component.orbita3d.Orbita3DStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.component.orbita3d.Orbita3DStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.component.orbita3d.Orbita3DStateRequest}
 */
proto.component.orbita3d.Orbita3DStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<!proto.component.orbita3d.Orbita3DField>} */ (reader.readPackedEnum());
      msg.setFieldsList(value);
      break;
    case 2:
      var value = new component_pb.ComponentId;
      reader.readMessage(value,component_pb.ComponentId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.component.orbita3d.Orbita3DStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.component.orbita3d.Orbita3DStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.component.orbita3d.Orbita3DStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      component_pb.ComponentId.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Orbita3DField fields = 1;
 * @return {!Array<!proto.component.orbita3d.Orbita3DField>}
 */
proto.component.orbita3d.Orbita3DStateRequest.prototype.getFieldsList = function() {
  return /** @type {!Array<!proto.component.orbita3d.Orbita3DField>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.component.orbita3d.Orbita3DField>} value
 * @return {!proto.component.orbita3d.Orbita3DStateRequest} returns this
 */
proto.component.orbita3d.Orbita3DStateRequest.prototype.setFieldsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.component.orbita3d.Orbita3DField} value
 * @param {number=} opt_index
 * @return {!proto.component.orbita3d.Orbita3DStateRequest} returns this
 */
proto.component.orbita3d.Orbita3DStateRequest.prototype.addFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.component.orbita3d.Orbita3DStateRequest} returns this
 */
proto.component.orbita3d.Orbita3DStateRequest.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * optional component.ComponentId id = 2;
 * @return {?proto.component.ComponentId}
 */
proto.component.orbita3d.Orbita3DStateRequest.prototype.getId = function() {
  return /** @type{?proto.component.ComponentId} */ (
    jspb.Message.getWrapperField(this, component_pb.ComponentId, 2));
};


/**
 * @param {?proto.component.ComponentId|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DStateRequest} returns this
*/
proto.component.orbita3d.Orbita3DStateRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DStateRequest} returns this
 */
proto.component.orbita3d.Orbita3DStateRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DStateRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.component.orbita3d.Orbita3DStreamStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.component.orbita3d.Orbita3DStreamStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.component.orbita3d.Orbita3DStreamStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DStreamStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    req: (f = msg.getReq()) && proto.component.orbita3d.Orbita3DStateRequest.toObject(includeInstance, f),
    freq: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.component.orbita3d.Orbita3DStreamStateRequest}
 */
proto.component.orbita3d.Orbita3DStreamStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.component.orbita3d.Orbita3DStreamStateRequest;
  return proto.component.orbita3d.Orbita3DStreamStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.component.orbita3d.Orbita3DStreamStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.component.orbita3d.Orbita3DStreamStateRequest}
 */
proto.component.orbita3d.Orbita3DStreamStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.component.orbita3d.Orbita3DStateRequest;
      reader.readMessage(value,proto.component.orbita3d.Orbita3DStateRequest.deserializeBinaryFromReader);
      msg.setReq(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFreq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.component.orbita3d.Orbita3DStreamStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.component.orbita3d.Orbita3DStreamStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.component.orbita3d.Orbita3DStreamStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DStreamStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.component.orbita3d.Orbita3DStateRequest.serializeBinaryToWriter
    );
  }
  f = message.getFreq();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional Orbita3DStateRequest req = 1;
 * @return {?proto.component.orbita3d.Orbita3DStateRequest}
 */
proto.component.orbita3d.Orbita3DStreamStateRequest.prototype.getReq = function() {
  return /** @type{?proto.component.orbita3d.Orbita3DStateRequest} */ (
    jspb.Message.getWrapperField(this, proto.component.orbita3d.Orbita3DStateRequest, 1));
};


/**
 * @param {?proto.component.orbita3d.Orbita3DStateRequest|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DStreamStateRequest} returns this
*/
proto.component.orbita3d.Orbita3DStreamStateRequest.prototype.setReq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DStreamStateRequest} returns this
 */
proto.component.orbita3d.Orbita3DStreamStateRequest.prototype.clearReq = function() {
  return this.setReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DStreamStateRequest.prototype.hasReq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float freq = 2;
 * @return {number}
 */
proto.component.orbita3d.Orbita3DStreamStateRequest.prototype.getFreq = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.component.orbita3d.Orbita3DStreamStateRequest} returns this
 */
proto.component.orbita3d.Orbita3DStreamStateRequest.prototype.setFreq = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.component.orbita3d.PID3D.prototype.toObject = function(opt_includeInstance) {
  return proto.component.orbita3d.PID3D.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.component.orbita3d.PID3D} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.PID3D.toObject = function(includeInstance, msg) {
  var f, obj = {
    roll: (f = msg.getRoll()) && component_pb.PIDGains.toObject(includeInstance, f),
    pitch: (f = msg.getPitch()) && component_pb.PIDGains.toObject(includeInstance, f),
    yaw: (f = msg.getYaw()) && component_pb.PIDGains.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.component.orbita3d.PID3D}
 */
proto.component.orbita3d.PID3D.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.component.orbita3d.PID3D;
  return proto.component.orbita3d.PID3D.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.component.orbita3d.PID3D} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.component.orbita3d.PID3D}
 */
proto.component.orbita3d.PID3D.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new component_pb.PIDGains;
      reader.readMessage(value,component_pb.PIDGains.deserializeBinaryFromReader);
      msg.setRoll(value);
      break;
    case 2:
      var value = new component_pb.PIDGains;
      reader.readMessage(value,component_pb.PIDGains.deserializeBinaryFromReader);
      msg.setPitch(value);
      break;
    case 3:
      var value = new component_pb.PIDGains;
      reader.readMessage(value,component_pb.PIDGains.deserializeBinaryFromReader);
      msg.setYaw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.component.orbita3d.PID3D.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.component.orbita3d.PID3D.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.component.orbita3d.PID3D} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.PID3D.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoll();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      component_pb.PIDGains.serializeBinaryToWriter
    );
  }
  f = message.getPitch();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      component_pb.PIDGains.serializeBinaryToWriter
    );
  }
  f = message.getYaw();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      component_pb.PIDGains.serializeBinaryToWriter
    );
  }
};


/**
 * optional component.PIDGains roll = 1;
 * @return {?proto.component.PIDGains}
 */
proto.component.orbita3d.PID3D.prototype.getRoll = function() {
  return /** @type{?proto.component.PIDGains} */ (
    jspb.Message.getWrapperField(this, component_pb.PIDGains, 1));
};


/**
 * @param {?proto.component.PIDGains|undefined} value
 * @return {!proto.component.orbita3d.PID3D} returns this
*/
proto.component.orbita3d.PID3D.prototype.setRoll = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.PID3D} returns this
 */
proto.component.orbita3d.PID3D.prototype.clearRoll = function() {
  return this.setRoll(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.PID3D.prototype.hasRoll = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional component.PIDGains pitch = 2;
 * @return {?proto.component.PIDGains}
 */
proto.component.orbita3d.PID3D.prototype.getPitch = function() {
  return /** @type{?proto.component.PIDGains} */ (
    jspb.Message.getWrapperField(this, component_pb.PIDGains, 2));
};


/**
 * @param {?proto.component.PIDGains|undefined} value
 * @return {!proto.component.orbita3d.PID3D} returns this
*/
proto.component.orbita3d.PID3D.prototype.setPitch = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.PID3D} returns this
 */
proto.component.orbita3d.PID3D.prototype.clearPitch = function() {
  return this.setPitch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.PID3D.prototype.hasPitch = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional component.PIDGains yaw = 3;
 * @return {?proto.component.PIDGains}
 */
proto.component.orbita3d.PID3D.prototype.getYaw = function() {
  return /** @type{?proto.component.PIDGains} */ (
    jspb.Message.getWrapperField(this, component_pb.PIDGains, 3));
};


/**
 * @param {?proto.component.PIDGains|undefined} value
 * @return {!proto.component.orbita3d.PID3D} returns this
*/
proto.component.orbita3d.PID3D.prototype.setYaw = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.PID3D} returns this
 */
proto.component.orbita3d.PID3D.prototype.clearYaw = function() {
  return this.setYaw(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.PID3D.prototype.hasYaw = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.component.orbita3d.Float3D.prototype.toObject = function(opt_includeInstance) {
  return proto.component.orbita3d.Float3D.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.component.orbita3d.Float3D} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Float3D.toObject = function(includeInstance, msg) {
  var f, obj = {
    roll: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    pitch: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    yaw: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.component.orbita3d.Float3D}
 */
proto.component.orbita3d.Float3D.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.component.orbita3d.Float3D;
  return proto.component.orbita3d.Float3D.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.component.orbita3d.Float3D} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.component.orbita3d.Float3D}
 */
proto.component.orbita3d.Float3D.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRoll(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPitch(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYaw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.component.orbita3d.Float3D.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.component.orbita3d.Float3D.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.component.orbita3d.Float3D} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Float3D.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoll();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getPitch();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getYaw();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float roll = 1;
 * @return {number}
 */
proto.component.orbita3d.Float3D.prototype.getRoll = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.component.orbita3d.Float3D} returns this
 */
proto.component.orbita3d.Float3D.prototype.setRoll = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float pitch = 2;
 * @return {number}
 */
proto.component.orbita3d.Float3D.prototype.getPitch = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.component.orbita3d.Float3D} returns this
 */
proto.component.orbita3d.Float3D.prototype.setPitch = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float yaw = 3;
 * @return {number}
 */
proto.component.orbita3d.Float3D.prototype.getYaw = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.component.orbita3d.Float3D} returns this
 */
proto.component.orbita3d.Float3D.prototype.setYaw = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.component.orbita3d.Orbita3DCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.component.orbita3d.Orbita3DCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && component_pb.ComponentId.toObject(includeInstance, f),
    compliant: (f = msg.getCompliant()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    goalPosition: (f = msg.getGoalPosition()) && kinematics_pb.Quaternion.toObject(includeInstance, f),
    speedLimit: (f = msg.getSpeedLimit()) && proto.component.orbita3d.Float3D.toObject(includeInstance, f),
    torqueLimit: (f = msg.getTorqueLimit()) && proto.component.orbita3d.Float3D.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.component.orbita3d.Orbita3DCommand}
 */
proto.component.orbita3d.Orbita3DCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.component.orbita3d.Orbita3DCommand;
  return proto.component.orbita3d.Orbita3DCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.component.orbita3d.Orbita3DCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.component.orbita3d.Orbita3DCommand}
 */
proto.component.orbita3d.Orbita3DCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new component_pb.ComponentId;
      reader.readMessage(value,component_pb.ComponentId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setCompliant(value);
      break;
    case 3:
      var value = new kinematics_pb.Quaternion;
      reader.readMessage(value,kinematics_pb.Quaternion.deserializeBinaryFromReader);
      msg.setGoalPosition(value);
      break;
    case 4:
      var value = new proto.component.orbita3d.Float3D;
      reader.readMessage(value,proto.component.orbita3d.Float3D.deserializeBinaryFromReader);
      msg.setSpeedLimit(value);
      break;
    case 5:
      var value = new proto.component.orbita3d.Float3D;
      reader.readMessage(value,proto.component.orbita3d.Float3D.deserializeBinaryFromReader);
      msg.setTorqueLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.component.orbita3d.Orbita3DCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.component.orbita3d.Orbita3DCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      component_pb.ComponentId.serializeBinaryToWriter
    );
  }
  f = message.getCompliant();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getGoalPosition();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      kinematics_pb.Quaternion.serializeBinaryToWriter
    );
  }
  f = message.getSpeedLimit();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.component.orbita3d.Float3D.serializeBinaryToWriter
    );
  }
  f = message.getTorqueLimit();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.component.orbita3d.Float3D.serializeBinaryToWriter
    );
  }
};


/**
 * optional component.ComponentId id = 1;
 * @return {?proto.component.ComponentId}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.getId = function() {
  return /** @type{?proto.component.ComponentId} */ (
    jspb.Message.getWrapperField(this, component_pb.ComponentId, 1));
};


/**
 * @param {?proto.component.ComponentId|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DCommand} returns this
*/
proto.component.orbita3d.Orbita3DCommand.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DCommand} returns this
 */
proto.component.orbita3d.Orbita3DCommand.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.BoolValue compliant = 2;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.getCompliant = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 2));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DCommand} returns this
*/
proto.component.orbita3d.Orbita3DCommand.prototype.setCompliant = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DCommand} returns this
 */
proto.component.orbita3d.Orbita3DCommand.prototype.clearCompliant = function() {
  return this.setCompliant(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.hasCompliant = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional reachy.kinematics.Quaternion goal_position = 3;
 * @return {?proto.reachy.kinematics.Quaternion}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.getGoalPosition = function() {
  return /** @type{?proto.reachy.kinematics.Quaternion} */ (
    jspb.Message.getWrapperField(this, kinematics_pb.Quaternion, 3));
};


/**
 * @param {?proto.reachy.kinematics.Quaternion|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DCommand} returns this
*/
proto.component.orbita3d.Orbita3DCommand.prototype.setGoalPosition = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DCommand} returns this
 */
proto.component.orbita3d.Orbita3DCommand.prototype.clearGoalPosition = function() {
  return this.setGoalPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.hasGoalPosition = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Float3D speed_limit = 4;
 * @return {?proto.component.orbita3d.Float3D}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.getSpeedLimit = function() {
  return /** @type{?proto.component.orbita3d.Float3D} */ (
    jspb.Message.getWrapperField(this, proto.component.orbita3d.Float3D, 4));
};


/**
 * @param {?proto.component.orbita3d.Float3D|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DCommand} returns this
*/
proto.component.orbita3d.Orbita3DCommand.prototype.setSpeedLimit = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DCommand} returns this
 */
proto.component.orbita3d.Orbita3DCommand.prototype.clearSpeedLimit = function() {
  return this.setSpeedLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.hasSpeedLimit = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Float3D torque_limit = 5;
 * @return {?proto.component.orbita3d.Float3D}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.getTorqueLimit = function() {
  return /** @type{?proto.component.orbita3d.Float3D} */ (
    jspb.Message.getWrapperField(this, proto.component.orbita3d.Float3D, 5));
};


/**
 * @param {?proto.component.orbita3d.Float3D|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DCommand} returns this
*/
proto.component.orbita3d.Orbita3DCommand.prototype.setTorqueLimit = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DCommand} returns this
 */
proto.component.orbita3d.Orbita3DCommand.prototype.clearTorqueLimit = function() {
  return this.setTorqueLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DCommand.prototype.hasTorqueLimit = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.component.orbita3d.Orbita3DInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.component.orbita3d.Orbita3DInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.component.orbita3d.Orbita3DInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && component_pb.ComponentId.toObject(includeInstance, f),
    serialNumber: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.component.orbita3d.Orbita3DInfo}
 */
proto.component.orbita3d.Orbita3DInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.component.orbita3d.Orbita3DInfo;
  return proto.component.orbita3d.Orbita3DInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.component.orbita3d.Orbita3DInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.component.orbita3d.Orbita3DInfo}
 */
proto.component.orbita3d.Orbita3DInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new component_pb.ComponentId;
      reader.readMessage(value,component_pb.ComponentId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerialNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.component.orbita3d.Orbita3DInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.component.orbita3d.Orbita3DInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.component.orbita3d.Orbita3DInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      component_pb.ComponentId.serializeBinaryToWriter
    );
  }
  f = message.getSerialNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional component.ComponentId id = 1;
 * @return {?proto.component.ComponentId}
 */
proto.component.orbita3d.Orbita3DInfo.prototype.getId = function() {
  return /** @type{?proto.component.ComponentId} */ (
    jspb.Message.getWrapperField(this, component_pb.ComponentId, 1));
};


/**
 * @param {?proto.component.ComponentId|undefined} value
 * @return {!proto.component.orbita3d.Orbita3DInfo} returns this
*/
proto.component.orbita3d.Orbita3DInfo.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.component.orbita3d.Orbita3DInfo} returns this
 */
proto.component.orbita3d.Orbita3DInfo.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.component.orbita3d.Orbita3DInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string serial_number = 2;
 * @return {string}
 */
proto.component.orbita3d.Orbita3DInfo.prototype.getSerialNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.component.orbita3d.Orbita3DInfo} returns this
 */
proto.component.orbita3d.Orbita3DInfo.prototype.setSerialNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.component.orbita3d.ListOfOrbita3DInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.component.orbita3d.ListOfOrbita3DInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.component.orbita3d.ListOfOrbita3DInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.component.orbita3d.ListOfOrbita3DInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.ListOfOrbita3DInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoList: jspb.Message.toObjectList(msg.getInfoList(),
    proto.component.orbita3d.Orbita3DInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.component.orbita3d.ListOfOrbita3DInfo}
 */
proto.component.orbita3d.ListOfOrbita3DInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.component.orbita3d.ListOfOrbita3DInfo;
  return proto.component.orbita3d.ListOfOrbita3DInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.component.orbita3d.ListOfOrbita3DInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.component.orbita3d.ListOfOrbita3DInfo}
 */
proto.component.orbita3d.ListOfOrbita3DInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.component.orbita3d.Orbita3DInfo;
      reader.readMessage(value,proto.component.orbita3d.Orbita3DInfo.deserializeBinaryFromReader);
      msg.addInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.component.orbita3d.ListOfOrbita3DInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.component.orbita3d.ListOfOrbita3DInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.component.orbita3d.ListOfOrbita3DInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.ListOfOrbita3DInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.component.orbita3d.Orbita3DInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Orbita3DInfo info = 1;
 * @return {!Array<!proto.component.orbita3d.Orbita3DInfo>}
 */
proto.component.orbita3d.ListOfOrbita3DInfo.prototype.getInfoList = function() {
  return /** @type{!Array<!proto.component.orbita3d.Orbita3DInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.component.orbita3d.Orbita3DInfo, 1));
};


/**
 * @param {!Array<!proto.component.orbita3d.Orbita3DInfo>} value
 * @return {!proto.component.orbita3d.ListOfOrbita3DInfo} returns this
*/
proto.component.orbita3d.ListOfOrbita3DInfo.prototype.setInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.component.orbita3d.Orbita3DInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.component.orbita3d.Orbita3DInfo}
 */
proto.component.orbita3d.ListOfOrbita3DInfo.prototype.addInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.component.orbita3d.Orbita3DInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.component.orbita3d.ListOfOrbita3DInfo} returns this
 */
proto.component.orbita3d.ListOfOrbita3DInfo.prototype.clearInfoList = function() {
  return this.setInfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.component.orbita3d.Orbita3DStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.component.orbita3d.Orbita3DStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.component.orbita3d.Orbita3DStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DStatus.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.component.orbita3d.Orbita3DStatus}
 */
proto.component.orbita3d.Orbita3DStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.component.orbita3d.Orbita3DStatus;
  return proto.component.orbita3d.Orbita3DStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.component.orbita3d.Orbita3DStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.component.orbita3d.Orbita3DStatus}
 */
proto.component.orbita3d.Orbita3DStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.component.orbita3d.Orbita3DStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.component.orbita3d.Orbita3DStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.component.orbita3d.Orbita3DStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.component.orbita3d.Orbita3DStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.component.orbita3d.Orbita3DField = {
  NONE: 0,
  NAME: 1,
  UID: 2,
  PRESENT_POSITION: 3,
  PRESENT_SPEED: 4,
  PRESENT_LOAD: 5,
  TEMPERATURE: 6,
  JOINT_LIMIT: 7,
  COMPLIANT: 8,
  GOAL_POSITION: 9,
  SPEED_LIMIT: 10,
  TORQUE_LIMIT: 11,
  PID: 12,
  ALL: 15
};

goog.object.extend(exports, proto.component.orbita3d);

// source: arm.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var part_pb = require('./part_pb.js');
goog.object.extend(proto, part_pb);
var kinematics_pb = require('./kinematics_pb.js');
goog.object.extend(proto, kinematics_pb);
var error_pb = require('./error_pb.js');
goog.object.extend(proto, error_pb);
var orbita2d_pb = require('./orbita2d_pb.js');
goog.object.extend(proto, orbita2d_pb);
var orbita3d_pb = require('./orbita3d_pb.js');
goog.object.extend(proto, orbita3d_pb);
goog.exportSymbol('proto.reachy.part.arm.Arm', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmCartesianGoal', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmDescription', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmEndEffector', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmFKRequest', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmFKSolution', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmField', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmIKRequest', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmIKSolution', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmJointGoal', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmLimits', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmPosition', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmState', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmStatus', null, global);
goog.exportSymbol('proto.reachy.part.arm.ArmTemperatures', null, global);
goog.exportSymbol('proto.reachy.part.arm.ListOfArm', null, global);
goog.exportSymbol('proto.reachy.part.arm.SpeedLimit', null, global);
goog.exportSymbol('proto.reachy.part.arm.SpeedLimitRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmState.displayName = 'proto.reachy.part.arm.ArmState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmDescription.displayName = 'proto.reachy.part.arm.ArmDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.Arm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.Arm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.Arm.displayName = 'proto.reachy.part.arm.Arm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ListOfArm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reachy.part.arm.ListOfArm.repeatedFields_, null);
};
goog.inherits(proto.reachy.part.arm.ListOfArm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ListOfArm.displayName = 'proto.reachy.part.arm.ListOfArm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmPosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmPosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmPosition.displayName = 'proto.reachy.part.arm.ArmPosition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmCartesianGoal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmCartesianGoal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmCartesianGoal.displayName = 'proto.reachy.part.arm.ArmCartesianGoal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmJointGoal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmJointGoal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmJointGoal.displayName = 'proto.reachy.part.arm.ArmJointGoal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmEndEffector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmEndEffector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmEndEffector.displayName = 'proto.reachy.part.arm.ArmEndEffector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmFKRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmFKRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmFKRequest.displayName = 'proto.reachy.part.arm.ArmFKRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmFKSolution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmFKSolution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmFKSolution.displayName = 'proto.reachy.part.arm.ArmFKSolution';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmIKRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmIKRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmIKRequest.displayName = 'proto.reachy.part.arm.ArmIKRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmIKSolution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmIKSolution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmIKSolution.displayName = 'proto.reachy.part.arm.ArmIKSolution';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmStatus.displayName = 'proto.reachy.part.arm.ArmStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.SpeedLimitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.SpeedLimitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.SpeedLimitRequest.displayName = 'proto.reachy.part.arm.SpeedLimitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmLimits = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmLimits, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmLimits.displayName = 'proto.reachy.part.arm.ArmLimits';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reachy.part.arm.ArmTemperatures = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reachy.part.arm.ArmTemperatures, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reachy.part.arm.ArmTemperatures.displayName = 'proto.reachy.part.arm.ArmTemperatures';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmState.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmState.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    id: (f = msg.getId()) && part_pb.PartId.toObject(includeInstance, f),
    activated: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    shoulderState: (f = msg.getShoulderState()) && orbita2d_pb.Orbita2DState.toObject(includeInstance, f),
    elbowState: (f = msg.getElbowState()) && orbita2d_pb.Orbita2DState.toObject(includeInstance, f),
    wristState: (f = msg.getWristState()) && orbita3d_pb.Orbita3DState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmState}
 */
proto.reachy.part.arm.ArmState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmState;
  return proto.reachy.part.arm.ArmState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmState}
 */
proto.reachy.part.arm.ArmState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 2:
      var value = new part_pb.PartId;
      reader.readMessage(value,part_pb.PartId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActivated(value);
      break;
    case 4:
      var value = new orbita2d_pb.Orbita2DState;
      reader.readMessage(value,orbita2d_pb.Orbita2DState.deserializeBinaryFromReader);
      msg.setShoulderState(value);
      break;
    case 5:
      var value = new orbita2d_pb.Orbita2DState;
      reader.readMessage(value,orbita2d_pb.Orbita2DState.deserializeBinaryFromReader);
      msg.setElbowState(value);
      break;
    case 6:
      var value = new orbita3d_pb.Orbita3DState;
      reader.readMessage(value,orbita3d_pb.Orbita3DState.deserializeBinaryFromReader);
      msg.setWristState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      part_pb.PartId.serializeBinaryToWriter
    );
  }
  f = message.getActivated();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getShoulderState();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      orbita2d_pb.Orbita2DState.serializeBinaryToWriter
    );
  }
  f = message.getElbowState();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      orbita2d_pb.Orbita2DState.serializeBinaryToWriter
    );
  }
  f = message.getWristState();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      orbita3d_pb.Orbita3DState.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.reachy.part.arm.ArmState.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.reachy.part.arm.ArmState} returns this
*/
proto.reachy.part.arm.ArmState.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmState} returns this
 */
proto.reachy.part.arm.ArmState.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmState.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional reachy.part.PartId id = 2;
 * @return {?proto.reachy.part.PartId}
 */
proto.reachy.part.arm.ArmState.prototype.getId = function() {
  return /** @type{?proto.reachy.part.PartId} */ (
    jspb.Message.getWrapperField(this, part_pb.PartId, 2));
};


/**
 * @param {?proto.reachy.part.PartId|undefined} value
 * @return {!proto.reachy.part.arm.ArmState} returns this
*/
proto.reachy.part.arm.ArmState.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmState} returns this
 */
proto.reachy.part.arm.ArmState.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmState.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool activated = 3;
 * @return {boolean}
 */
proto.reachy.part.arm.ArmState.prototype.getActivated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reachy.part.arm.ArmState} returns this
 */
proto.reachy.part.arm.ArmState.prototype.setActivated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional component.orbita2d.Orbita2DState shoulder_state = 4;
 * @return {?proto.component.orbita2d.Orbita2DState}
 */
proto.reachy.part.arm.ArmState.prototype.getShoulderState = function() {
  return /** @type{?proto.component.orbita2d.Orbita2DState} */ (
    jspb.Message.getWrapperField(this, orbita2d_pb.Orbita2DState, 4));
};


/**
 * @param {?proto.component.orbita2d.Orbita2DState|undefined} value
 * @return {!proto.reachy.part.arm.ArmState} returns this
*/
proto.reachy.part.arm.ArmState.prototype.setShoulderState = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmState} returns this
 */
proto.reachy.part.arm.ArmState.prototype.clearShoulderState = function() {
  return this.setShoulderState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmState.prototype.hasShoulderState = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional component.orbita2d.Orbita2DState elbow_state = 5;
 * @return {?proto.component.orbita2d.Orbita2DState}
 */
proto.reachy.part.arm.ArmState.prototype.getElbowState = function() {
  return /** @type{?proto.component.orbita2d.Orbita2DState} */ (
    jspb.Message.getWrapperField(this, orbita2d_pb.Orbita2DState, 5));
};


/**
 * @param {?proto.component.orbita2d.Orbita2DState|undefined} value
 * @return {!proto.reachy.part.arm.ArmState} returns this
*/
proto.reachy.part.arm.ArmState.prototype.setElbowState = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmState} returns this
 */
proto.reachy.part.arm.ArmState.prototype.clearElbowState = function() {
  return this.setElbowState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmState.prototype.hasElbowState = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional component.orbita3d.Orbita3DState wrist_state = 6;
 * @return {?proto.component.orbita3d.Orbita3DState}
 */
proto.reachy.part.arm.ArmState.prototype.getWristState = function() {
  return /** @type{?proto.component.orbita3d.Orbita3DState} */ (
    jspb.Message.getWrapperField(this, orbita3d_pb.Orbita3DState, 6));
};


/**
 * @param {?proto.component.orbita3d.Orbita3DState|undefined} value
 * @return {!proto.reachy.part.arm.ArmState} returns this
*/
proto.reachy.part.arm.ArmState.prototype.setWristState = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmState} returns this
 */
proto.reachy.part.arm.ArmState.prototype.clearWristState = function() {
  return this.setWristState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmState.prototype.hasWristState = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    shoulder: (f = msg.getShoulder()) && orbita2d_pb.Orbita2D.toObject(includeInstance, f),
    elbow: (f = msg.getElbow()) && orbita2d_pb.Orbita2D.toObject(includeInstance, f),
    wrist: (f = msg.getWrist()) && orbita3d_pb.Orbita3D.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmDescription}
 */
proto.reachy.part.arm.ArmDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmDescription;
  return proto.reachy.part.arm.ArmDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmDescription}
 */
proto.reachy.part.arm.ArmDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new orbita2d_pb.Orbita2D;
      reader.readMessage(value,orbita2d_pb.Orbita2D.deserializeBinaryFromReader);
      msg.setShoulder(value);
      break;
    case 2:
      var value = new orbita2d_pb.Orbita2D;
      reader.readMessage(value,orbita2d_pb.Orbita2D.deserializeBinaryFromReader);
      msg.setElbow(value);
      break;
    case 3:
      var value = new orbita3d_pb.Orbita3D;
      reader.readMessage(value,orbita3d_pb.Orbita3D.deserializeBinaryFromReader);
      msg.setWrist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShoulder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      orbita2d_pb.Orbita2D.serializeBinaryToWriter
    );
  }
  f = message.getElbow();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      orbita2d_pb.Orbita2D.serializeBinaryToWriter
    );
  }
  f = message.getWrist();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      orbita3d_pb.Orbita3D.serializeBinaryToWriter
    );
  }
};


/**
 * optional component.orbita2d.Orbita2D shoulder = 1;
 * @return {?proto.component.orbita2d.Orbita2D}
 */
proto.reachy.part.arm.ArmDescription.prototype.getShoulder = function() {
  return /** @type{?proto.component.orbita2d.Orbita2D} */ (
    jspb.Message.getWrapperField(this, orbita2d_pb.Orbita2D, 1));
};


/**
 * @param {?proto.component.orbita2d.Orbita2D|undefined} value
 * @return {!proto.reachy.part.arm.ArmDescription} returns this
*/
proto.reachy.part.arm.ArmDescription.prototype.setShoulder = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmDescription} returns this
 */
proto.reachy.part.arm.ArmDescription.prototype.clearShoulder = function() {
  return this.setShoulder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmDescription.prototype.hasShoulder = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional component.orbita2d.Orbita2D elbow = 2;
 * @return {?proto.component.orbita2d.Orbita2D}
 */
proto.reachy.part.arm.ArmDescription.prototype.getElbow = function() {
  return /** @type{?proto.component.orbita2d.Orbita2D} */ (
    jspb.Message.getWrapperField(this, orbita2d_pb.Orbita2D, 2));
};


/**
 * @param {?proto.component.orbita2d.Orbita2D|undefined} value
 * @return {!proto.reachy.part.arm.ArmDescription} returns this
*/
proto.reachy.part.arm.ArmDescription.prototype.setElbow = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmDescription} returns this
 */
proto.reachy.part.arm.ArmDescription.prototype.clearElbow = function() {
  return this.setElbow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmDescription.prototype.hasElbow = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional component.orbita3d.Orbita3D wrist = 3;
 * @return {?proto.component.orbita3d.Orbita3D}
 */
proto.reachy.part.arm.ArmDescription.prototype.getWrist = function() {
  return /** @type{?proto.component.orbita3d.Orbita3D} */ (
    jspb.Message.getWrapperField(this, orbita3d_pb.Orbita3D, 3));
};


/**
 * @param {?proto.component.orbita3d.Orbita3D|undefined} value
 * @return {!proto.reachy.part.arm.ArmDescription} returns this
*/
proto.reachy.part.arm.ArmDescription.prototype.setWrist = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmDescription} returns this
 */
proto.reachy.part.arm.ArmDescription.prototype.clearWrist = function() {
  return this.setWrist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmDescription.prototype.hasWrist = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.Arm.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.Arm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.Arm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.Arm.toObject = function(includeInstance, msg) {
  var f, obj = {
    partId: (f = msg.getPartId()) && part_pb.PartId.toObject(includeInstance, f),
    description: (f = msg.getDescription()) && proto.reachy.part.arm.ArmDescription.toObject(includeInstance, f),
    info: (f = msg.getInfo()) && part_pb.PartInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.Arm}
 */
proto.reachy.part.arm.Arm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.Arm;
  return proto.reachy.part.arm.Arm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.Arm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.Arm}
 */
proto.reachy.part.arm.Arm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new part_pb.PartId;
      reader.readMessage(value,part_pb.PartId.deserializeBinaryFromReader);
      msg.setPartId(value);
      break;
    case 2:
      var value = new proto.reachy.part.arm.ArmDescription;
      reader.readMessage(value,proto.reachy.part.arm.ArmDescription.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    case 5:
      var value = new part_pb.PartInfo;
      reader.readMessage(value,part_pb.PartInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.Arm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.Arm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.Arm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.Arm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      part_pb.PartId.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reachy.part.arm.ArmDescription.serializeBinaryToWriter
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      part_pb.PartInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional reachy.part.PartId part_id = 1;
 * @return {?proto.reachy.part.PartId}
 */
proto.reachy.part.arm.Arm.prototype.getPartId = function() {
  return /** @type{?proto.reachy.part.PartId} */ (
    jspb.Message.getWrapperField(this, part_pb.PartId, 1));
};


/**
 * @param {?proto.reachy.part.PartId|undefined} value
 * @return {!proto.reachy.part.arm.Arm} returns this
*/
proto.reachy.part.arm.Arm.prototype.setPartId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.Arm} returns this
 */
proto.reachy.part.arm.Arm.prototype.clearPartId = function() {
  return this.setPartId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.Arm.prototype.hasPartId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ArmDescription description = 2;
 * @return {?proto.reachy.part.arm.ArmDescription}
 */
proto.reachy.part.arm.Arm.prototype.getDescription = function() {
  return /** @type{?proto.reachy.part.arm.ArmDescription} */ (
    jspb.Message.getWrapperField(this, proto.reachy.part.arm.ArmDescription, 2));
};


/**
 * @param {?proto.reachy.part.arm.ArmDescription|undefined} value
 * @return {!proto.reachy.part.arm.Arm} returns this
*/
proto.reachy.part.arm.Arm.prototype.setDescription = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.Arm} returns this
 */
proto.reachy.part.arm.Arm.prototype.clearDescription = function() {
  return this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.Arm.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional reachy.part.PartInfo info = 5;
 * @return {?proto.reachy.part.PartInfo}
 */
proto.reachy.part.arm.Arm.prototype.getInfo = function() {
  return /** @type{?proto.reachy.part.PartInfo} */ (
    jspb.Message.getWrapperField(this, part_pb.PartInfo, 5));
};


/**
 * @param {?proto.reachy.part.PartInfo|undefined} value
 * @return {!proto.reachy.part.arm.Arm} returns this
*/
proto.reachy.part.arm.Arm.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.Arm} returns this
 */
proto.reachy.part.arm.Arm.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.Arm.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reachy.part.arm.ListOfArm.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ListOfArm.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ListOfArm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ListOfArm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ListOfArm.toObject = function(includeInstance, msg) {
  var f, obj = {
    armList: jspb.Message.toObjectList(msg.getArmList(),
    proto.reachy.part.arm.Arm.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ListOfArm}
 */
proto.reachy.part.arm.ListOfArm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ListOfArm;
  return proto.reachy.part.arm.ListOfArm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ListOfArm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ListOfArm}
 */
proto.reachy.part.arm.ListOfArm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reachy.part.arm.Arm;
      reader.readMessage(value,proto.reachy.part.arm.Arm.deserializeBinaryFromReader);
      msg.addArm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ListOfArm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ListOfArm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ListOfArm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ListOfArm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArmList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reachy.part.arm.Arm.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Arm arm = 1;
 * @return {!Array<!proto.reachy.part.arm.Arm>}
 */
proto.reachy.part.arm.ListOfArm.prototype.getArmList = function() {
  return /** @type{!Array<!proto.reachy.part.arm.Arm>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reachy.part.arm.Arm, 1));
};


/**
 * @param {!Array<!proto.reachy.part.arm.Arm>} value
 * @return {!proto.reachy.part.arm.ListOfArm} returns this
*/
proto.reachy.part.arm.ListOfArm.prototype.setArmList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reachy.part.arm.Arm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reachy.part.arm.Arm}
 */
proto.reachy.part.arm.ListOfArm.prototype.addArm = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reachy.part.arm.Arm, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reachy.part.arm.ListOfArm} returns this
 */
proto.reachy.part.arm.ListOfArm.prototype.clearArmList = function() {
  return this.setArmList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmPosition.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmPosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmPosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmPosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    shoulderPosition: (f = msg.getShoulderPosition()) && orbita2d_pb.Pose2D.toObject(includeInstance, f),
    elbowPosition: (f = msg.getElbowPosition()) && orbita2d_pb.Pose2D.toObject(includeInstance, f),
    wristPosition: (f = msg.getWristPosition()) && kinematics_pb.Rotation3D.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmPosition}
 */
proto.reachy.part.arm.ArmPosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmPosition;
  return proto.reachy.part.arm.ArmPosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmPosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmPosition}
 */
proto.reachy.part.arm.ArmPosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new orbita2d_pb.Pose2D;
      reader.readMessage(value,orbita2d_pb.Pose2D.deserializeBinaryFromReader);
      msg.setShoulderPosition(value);
      break;
    case 2:
      var value = new orbita2d_pb.Pose2D;
      reader.readMessage(value,orbita2d_pb.Pose2D.deserializeBinaryFromReader);
      msg.setElbowPosition(value);
      break;
    case 3:
      var value = new kinematics_pb.Rotation3D;
      reader.readMessage(value,kinematics_pb.Rotation3D.deserializeBinaryFromReader);
      msg.setWristPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmPosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmPosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmPosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmPosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShoulderPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      orbita2d_pb.Pose2D.serializeBinaryToWriter
    );
  }
  f = message.getElbowPosition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      orbita2d_pb.Pose2D.serializeBinaryToWriter
    );
  }
  f = message.getWristPosition();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      kinematics_pb.Rotation3D.serializeBinaryToWriter
    );
  }
};


/**
 * optional component.orbita2d.Pose2D shoulder_position = 1;
 * @return {?proto.component.orbita2d.Pose2D}
 */
proto.reachy.part.arm.ArmPosition.prototype.getShoulderPosition = function() {
  return /** @type{?proto.component.orbita2d.Pose2D} */ (
    jspb.Message.getWrapperField(this, orbita2d_pb.Pose2D, 1));
};


/**
 * @param {?proto.component.orbita2d.Pose2D|undefined} value
 * @return {!proto.reachy.part.arm.ArmPosition} returns this
*/
proto.reachy.part.arm.ArmPosition.prototype.setShoulderPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmPosition} returns this
 */
proto.reachy.part.arm.ArmPosition.prototype.clearShoulderPosition = function() {
  return this.setShoulderPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmPosition.prototype.hasShoulderPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional component.orbita2d.Pose2D elbow_position = 2;
 * @return {?proto.component.orbita2d.Pose2D}
 */
proto.reachy.part.arm.ArmPosition.prototype.getElbowPosition = function() {
  return /** @type{?proto.component.orbita2d.Pose2D} */ (
    jspb.Message.getWrapperField(this, orbita2d_pb.Pose2D, 2));
};


/**
 * @param {?proto.component.orbita2d.Pose2D|undefined} value
 * @return {!proto.reachy.part.arm.ArmPosition} returns this
*/
proto.reachy.part.arm.ArmPosition.prototype.setElbowPosition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmPosition} returns this
 */
proto.reachy.part.arm.ArmPosition.prototype.clearElbowPosition = function() {
  return this.setElbowPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmPosition.prototype.hasElbowPosition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional reachy.kinematics.Rotation3D wrist_position = 3;
 * @return {?proto.reachy.kinematics.Rotation3D}
 */
proto.reachy.part.arm.ArmPosition.prototype.getWristPosition = function() {
  return /** @type{?proto.reachy.kinematics.Rotation3D} */ (
    jspb.Message.getWrapperField(this, kinematics_pb.Rotation3D, 3));
};


/**
 * @param {?proto.reachy.kinematics.Rotation3D|undefined} value
 * @return {!proto.reachy.part.arm.ArmPosition} returns this
*/
proto.reachy.part.arm.ArmPosition.prototype.setWristPosition = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmPosition} returns this
 */
proto.reachy.part.arm.ArmPosition.prototype.clearWristPosition = function() {
  return this.setWristPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmPosition.prototype.hasWristPosition = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmCartesianGoal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmCartesianGoal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmCartesianGoal.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && part_pb.PartId.toObject(includeInstance, f),
    targetPosition: (f = msg.getTargetPosition()) && kinematics_pb.Point.toObject(includeInstance, f),
    targetOrientation: (f = msg.getTargetOrientation()) && kinematics_pb.Rotation3D.toObject(includeInstance, f),
    positionTolerance: (f = msg.getPositionTolerance()) && kinematics_pb.PointDistanceTolerances.toObject(includeInstance, f),
    orientationTolerance: (f = msg.getOrientationTolerance()) && kinematics_pb.ExtEulerAnglesTolerances.toObject(includeInstance, f),
    duration: (f = msg.getDuration()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmCartesianGoal}
 */
proto.reachy.part.arm.ArmCartesianGoal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmCartesianGoal;
  return proto.reachy.part.arm.ArmCartesianGoal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmCartesianGoal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmCartesianGoal}
 */
proto.reachy.part.arm.ArmCartesianGoal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new part_pb.PartId;
      reader.readMessage(value,part_pb.PartId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new kinematics_pb.Point;
      reader.readMessage(value,kinematics_pb.Point.deserializeBinaryFromReader);
      msg.setTargetPosition(value);
      break;
    case 3:
      var value = new kinematics_pb.Rotation3D;
      reader.readMessage(value,kinematics_pb.Rotation3D.deserializeBinaryFromReader);
      msg.setTargetOrientation(value);
      break;
    case 4:
      var value = new kinematics_pb.PointDistanceTolerances;
      reader.readMessage(value,kinematics_pb.PointDistanceTolerances.deserializeBinaryFromReader);
      msg.setPositionTolerance(value);
      break;
    case 5:
      var value = new kinematics_pb.ExtEulerAnglesTolerances;
      reader.readMessage(value,kinematics_pb.ExtEulerAnglesTolerances.deserializeBinaryFromReader);
      msg.setOrientationTolerance(value);
      break;
    case 10:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmCartesianGoal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmCartesianGoal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmCartesianGoal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      part_pb.PartId.serializeBinaryToWriter
    );
  }
  f = message.getTargetPosition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      kinematics_pb.Point.serializeBinaryToWriter
    );
  }
  f = message.getTargetOrientation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      kinematics_pb.Rotation3D.serializeBinaryToWriter
    );
  }
  f = message.getPositionTolerance();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      kinematics_pb.PointDistanceTolerances.serializeBinaryToWriter
    );
  }
  f = message.getOrientationTolerance();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      kinematics_pb.ExtEulerAnglesTolerances.serializeBinaryToWriter
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional reachy.part.PartId id = 1;
 * @return {?proto.reachy.part.PartId}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.getId = function() {
  return /** @type{?proto.reachy.part.PartId} */ (
    jspb.Message.getWrapperField(this, part_pb.PartId, 1));
};


/**
 * @param {?proto.reachy.part.PartId|undefined} value
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
*/
proto.reachy.part.arm.ArmCartesianGoal.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional reachy.kinematics.Point target_position = 2;
 * @return {?proto.reachy.kinematics.Point}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.getTargetPosition = function() {
  return /** @type{?proto.reachy.kinematics.Point} */ (
    jspb.Message.getWrapperField(this, kinematics_pb.Point, 2));
};


/**
 * @param {?proto.reachy.kinematics.Point|undefined} value
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
*/
proto.reachy.part.arm.ArmCartesianGoal.prototype.setTargetPosition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.clearTargetPosition = function() {
  return this.setTargetPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.hasTargetPosition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional reachy.kinematics.Rotation3D target_orientation = 3;
 * @return {?proto.reachy.kinematics.Rotation3D}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.getTargetOrientation = function() {
  return /** @type{?proto.reachy.kinematics.Rotation3D} */ (
    jspb.Message.getWrapperField(this, kinematics_pb.Rotation3D, 3));
};


/**
 * @param {?proto.reachy.kinematics.Rotation3D|undefined} value
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
*/
proto.reachy.part.arm.ArmCartesianGoal.prototype.setTargetOrientation = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.clearTargetOrientation = function() {
  return this.setTargetOrientation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.hasTargetOrientation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional reachy.kinematics.PointDistanceTolerances position_tolerance = 4;
 * @return {?proto.reachy.kinematics.PointDistanceTolerances}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.getPositionTolerance = function() {
  return /** @type{?proto.reachy.kinematics.PointDistanceTolerances} */ (
    jspb.Message.getWrapperField(this, kinematics_pb.PointDistanceTolerances, 4));
};


/**
 * @param {?proto.reachy.kinematics.PointDistanceTolerances|undefined} value
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
*/
proto.reachy.part.arm.ArmCartesianGoal.prototype.setPositionTolerance = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.clearPositionTolerance = function() {
  return this.setPositionTolerance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.hasPositionTolerance = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional reachy.kinematics.ExtEulerAnglesTolerances orientation_tolerance = 5;
 * @return {?proto.reachy.kinematics.ExtEulerAnglesTolerances}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.getOrientationTolerance = function() {
  return /** @type{?proto.reachy.kinematics.ExtEulerAnglesTolerances} */ (
    jspb.Message.getWrapperField(this, kinematics_pb.ExtEulerAnglesTolerances, 5));
};


/**
 * @param {?proto.reachy.kinematics.ExtEulerAnglesTolerances|undefined} value
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
*/
proto.reachy.part.arm.ArmCartesianGoal.prototype.setOrientationTolerance = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.clearOrientationTolerance = function() {
  return this.setOrientationTolerance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.hasOrientationTolerance = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.FloatValue duration = 10;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 10));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
*/
proto.reachy.part.arm.ArmCartesianGoal.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmCartesianGoal} returns this
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmCartesianGoal.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmJointGoal.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmJointGoal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmJointGoal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmJointGoal.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && part_pb.PartId.toObject(includeInstance, f),
    position: (f = msg.getPosition()) && proto.reachy.part.arm.ArmPosition.toObject(includeInstance, f),
    duration: (f = msg.getDuration()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmJointGoal}
 */
proto.reachy.part.arm.ArmJointGoal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmJointGoal;
  return proto.reachy.part.arm.ArmJointGoal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmJointGoal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmJointGoal}
 */
proto.reachy.part.arm.ArmJointGoal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new part_pb.PartId;
      reader.readMessage(value,part_pb.PartId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.reachy.part.arm.ArmPosition;
      reader.readMessage(value,proto.reachy.part.arm.ArmPosition.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmJointGoal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmJointGoal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmJointGoal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmJointGoal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      part_pb.PartId.serializeBinaryToWriter
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reachy.part.arm.ArmPosition.serializeBinaryToWriter
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional reachy.part.PartId id = 1;
 * @return {?proto.reachy.part.PartId}
 */
proto.reachy.part.arm.ArmJointGoal.prototype.getId = function() {
  return /** @type{?proto.reachy.part.PartId} */ (
    jspb.Message.getWrapperField(this, part_pb.PartId, 1));
};


/**
 * @param {?proto.reachy.part.PartId|undefined} value
 * @return {!proto.reachy.part.arm.ArmJointGoal} returns this
*/
proto.reachy.part.arm.ArmJointGoal.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmJointGoal} returns this
 */
proto.reachy.part.arm.ArmJointGoal.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmJointGoal.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ArmPosition position = 2;
 * @return {?proto.reachy.part.arm.ArmPosition}
 */
proto.reachy.part.arm.ArmJointGoal.prototype.getPosition = function() {
  return /** @type{?proto.reachy.part.arm.ArmPosition} */ (
    jspb.Message.getWrapperField(this, proto.reachy.part.arm.ArmPosition, 2));
};


/**
 * @param {?proto.reachy.part.arm.ArmPosition|undefined} value
 * @return {!proto.reachy.part.arm.ArmJointGoal} returns this
*/
proto.reachy.part.arm.ArmJointGoal.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmJointGoal} returns this
 */
proto.reachy.part.arm.ArmJointGoal.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmJointGoal.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.FloatValue duration = 3;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.reachy.part.arm.ArmJointGoal.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 3));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.reachy.part.arm.ArmJointGoal} returns this
*/
proto.reachy.part.arm.ArmJointGoal.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmJointGoal} returns this
 */
proto.reachy.part.arm.ArmJointGoal.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmJointGoal.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmEndEffector.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmEndEffector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmEndEffector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmEndEffector.toObject = function(includeInstance, msg) {
  var f, obj = {
    pose: (f = msg.getPose()) && kinematics_pb.Matrix4x4.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmEndEffector}
 */
proto.reachy.part.arm.ArmEndEffector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmEndEffector;
  return proto.reachy.part.arm.ArmEndEffector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmEndEffector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmEndEffector}
 */
proto.reachy.part.arm.ArmEndEffector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new kinematics_pb.Matrix4x4;
      reader.readMessage(value,kinematics_pb.Matrix4x4.deserializeBinaryFromReader);
      msg.setPose(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmEndEffector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmEndEffector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmEndEffector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmEndEffector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPose();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      kinematics_pb.Matrix4x4.serializeBinaryToWriter
    );
  }
};


/**
 * optional reachy.kinematics.Matrix4x4 pose = 1;
 * @return {?proto.reachy.kinematics.Matrix4x4}
 */
proto.reachy.part.arm.ArmEndEffector.prototype.getPose = function() {
  return /** @type{?proto.reachy.kinematics.Matrix4x4} */ (
    jspb.Message.getWrapperField(this, kinematics_pb.Matrix4x4, 1));
};


/**
 * @param {?proto.reachy.kinematics.Matrix4x4|undefined} value
 * @return {!proto.reachy.part.arm.ArmEndEffector} returns this
*/
proto.reachy.part.arm.ArmEndEffector.prototype.setPose = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmEndEffector} returns this
 */
proto.reachy.part.arm.ArmEndEffector.prototype.clearPose = function() {
  return this.setPose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmEndEffector.prototype.hasPose = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmFKRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmFKRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmFKRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmFKRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && part_pb.PartId.toObject(includeInstance, f),
    position: (f = msg.getPosition()) && proto.reachy.part.arm.ArmPosition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmFKRequest}
 */
proto.reachy.part.arm.ArmFKRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmFKRequest;
  return proto.reachy.part.arm.ArmFKRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmFKRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmFKRequest}
 */
proto.reachy.part.arm.ArmFKRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new part_pb.PartId;
      reader.readMessage(value,part_pb.PartId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.reachy.part.arm.ArmPosition;
      reader.readMessage(value,proto.reachy.part.arm.ArmPosition.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmFKRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmFKRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmFKRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmFKRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      part_pb.PartId.serializeBinaryToWriter
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reachy.part.arm.ArmPosition.serializeBinaryToWriter
    );
  }
};


/**
 * optional reachy.part.PartId id = 1;
 * @return {?proto.reachy.part.PartId}
 */
proto.reachy.part.arm.ArmFKRequest.prototype.getId = function() {
  return /** @type{?proto.reachy.part.PartId} */ (
    jspb.Message.getWrapperField(this, part_pb.PartId, 1));
};


/**
 * @param {?proto.reachy.part.PartId|undefined} value
 * @return {!proto.reachy.part.arm.ArmFKRequest} returns this
*/
proto.reachy.part.arm.ArmFKRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmFKRequest} returns this
 */
proto.reachy.part.arm.ArmFKRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmFKRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ArmPosition position = 2;
 * @return {?proto.reachy.part.arm.ArmPosition}
 */
proto.reachy.part.arm.ArmFKRequest.prototype.getPosition = function() {
  return /** @type{?proto.reachy.part.arm.ArmPosition} */ (
    jspb.Message.getWrapperField(this, proto.reachy.part.arm.ArmPosition, 2));
};


/**
 * @param {?proto.reachy.part.arm.ArmPosition|undefined} value
 * @return {!proto.reachy.part.arm.ArmFKRequest} returns this
*/
proto.reachy.part.arm.ArmFKRequest.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmFKRequest} returns this
 */
proto.reachy.part.arm.ArmFKRequest.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmFKRequest.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmFKSolution.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmFKSolution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmFKSolution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmFKSolution.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    endEffector: (f = msg.getEndEffector()) && proto.reachy.part.arm.ArmEndEffector.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmFKSolution}
 */
proto.reachy.part.arm.ArmFKSolution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmFKSolution;
  return proto.reachy.part.arm.ArmFKSolution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmFKSolution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmFKSolution}
 */
proto.reachy.part.arm.ArmFKSolution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.reachy.part.arm.ArmEndEffector;
      reader.readMessage(value,proto.reachy.part.arm.ArmEndEffector.deserializeBinaryFromReader);
      msg.setEndEffector(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmFKSolution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmFKSolution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmFKSolution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmFKSolution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getEndEffector();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reachy.part.arm.ArmEndEffector.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.reachy.part.arm.ArmFKSolution.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reachy.part.arm.ArmFKSolution} returns this
 */
proto.reachy.part.arm.ArmFKSolution.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional ArmEndEffector end_effector = 2;
 * @return {?proto.reachy.part.arm.ArmEndEffector}
 */
proto.reachy.part.arm.ArmFKSolution.prototype.getEndEffector = function() {
  return /** @type{?proto.reachy.part.arm.ArmEndEffector} */ (
    jspb.Message.getWrapperField(this, proto.reachy.part.arm.ArmEndEffector, 2));
};


/**
 * @param {?proto.reachy.part.arm.ArmEndEffector|undefined} value
 * @return {!proto.reachy.part.arm.ArmFKSolution} returns this
*/
proto.reachy.part.arm.ArmFKSolution.prototype.setEndEffector = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmFKSolution} returns this
 */
proto.reachy.part.arm.ArmFKSolution.prototype.clearEndEffector = function() {
  return this.setEndEffector(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmFKSolution.prototype.hasEndEffector = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmIKRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmIKRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmIKRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmIKRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && part_pb.PartId.toObject(includeInstance, f),
    target: (f = msg.getTarget()) && proto.reachy.part.arm.ArmEndEffector.toObject(includeInstance, f),
    q0: (f = msg.getQ0()) && proto.reachy.part.arm.ArmPosition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmIKRequest}
 */
proto.reachy.part.arm.ArmIKRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmIKRequest;
  return proto.reachy.part.arm.ArmIKRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmIKRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmIKRequest}
 */
proto.reachy.part.arm.ArmIKRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new part_pb.PartId;
      reader.readMessage(value,part_pb.PartId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.reachy.part.arm.ArmEndEffector;
      reader.readMessage(value,proto.reachy.part.arm.ArmEndEffector.deserializeBinaryFromReader);
      msg.setTarget(value);
      break;
    case 3:
      var value = new proto.reachy.part.arm.ArmPosition;
      reader.readMessage(value,proto.reachy.part.arm.ArmPosition.deserializeBinaryFromReader);
      msg.setQ0(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmIKRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmIKRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmIKRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmIKRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      part_pb.PartId.serializeBinaryToWriter
    );
  }
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reachy.part.arm.ArmEndEffector.serializeBinaryToWriter
    );
  }
  f = message.getQ0();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.reachy.part.arm.ArmPosition.serializeBinaryToWriter
    );
  }
};


/**
 * optional reachy.part.PartId id = 1;
 * @return {?proto.reachy.part.PartId}
 */
proto.reachy.part.arm.ArmIKRequest.prototype.getId = function() {
  return /** @type{?proto.reachy.part.PartId} */ (
    jspb.Message.getWrapperField(this, part_pb.PartId, 1));
};


/**
 * @param {?proto.reachy.part.PartId|undefined} value
 * @return {!proto.reachy.part.arm.ArmIKRequest} returns this
*/
proto.reachy.part.arm.ArmIKRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmIKRequest} returns this
 */
proto.reachy.part.arm.ArmIKRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmIKRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ArmEndEffector target = 2;
 * @return {?proto.reachy.part.arm.ArmEndEffector}
 */
proto.reachy.part.arm.ArmIKRequest.prototype.getTarget = function() {
  return /** @type{?proto.reachy.part.arm.ArmEndEffector} */ (
    jspb.Message.getWrapperField(this, proto.reachy.part.arm.ArmEndEffector, 2));
};


/**
 * @param {?proto.reachy.part.arm.ArmEndEffector|undefined} value
 * @return {!proto.reachy.part.arm.ArmIKRequest} returns this
*/
proto.reachy.part.arm.ArmIKRequest.prototype.setTarget = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmIKRequest} returns this
 */
proto.reachy.part.arm.ArmIKRequest.prototype.clearTarget = function() {
  return this.setTarget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmIKRequest.prototype.hasTarget = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ArmPosition q0 = 3;
 * @return {?proto.reachy.part.arm.ArmPosition}
 */
proto.reachy.part.arm.ArmIKRequest.prototype.getQ0 = function() {
  return /** @type{?proto.reachy.part.arm.ArmPosition} */ (
    jspb.Message.getWrapperField(this, proto.reachy.part.arm.ArmPosition, 3));
};


/**
 * @param {?proto.reachy.part.arm.ArmPosition|undefined} value
 * @return {!proto.reachy.part.arm.ArmIKRequest} returns this
*/
proto.reachy.part.arm.ArmIKRequest.prototype.setQ0 = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmIKRequest} returns this
 */
proto.reachy.part.arm.ArmIKRequest.prototype.clearQ0 = function() {
  return this.setQ0(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmIKRequest.prototype.hasQ0 = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmIKSolution.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmIKSolution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmIKSolution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmIKSolution.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    armPosition: (f = msg.getArmPosition()) && proto.reachy.part.arm.ArmPosition.toObject(includeInstance, f),
    error: (f = msg.getError()) && error_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmIKSolution}
 */
proto.reachy.part.arm.ArmIKSolution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmIKSolution;
  return proto.reachy.part.arm.ArmIKSolution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmIKSolution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmIKSolution}
 */
proto.reachy.part.arm.ArmIKSolution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.reachy.part.arm.ArmPosition;
      reader.readMessage(value,proto.reachy.part.arm.ArmPosition.deserializeBinaryFromReader);
      msg.setArmPosition(value);
      break;
    case 3:
      var value = new error_pb.Error;
      reader.readMessage(value,error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmIKSolution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmIKSolution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmIKSolution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmIKSolution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getArmPosition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.reachy.part.arm.ArmPosition.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      error_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.reachy.part.arm.ArmIKSolution.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reachy.part.arm.ArmIKSolution} returns this
 */
proto.reachy.part.arm.ArmIKSolution.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional ArmPosition arm_position = 2;
 * @return {?proto.reachy.part.arm.ArmPosition}
 */
proto.reachy.part.arm.ArmIKSolution.prototype.getArmPosition = function() {
  return /** @type{?proto.reachy.part.arm.ArmPosition} */ (
    jspb.Message.getWrapperField(this, proto.reachy.part.arm.ArmPosition, 2));
};


/**
 * @param {?proto.reachy.part.arm.ArmPosition|undefined} value
 * @return {!proto.reachy.part.arm.ArmIKSolution} returns this
*/
proto.reachy.part.arm.ArmIKSolution.prototype.setArmPosition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmIKSolution} returns this
 */
proto.reachy.part.arm.ArmIKSolution.prototype.clearArmPosition = function() {
  return this.setArmPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmIKSolution.prototype.hasArmPosition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional error.Error error = 3;
 * @return {?proto.error.Error}
 */
proto.reachy.part.arm.ArmIKSolution.prototype.getError = function() {
  return /** @type{?proto.error.Error} */ (
    jspb.Message.getWrapperField(this, error_pb.Error, 3));
};


/**
 * @param {?proto.error.Error|undefined} value
 * @return {!proto.reachy.part.arm.ArmIKSolution} returns this
*/
proto.reachy.part.arm.ArmIKSolution.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmIKSolution} returns this
 */
proto.reachy.part.arm.ArmIKSolution.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmIKSolution.prototype.hasError = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmStatus.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmStatus}
 */
proto.reachy.part.arm.ArmStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmStatus;
  return proto.reachy.part.arm.ArmStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmStatus}
 */
proto.reachy.part.arm.ArmStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.SpeedLimitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.SpeedLimitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.SpeedLimitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.SpeedLimitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && part_pb.PartId.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.SpeedLimitRequest}
 */
proto.reachy.part.arm.SpeedLimitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.SpeedLimitRequest;
  return proto.reachy.part.arm.SpeedLimitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.SpeedLimitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.SpeedLimitRequest}
 */
proto.reachy.part.arm.SpeedLimitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new part_pb.PartId;
      reader.readMessage(value,part_pb.PartId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.reachy.part.arm.SpeedLimit} */ (reader.readEnum());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.SpeedLimitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.SpeedLimitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.SpeedLimitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.SpeedLimitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      part_pb.PartId.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional reachy.part.PartId id = 1;
 * @return {?proto.reachy.part.PartId}
 */
proto.reachy.part.arm.SpeedLimitRequest.prototype.getId = function() {
  return /** @type{?proto.reachy.part.PartId} */ (
    jspb.Message.getWrapperField(this, part_pb.PartId, 1));
};


/**
 * @param {?proto.reachy.part.PartId|undefined} value
 * @return {!proto.reachy.part.arm.SpeedLimitRequest} returns this
*/
proto.reachy.part.arm.SpeedLimitRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.SpeedLimitRequest} returns this
 */
proto.reachy.part.arm.SpeedLimitRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.SpeedLimitRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SpeedLimit limit = 2;
 * @return {!proto.reachy.part.arm.SpeedLimit}
 */
proto.reachy.part.arm.SpeedLimitRequest.prototype.getLimit = function() {
  return /** @type {!proto.reachy.part.arm.SpeedLimit} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.reachy.part.arm.SpeedLimit} value
 * @return {!proto.reachy.part.arm.SpeedLimitRequest} returns this
 */
proto.reachy.part.arm.SpeedLimitRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmLimits.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmLimits.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmLimits} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmLimits.toObject = function(includeInstance, msg) {
  var f, obj = {
    shoulderLimits: (f = msg.getShoulderLimits()) && orbita2d_pb.Limits2D.toObject(includeInstance, f),
    elbowLimits: (f = msg.getElbowLimits()) && orbita2d_pb.Limits2D.toObject(includeInstance, f),
    wristLimits: (f = msg.getWristLimits()) && orbita3d_pb.Limits3D.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmLimits}
 */
proto.reachy.part.arm.ArmLimits.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmLimits;
  return proto.reachy.part.arm.ArmLimits.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmLimits} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmLimits}
 */
proto.reachy.part.arm.ArmLimits.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new orbita2d_pb.Limits2D;
      reader.readMessage(value,orbita2d_pb.Limits2D.deserializeBinaryFromReader);
      msg.setShoulderLimits(value);
      break;
    case 2:
      var value = new orbita2d_pb.Limits2D;
      reader.readMessage(value,orbita2d_pb.Limits2D.deserializeBinaryFromReader);
      msg.setElbowLimits(value);
      break;
    case 3:
      var value = new orbita3d_pb.Limits3D;
      reader.readMessage(value,orbita3d_pb.Limits3D.deserializeBinaryFromReader);
      msg.setWristLimits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmLimits.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmLimits.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmLimits} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmLimits.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShoulderLimits();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      orbita2d_pb.Limits2D.serializeBinaryToWriter
    );
  }
  f = message.getElbowLimits();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      orbita2d_pb.Limits2D.serializeBinaryToWriter
    );
  }
  f = message.getWristLimits();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      orbita3d_pb.Limits3D.serializeBinaryToWriter
    );
  }
};


/**
 * optional component.orbita2d.Limits2D shoulder_limits = 1;
 * @return {?proto.component.orbita2d.Limits2D}
 */
proto.reachy.part.arm.ArmLimits.prototype.getShoulderLimits = function() {
  return /** @type{?proto.component.orbita2d.Limits2D} */ (
    jspb.Message.getWrapperField(this, orbita2d_pb.Limits2D, 1));
};


/**
 * @param {?proto.component.orbita2d.Limits2D|undefined} value
 * @return {!proto.reachy.part.arm.ArmLimits} returns this
*/
proto.reachy.part.arm.ArmLimits.prototype.setShoulderLimits = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmLimits} returns this
 */
proto.reachy.part.arm.ArmLimits.prototype.clearShoulderLimits = function() {
  return this.setShoulderLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmLimits.prototype.hasShoulderLimits = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional component.orbita2d.Limits2D elbow_limits = 2;
 * @return {?proto.component.orbita2d.Limits2D}
 */
proto.reachy.part.arm.ArmLimits.prototype.getElbowLimits = function() {
  return /** @type{?proto.component.orbita2d.Limits2D} */ (
    jspb.Message.getWrapperField(this, orbita2d_pb.Limits2D, 2));
};


/**
 * @param {?proto.component.orbita2d.Limits2D|undefined} value
 * @return {!proto.reachy.part.arm.ArmLimits} returns this
*/
proto.reachy.part.arm.ArmLimits.prototype.setElbowLimits = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmLimits} returns this
 */
proto.reachy.part.arm.ArmLimits.prototype.clearElbowLimits = function() {
  return this.setElbowLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmLimits.prototype.hasElbowLimits = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional component.orbita3d.Limits3D wrist_limits = 3;
 * @return {?proto.component.orbita3d.Limits3D}
 */
proto.reachy.part.arm.ArmLimits.prototype.getWristLimits = function() {
  return /** @type{?proto.component.orbita3d.Limits3D} */ (
    jspb.Message.getWrapperField(this, orbita3d_pb.Limits3D, 3));
};


/**
 * @param {?proto.component.orbita3d.Limits3D|undefined} value
 * @return {!proto.reachy.part.arm.ArmLimits} returns this
*/
proto.reachy.part.arm.ArmLimits.prototype.setWristLimits = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmLimits} returns this
 */
proto.reachy.part.arm.ArmLimits.prototype.clearWristLimits = function() {
  return this.setWristLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmLimits.prototype.hasWristLimits = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reachy.part.arm.ArmTemperatures.prototype.toObject = function(opt_includeInstance) {
  return proto.reachy.part.arm.ArmTemperatures.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reachy.part.arm.ArmTemperatures} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmTemperatures.toObject = function(includeInstance, msg) {
  var f, obj = {
    shoulderTemperature: (f = msg.getShoulderTemperature()) && orbita2d_pb.Float2D.toObject(includeInstance, f),
    elbowTemperature: (f = msg.getElbowTemperature()) && orbita2d_pb.Float2D.toObject(includeInstance, f),
    wristTemperature: (f = msg.getWristTemperature()) && orbita3d_pb.Float3D.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reachy.part.arm.ArmTemperatures}
 */
proto.reachy.part.arm.ArmTemperatures.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reachy.part.arm.ArmTemperatures;
  return proto.reachy.part.arm.ArmTemperatures.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reachy.part.arm.ArmTemperatures} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reachy.part.arm.ArmTemperatures}
 */
proto.reachy.part.arm.ArmTemperatures.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new orbita2d_pb.Float2D;
      reader.readMessage(value,orbita2d_pb.Float2D.deserializeBinaryFromReader);
      msg.setShoulderTemperature(value);
      break;
    case 2:
      var value = new orbita2d_pb.Float2D;
      reader.readMessage(value,orbita2d_pb.Float2D.deserializeBinaryFromReader);
      msg.setElbowTemperature(value);
      break;
    case 3:
      var value = new orbita3d_pb.Float3D;
      reader.readMessage(value,orbita3d_pb.Float3D.deserializeBinaryFromReader);
      msg.setWristTemperature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reachy.part.arm.ArmTemperatures.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reachy.part.arm.ArmTemperatures.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reachy.part.arm.ArmTemperatures} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reachy.part.arm.ArmTemperatures.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShoulderTemperature();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      orbita2d_pb.Float2D.serializeBinaryToWriter
    );
  }
  f = message.getElbowTemperature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      orbita2d_pb.Float2D.serializeBinaryToWriter
    );
  }
  f = message.getWristTemperature();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      orbita3d_pb.Float3D.serializeBinaryToWriter
    );
  }
};


/**
 * optional component.orbita2d.Float2D shoulder_temperature = 1;
 * @return {?proto.component.orbita2d.Float2D}
 */
proto.reachy.part.arm.ArmTemperatures.prototype.getShoulderTemperature = function() {
  return /** @type{?proto.component.orbita2d.Float2D} */ (
    jspb.Message.getWrapperField(this, orbita2d_pb.Float2D, 1));
};


/**
 * @param {?proto.component.orbita2d.Float2D|undefined} value
 * @return {!proto.reachy.part.arm.ArmTemperatures} returns this
*/
proto.reachy.part.arm.ArmTemperatures.prototype.setShoulderTemperature = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmTemperatures} returns this
 */
proto.reachy.part.arm.ArmTemperatures.prototype.clearShoulderTemperature = function() {
  return this.setShoulderTemperature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmTemperatures.prototype.hasShoulderTemperature = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional component.orbita2d.Float2D elbow_temperature = 2;
 * @return {?proto.component.orbita2d.Float2D}
 */
proto.reachy.part.arm.ArmTemperatures.prototype.getElbowTemperature = function() {
  return /** @type{?proto.component.orbita2d.Float2D} */ (
    jspb.Message.getWrapperField(this, orbita2d_pb.Float2D, 2));
};


/**
 * @param {?proto.component.orbita2d.Float2D|undefined} value
 * @return {!proto.reachy.part.arm.ArmTemperatures} returns this
*/
proto.reachy.part.arm.ArmTemperatures.prototype.setElbowTemperature = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmTemperatures} returns this
 */
proto.reachy.part.arm.ArmTemperatures.prototype.clearElbowTemperature = function() {
  return this.setElbowTemperature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmTemperatures.prototype.hasElbowTemperature = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional component.orbita3d.Float3D wrist_temperature = 3;
 * @return {?proto.component.orbita3d.Float3D}
 */
proto.reachy.part.arm.ArmTemperatures.prototype.getWristTemperature = function() {
  return /** @type{?proto.component.orbita3d.Float3D} */ (
    jspb.Message.getWrapperField(this, orbita3d_pb.Float3D, 3));
};


/**
 * @param {?proto.component.orbita3d.Float3D|undefined} value
 * @return {!proto.reachy.part.arm.ArmTemperatures} returns this
*/
proto.reachy.part.arm.ArmTemperatures.prototype.setWristTemperature = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reachy.part.arm.ArmTemperatures} returns this
 */
proto.reachy.part.arm.ArmTemperatures.prototype.clearWristTemperature = function() {
  return this.setWristTemperature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reachy.part.arm.ArmTemperatures.prototype.hasWristTemperature = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.reachy.part.arm.ArmField = {
  NONE: 0,
  NAME: 1,
  ID: 2,
  PRESENT_POSITION: 3,
  PRESENT_SPEED: 4,
  PRESENT_LOAD: 5,
  TEMPERATURE: 6,
  JOINT_LIMIT: 7,
  COMPLIANT: 8,
  GOAL_POSITION: 9,
  SPEED_LIMIT: 10,
  TORQUE_LIMIT: 11,
  PID: 12,
  ALL: 15
};

/**
 * @enum {number}
 */
proto.reachy.part.arm.SpeedLimit = {
  NO_LIMIT: 0,
  FAST: 1,
  NORMAL: 2,
  SLOW: 3
};

goog.object.extend(exports, proto.reachy.part.arm);

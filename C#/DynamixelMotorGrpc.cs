// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dynamixel_motor.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Component.DynamixelMotor {
  public static partial class DynamixelMotorService
  {
    static readonly string __ServiceName = "component.dynamixel_motor.DynamixelMotorService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::Component.DynamixelMotor.ListOfDynamixelMotor> __Marshaller_component_dynamixel_motor_ListOfDynamixelMotor = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Component.DynamixelMotor.ListOfDynamixelMotor.Parser));
    static readonly grpc::Marshaller<global::Component.DynamixelMotor.DynamixelMotorStateRequest> __Marshaller_component_dynamixel_motor_DynamixelMotorStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Component.DynamixelMotor.DynamixelMotorStateRequest.Parser));
    static readonly grpc::Marshaller<global::Component.DynamixelMotor.DynamixelMotorState> __Marshaller_component_dynamixel_motor_DynamixelMotorState = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Component.DynamixelMotor.DynamixelMotorState.Parser));
    static readonly grpc::Marshaller<global::Component.DynamixelMotor.DynamixelMotorStreamStateRequest> __Marshaller_component_dynamixel_motor_DynamixelMotorStreamStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Component.DynamixelMotor.DynamixelMotorStreamStateRequest.Parser));
    static readonly grpc::Marshaller<global::Component.DynamixelMotor.DynamixelMotorsCommand> __Marshaller_component_dynamixel_motor_DynamixelMotorsCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Component.DynamixelMotor.DynamixelMotorsCommand.Parser));
    static readonly grpc::Marshaller<global::Component.DynamixelMotor.DynamixelMotorGoal> __Marshaller_component_dynamixel_motor_DynamixelMotorGoal = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Component.DynamixelMotor.DynamixelMotorGoal.Parser));
    static readonly grpc::Marshaller<global::Component.ComponentId> __Marshaller_component_ComponentId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Component.ComponentId.Parser));
    static readonly grpc::Marshaller<global::Component.DynamixelMotor.DynamixelMotorStatus> __Marshaller_component_dynamixel_motor_DynamixelMotorStatus = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Component.DynamixelMotor.DynamixelMotorStatus.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Component.DynamixelMotor.ListOfDynamixelMotor> __Method_GetAllDynamixelMotor = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Component.DynamixelMotor.ListOfDynamixelMotor>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllDynamixelMotor",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_component_dynamixel_motor_ListOfDynamixelMotor);

    static readonly grpc::Method<global::Component.DynamixelMotor.DynamixelMotorStateRequest, global::Component.DynamixelMotor.DynamixelMotorState> __Method_GetState = new grpc::Method<global::Component.DynamixelMotor.DynamixelMotorStateRequest, global::Component.DynamixelMotor.DynamixelMotorState>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetState",
        __Marshaller_component_dynamixel_motor_DynamixelMotorStateRequest,
        __Marshaller_component_dynamixel_motor_DynamixelMotorState);

    static readonly grpc::Method<global::Component.DynamixelMotor.DynamixelMotorStreamStateRequest, global::Component.DynamixelMotor.DynamixelMotorState> __Method_StreamState = new grpc::Method<global::Component.DynamixelMotor.DynamixelMotorStreamStateRequest, global::Component.DynamixelMotor.DynamixelMotorState>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "StreamState",
        __Marshaller_component_dynamixel_motor_DynamixelMotorStreamStateRequest,
        __Marshaller_component_dynamixel_motor_DynamixelMotorState);

    static readonly grpc::Method<global::Component.DynamixelMotor.DynamixelMotorsCommand, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SendCommand = new grpc::Method<global::Component.DynamixelMotor.DynamixelMotorsCommand, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendCommand",
        __Marshaller_component_dynamixel_motor_DynamixelMotorsCommand,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Component.DynamixelMotor.DynamixelMotorsCommand, global::Google.Protobuf.WellKnownTypes.Empty> __Method_StreamCommand = new grpc::Method<global::Component.DynamixelMotor.DynamixelMotorsCommand, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "StreamCommand",
        __Marshaller_component_dynamixel_motor_DynamixelMotorsCommand,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Component.DynamixelMotor.DynamixelMotorGoal, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetPosition = new grpc::Method<global::Component.DynamixelMotor.DynamixelMotorGoal, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetPosition",
        __Marshaller_component_dynamixel_motor_DynamixelMotorGoal,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Component.ComponentId, global::Component.DynamixelMotor.DynamixelMotorStatus> __Method_Audit = new grpc::Method<global::Component.ComponentId, global::Component.DynamixelMotor.DynamixelMotorStatus>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Audit",
        __Marshaller_component_ComponentId,
        __Marshaller_component_dynamixel_motor_DynamixelMotorStatus);

    static readonly grpc::Method<global::Component.ComponentId, global::Google.Protobuf.WellKnownTypes.Empty> __Method_HeartBeat = new grpc::Method<global::Component.ComponentId, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "HeartBeat",
        __Marshaller_component_ComponentId,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Component.ComponentId, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Restart = new grpc::Method<global::Component.ComponentId, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Restart",
        __Marshaller_component_ComponentId,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Component.DynamixelMotor.DynamixelMotorReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DynamixelMotorService</summary>
    [grpc::BindServiceMethod(typeof(DynamixelMotorService), "BindService")]
    public abstract partial class DynamixelMotorServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Component.DynamixelMotor.ListOfDynamixelMotor> GetAllDynamixelMotor(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Component.DynamixelMotor.DynamixelMotorState> GetState(global::Component.DynamixelMotor.DynamixelMotorStateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task StreamState(global::Component.DynamixelMotor.DynamixelMotorStreamStateRequest request, grpc::IServerStreamWriter<global::Component.DynamixelMotor.DynamixelMotorState> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SendCommand(global::Component.DynamixelMotor.DynamixelMotorsCommand request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> StreamCommand(grpc::IAsyncStreamReader<global::Component.DynamixelMotor.DynamixelMotorsCommand> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SetPosition(global::Component.DynamixelMotor.DynamixelMotorGoal request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Component.DynamixelMotor.DynamixelMotorStatus> Audit(global::Component.ComponentId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> HeartBeat(global::Component.ComponentId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Restart(global::Component.ComponentId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DynamixelMotorService</summary>
    public partial class DynamixelMotorServiceClient : grpc::ClientBase<DynamixelMotorServiceClient>
    {
      /// <summary>Creates a new client for DynamixelMotorService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DynamixelMotorServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DynamixelMotorService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DynamixelMotorServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DynamixelMotorServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DynamixelMotorServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Component.DynamixelMotor.ListOfDynamixelMotor GetAllDynamixelMotor(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDynamixelMotor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Component.DynamixelMotor.ListOfDynamixelMotor GetAllDynamixelMotor(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllDynamixelMotor, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Component.DynamixelMotor.ListOfDynamixelMotor> GetAllDynamixelMotorAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDynamixelMotorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Component.DynamixelMotor.ListOfDynamixelMotor> GetAllDynamixelMotorAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllDynamixelMotor, null, options, request);
      }
      public virtual global::Component.DynamixelMotor.DynamixelMotorState GetState(global::Component.DynamixelMotor.DynamixelMotorStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Component.DynamixelMotor.DynamixelMotorState GetState(global::Component.DynamixelMotor.DynamixelMotorStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetState, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Component.DynamixelMotor.DynamixelMotorState> GetStateAsync(global::Component.DynamixelMotor.DynamixelMotorStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Component.DynamixelMotor.DynamixelMotorState> GetStateAsync(global::Component.DynamixelMotor.DynamixelMotorStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetState, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Component.DynamixelMotor.DynamixelMotorState> StreamState(global::Component.DynamixelMotor.DynamixelMotorStreamStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StreamState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Component.DynamixelMotor.DynamixelMotorState> StreamState(global::Component.DynamixelMotor.DynamixelMotorStreamStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_StreamState, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendCommand(global::Component.DynamixelMotor.DynamixelMotorsCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendCommand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendCommand(global::Component.DynamixelMotor.DynamixelMotorsCommand request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendCommand, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendCommandAsync(global::Component.DynamixelMotor.DynamixelMotorsCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendCommandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendCommandAsync(global::Component.DynamixelMotor.DynamixelMotorsCommand request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendCommand, null, options, request);
      }
      public virtual grpc::AsyncClientStreamingCall<global::Component.DynamixelMotor.DynamixelMotorsCommand, global::Google.Protobuf.WellKnownTypes.Empty> StreamCommand(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StreamCommand(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncClientStreamingCall<global::Component.DynamixelMotor.DynamixelMotorsCommand, global::Google.Protobuf.WellKnownTypes.Empty> StreamCommand(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_StreamCommand, null, options);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetPosition(global::Component.DynamixelMotor.DynamixelMotorGoal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPosition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetPosition(global::Component.DynamixelMotor.DynamixelMotorGoal request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetPosition, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetPositionAsync(global::Component.DynamixelMotor.DynamixelMotorGoal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPositionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetPositionAsync(global::Component.DynamixelMotor.DynamixelMotorGoal request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetPosition, null, options, request);
      }
      public virtual global::Component.DynamixelMotor.DynamixelMotorStatus Audit(global::Component.ComponentId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Audit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Component.DynamixelMotor.DynamixelMotorStatus Audit(global::Component.ComponentId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Audit, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Component.DynamixelMotor.DynamixelMotorStatus> AuditAsync(global::Component.ComponentId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AuditAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Component.DynamixelMotor.DynamixelMotorStatus> AuditAsync(global::Component.ComponentId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Audit, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty HeartBeat(global::Component.ComponentId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HeartBeat(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty HeartBeat(global::Component.ComponentId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_HeartBeat, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> HeartBeatAsync(global::Component.ComponentId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HeartBeatAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> HeartBeatAsync(global::Component.ComponentId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_HeartBeat, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Restart(global::Component.ComponentId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Restart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Restart(global::Component.ComponentId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Restart, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RestartAsync(global::Component.ComponentId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RestartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RestartAsync(global::Component.ComponentId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Restart, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DynamixelMotorServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DynamixelMotorServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DynamixelMotorServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllDynamixelMotor, serviceImpl.GetAllDynamixelMotor)
          .AddMethod(__Method_GetState, serviceImpl.GetState)
          .AddMethod(__Method_StreamState, serviceImpl.StreamState)
          .AddMethod(__Method_SendCommand, serviceImpl.SendCommand)
          .AddMethod(__Method_StreamCommand, serviceImpl.StreamCommand)
          .AddMethod(__Method_SetPosition, serviceImpl.SetPosition)
          .AddMethod(__Method_Audit, serviceImpl.Audit)
          .AddMethod(__Method_HeartBeat, serviceImpl.HeartBeat)
          .AddMethod(__Method_Restart, serviceImpl.Restart).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DynamixelMotorServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllDynamixelMotor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Component.DynamixelMotor.ListOfDynamixelMotor>(serviceImpl.GetAllDynamixelMotor));
      serviceBinder.AddMethod(__Method_GetState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Component.DynamixelMotor.DynamixelMotorStateRequest, global::Component.DynamixelMotor.DynamixelMotorState>(serviceImpl.GetState));
      serviceBinder.AddMethod(__Method_StreamState, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Component.DynamixelMotor.DynamixelMotorStreamStateRequest, global::Component.DynamixelMotor.DynamixelMotorState>(serviceImpl.StreamState));
      serviceBinder.AddMethod(__Method_SendCommand, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Component.DynamixelMotor.DynamixelMotorsCommand, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SendCommand));
      serviceBinder.AddMethod(__Method_StreamCommand, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::Component.DynamixelMotor.DynamixelMotorsCommand, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.StreamCommand));
      serviceBinder.AddMethod(__Method_SetPosition, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Component.DynamixelMotor.DynamixelMotorGoal, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SetPosition));
      serviceBinder.AddMethod(__Method_Audit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Component.ComponentId, global::Component.DynamixelMotor.DynamixelMotorStatus>(serviceImpl.Audit));
      serviceBinder.AddMethod(__Method_HeartBeat, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Component.ComponentId, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.HeartBeat));
      serviceBinder.AddMethod(__Method_Restart, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Component.ComponentId, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.Restart));
    }

  }
}
#endregion

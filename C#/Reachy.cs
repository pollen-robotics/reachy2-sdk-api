// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: reachy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Reachy {

  /// <summary>Holder for reflection information generated from reachy.proto</summary>
  public static partial class ReachyReflection {

    #region Descriptor
    /// <summary>File descriptor for reachy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReachyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxyZWFjaHkucHJvdG8SBnJlYWNoeRobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5",
            "LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGglhcm0u",
            "cHJvdG8aCmhlYWQucHJvdG8aCmhhbmQucHJvdG8aEW1vYmlsZV9iYXNlLnBy",
            "b3RvGgtzb3VuZC5wcm90bxoLdmlkZW8ucHJvdG8izAMKBlJlYWNoeRIcCgJp",
            "ZBgBIAEoCzIQLnJlYWNoeS5SZWFjaHlJZBIjCgVsX2FybRgCIAEoCzIULnJl",
            "YWNoeS5wYXJ0LmFybS5Bcm0SIwoFcl9hcm0YAyABKAsyFC5yZWFjaHkucGFy",
            "dC5hcm0uQXJtEiQKBGhlYWQYBCABKAsyFi5yZWFjaHkucGFydC5oZWFkLkhl",
            "YWQSJgoGbF9oYW5kGAUgASgLMhYucmVhY2h5LnBhcnQuaGFuZC5IYW5kEiYK",
            "BnJfaGFuZBgGIAEoCzIWLnJlYWNoeS5wYXJ0LmhhbmQuSGFuZBIwCgttb2Jp",
            "bGVfYmFzZRgHIAEoCzIbLm1vYmlsZS5iYXNlLnNkay5Nb2JpbGVCYXNlEi8K",
            "Cm1pY3JvcGhvbmUYCCABKAsyGy5jb21wb25lbnQuc291bmQuTWljcm9waG9u",
            "ZRIpCgdzcGVha2VyGAkgASgLMhguY29tcG9uZW50LnNvdW5kLlNwZWFrZXIS",
            "NAoNc3RlcmVvX2NhbWVyYRgKIAEoCzIdLmNvbXBvbmVudC52aWRlby5TdGVy",
            "ZW9DYW1lcmESIAoEaW5mbxgUIAEoCzISLnJlYWNoeS5SZWFjaHlJbmZvIiQK",
            "CFJlYWNoeUlkEgoKAmlkGAEgASgNEgwKBG5hbWUYAiABKAkiTwoKUmVhY2h5",
            "SW5mbxIVCg1zZXJpYWxfbnVtYmVyGAEgASgJEhQKDHZlcnNpb25faGFyZBgC",
            "IAEoCRIUCgx2ZXJzaW9uX3NvZnQYAyABKAkijgMKC1JlYWNoeVN0YXRlEi0K",
            "CXRpbWVzdGFtcBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "HAoCaWQYAiABKAsyEC5yZWFjaHkuUmVhY2h5SWQSLgoLbF9hcm1fc3RhdGUY",
            "AyABKAsyGS5yZWFjaHkucGFydC5hcm0uQXJtU3RhdGUSLgoLcl9hcm1fc3Rh",
            "dGUYBCABKAsyGS5yZWFjaHkucGFydC5hcm0uQXJtU3RhdGUSLwoKaGVhZF9z",
            "dGF0ZRgFIAEoCzIbLnJlYWNoeS5wYXJ0LmhlYWQuSGVhZFN0YXRlEjEKDGxf",
            "aGFuZF9zdGF0ZRgGIAEoCzIbLnJlYWNoeS5wYXJ0LmhhbmQuSGFuZFN0YXRl",
            "EjEKDHJfaGFuZF9zdGF0ZRgHIAEoCzIbLnJlYWNoeS5wYXJ0LmhhbmQuSGFu",
            "ZFN0YXRlEjsKEW1vYmlsZV9iYXNlX3N0YXRlGAggASgLMiAubW9iaWxlLmJh",
            "c2Uuc2RrLk1vYmlsZUJhc2VTdGF0ZSJTChhSZWFjaHlTdHJlYW1TdGF0ZVJl",
            "cXVlc3QSHAoCaWQYASABKAsyEC5yZWFjaHkuUmVhY2h5SWQSGQoRcHVibGlz",
            "aF9mcmVxdWVuY3kYAiABKAIyywEKDVJlYWNoeVNlcnZpY2USMwoJR2V0UmVh",
            "Y2h5EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Gg4ucmVhY2h5LlJlYWNoeRI3",
            "Cg5HZXRSZWFjaHlTdGF0ZRIQLnJlYWNoeS5SZWFjaHlJZBoTLnJlYWNoeS5S",
            "ZWFjaHlTdGF0ZRJMChFTdHJlYW1SZWFjaHlTdGF0ZRIgLnJlYWNoeS5SZWFj",
            "aHlTdHJlYW1TdGF0ZVJlcXVlc3QaEy5yZWFjaHkuUmVhY2h5U3RhdGUwAWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Reachy.Part.Arm.ArmReflection.Descriptor, global::Reachy.Part.Head.HeadReflection.Descriptor, global::Reachy.Part.Hand.HandReflection.Descriptor, global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor, global::Component.Sound.SoundReflection.Descriptor, global::Component.Video.VideoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Reachy), global::Reachy.Reachy.Parser, new[]{ "Id", "LArm", "RArm", "Head", "LHand", "RHand", "MobileBase", "Microphone", "Speaker", "StereoCamera", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.ReachyId), global::Reachy.ReachyId.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.ReachyInfo), global::Reachy.ReachyInfo.Parser, new[]{ "SerialNumber", "VersionHard", "VersionSoft" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.ReachyState), global::Reachy.ReachyState.Parser, new[]{ "Timestamp", "Id", "LArmState", "RArmState", "HeadState", "LHandState", "RHandState", "MobileBaseState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.ReachyStreamStateRequest), global::Reachy.ReachyStreamStateRequest.Parser, new[]{ "Id", "PublishFrequency" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Reachy : pb::IMessage<Reachy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Reachy> _parser = new pb::MessageParser<Reachy>(() => new Reachy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Reachy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.ReachyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reachy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reachy(Reachy other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      lArm_ = other.lArm_ != null ? other.lArm_.Clone() : null;
      rArm_ = other.rArm_ != null ? other.rArm_.Clone() : null;
      head_ = other.head_ != null ? other.head_.Clone() : null;
      lHand_ = other.lHand_ != null ? other.lHand_.Clone() : null;
      rHand_ = other.rHand_ != null ? other.rHand_.Clone() : null;
      mobileBase_ = other.mobileBase_ != null ? other.mobileBase_.Clone() : null;
      microphone_ = other.microphone_ != null ? other.microphone_.Clone() : null;
      speaker_ = other.speaker_ != null ? other.speaker_.Clone() : null;
      stereoCamera_ = other.stereoCamera_ != null ? other.stereoCamera_.Clone() : null;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reachy Clone() {
      return new Reachy(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Reachy.ReachyId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.ReachyId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "l_arm" field.</summary>
    public const int LArmFieldNumber = 2;
    private global::Reachy.Part.Arm.Arm lArm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.Arm.Arm LArm {
      get { return lArm_; }
      set {
        lArm_ = value;
      }
    }

    /// <summary>Field number for the "r_arm" field.</summary>
    public const int RArmFieldNumber = 3;
    private global::Reachy.Part.Arm.Arm rArm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.Arm.Arm RArm {
      get { return rArm_; }
      set {
        rArm_ = value;
      }
    }

    /// <summary>Field number for the "head" field.</summary>
    public const int HeadFieldNumber = 4;
    private global::Reachy.Part.Head.Head head_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.Head.Head Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    /// <summary>Field number for the "l_hand" field.</summary>
    public const int LHandFieldNumber = 5;
    private global::Reachy.Part.Hand.Hand lHand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.Hand.Hand LHand {
      get { return lHand_; }
      set {
        lHand_ = value;
      }
    }

    /// <summary>Field number for the "r_hand" field.</summary>
    public const int RHandFieldNumber = 6;
    private global::Reachy.Part.Hand.Hand rHand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.Hand.Hand RHand {
      get { return rHand_; }
      set {
        rHand_ = value;
      }
    }

    /// <summary>Field number for the "mobile_base" field.</summary>
    public const int MobileBaseFieldNumber = 7;
    private global::Mobile.Base.Sdk.MobileBase mobileBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobile.Base.Sdk.MobileBase MobileBase {
      get { return mobileBase_; }
      set {
        mobileBase_ = value;
      }
    }

    /// <summary>Field number for the "microphone" field.</summary>
    public const int MicrophoneFieldNumber = 8;
    private global::Component.Sound.Microphone microphone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Component.Sound.Microphone Microphone {
      get { return microphone_; }
      set {
        microphone_ = value;
      }
    }

    /// <summary>Field number for the "speaker" field.</summary>
    public const int SpeakerFieldNumber = 9;
    private global::Component.Sound.Speaker speaker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Component.Sound.Speaker Speaker {
      get { return speaker_; }
      set {
        speaker_ = value;
      }
    }

    /// <summary>Field number for the "stereo_camera" field.</summary>
    public const int StereoCameraFieldNumber = 10;
    private global::Component.Video.StereoCamera stereoCamera_;
    /// <summary>
    /// component.video.DepthCamera depth_camera = 11;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Component.Video.StereoCamera StereoCamera {
      get { return stereoCamera_; }
      set {
        stereoCamera_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 20;
    private global::Reachy.ReachyInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.ReachyInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Reachy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Reachy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(LArm, other.LArm)) return false;
      if (!object.Equals(RArm, other.RArm)) return false;
      if (!object.Equals(Head, other.Head)) return false;
      if (!object.Equals(LHand, other.LHand)) return false;
      if (!object.Equals(RHand, other.RHand)) return false;
      if (!object.Equals(MobileBase, other.MobileBase)) return false;
      if (!object.Equals(Microphone, other.Microphone)) return false;
      if (!object.Equals(Speaker, other.Speaker)) return false;
      if (!object.Equals(StereoCamera, other.StereoCamera)) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (lArm_ != null) hash ^= LArm.GetHashCode();
      if (rArm_ != null) hash ^= RArm.GetHashCode();
      if (head_ != null) hash ^= Head.GetHashCode();
      if (lHand_ != null) hash ^= LHand.GetHashCode();
      if (rHand_ != null) hash ^= RHand.GetHashCode();
      if (mobileBase_ != null) hash ^= MobileBase.GetHashCode();
      if (microphone_ != null) hash ^= Microphone.GetHashCode();
      if (speaker_ != null) hash ^= Speaker.GetHashCode();
      if (stereoCamera_ != null) hash ^= StereoCamera.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (lArm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LArm);
      }
      if (rArm_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RArm);
      }
      if (head_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Head);
      }
      if (lHand_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LHand);
      }
      if (rHand_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RHand);
      }
      if (mobileBase_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(MobileBase);
      }
      if (microphone_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Microphone);
      }
      if (speaker_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Speaker);
      }
      if (stereoCamera_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StereoCamera);
      }
      if (info_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (lArm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LArm);
      }
      if (rArm_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RArm);
      }
      if (head_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Head);
      }
      if (lHand_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LHand);
      }
      if (rHand_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RHand);
      }
      if (mobileBase_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(MobileBase);
      }
      if (microphone_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Microphone);
      }
      if (speaker_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Speaker);
      }
      if (stereoCamera_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StereoCamera);
      }
      if (info_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (lArm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LArm);
      }
      if (rArm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RArm);
      }
      if (head_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Head);
      }
      if (lHand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LHand);
      }
      if (rHand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RHand);
      }
      if (mobileBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MobileBase);
      }
      if (microphone_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Microphone);
      }
      if (speaker_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Speaker);
      }
      if (stereoCamera_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StereoCamera);
      }
      if (info_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Reachy other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Reachy.ReachyId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.lArm_ != null) {
        if (lArm_ == null) {
          LArm = new global::Reachy.Part.Arm.Arm();
        }
        LArm.MergeFrom(other.LArm);
      }
      if (other.rArm_ != null) {
        if (rArm_ == null) {
          RArm = new global::Reachy.Part.Arm.Arm();
        }
        RArm.MergeFrom(other.RArm);
      }
      if (other.head_ != null) {
        if (head_ == null) {
          Head = new global::Reachy.Part.Head.Head();
        }
        Head.MergeFrom(other.Head);
      }
      if (other.lHand_ != null) {
        if (lHand_ == null) {
          LHand = new global::Reachy.Part.Hand.Hand();
        }
        LHand.MergeFrom(other.LHand);
      }
      if (other.rHand_ != null) {
        if (rHand_ == null) {
          RHand = new global::Reachy.Part.Hand.Hand();
        }
        RHand.MergeFrom(other.RHand);
      }
      if (other.mobileBase_ != null) {
        if (mobileBase_ == null) {
          MobileBase = new global::Mobile.Base.Sdk.MobileBase();
        }
        MobileBase.MergeFrom(other.MobileBase);
      }
      if (other.microphone_ != null) {
        if (microphone_ == null) {
          Microphone = new global::Component.Sound.Microphone();
        }
        Microphone.MergeFrom(other.Microphone);
      }
      if (other.speaker_ != null) {
        if (speaker_ == null) {
          Speaker = new global::Component.Sound.Speaker();
        }
        Speaker.MergeFrom(other.Speaker);
      }
      if (other.stereoCamera_ != null) {
        if (stereoCamera_ == null) {
          StereoCamera = new global::Component.Video.StereoCamera();
        }
        StereoCamera.MergeFrom(other.StereoCamera);
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Reachy.ReachyInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Reachy.ReachyId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (lArm_ == null) {
              LArm = new global::Reachy.Part.Arm.Arm();
            }
            input.ReadMessage(LArm);
            break;
          }
          case 26: {
            if (rArm_ == null) {
              RArm = new global::Reachy.Part.Arm.Arm();
            }
            input.ReadMessage(RArm);
            break;
          }
          case 34: {
            if (head_ == null) {
              Head = new global::Reachy.Part.Head.Head();
            }
            input.ReadMessage(Head);
            break;
          }
          case 42: {
            if (lHand_ == null) {
              LHand = new global::Reachy.Part.Hand.Hand();
            }
            input.ReadMessage(LHand);
            break;
          }
          case 50: {
            if (rHand_ == null) {
              RHand = new global::Reachy.Part.Hand.Hand();
            }
            input.ReadMessage(RHand);
            break;
          }
          case 58: {
            if (mobileBase_ == null) {
              MobileBase = new global::Mobile.Base.Sdk.MobileBase();
            }
            input.ReadMessage(MobileBase);
            break;
          }
          case 66: {
            if (microphone_ == null) {
              Microphone = new global::Component.Sound.Microphone();
            }
            input.ReadMessage(Microphone);
            break;
          }
          case 74: {
            if (speaker_ == null) {
              Speaker = new global::Component.Sound.Speaker();
            }
            input.ReadMessage(Speaker);
            break;
          }
          case 82: {
            if (stereoCamera_ == null) {
              StereoCamera = new global::Component.Video.StereoCamera();
            }
            input.ReadMessage(StereoCamera);
            break;
          }
          case 162: {
            if (info_ == null) {
              Info = new global::Reachy.ReachyInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Reachy.ReachyId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (lArm_ == null) {
              LArm = new global::Reachy.Part.Arm.Arm();
            }
            input.ReadMessage(LArm);
            break;
          }
          case 26: {
            if (rArm_ == null) {
              RArm = new global::Reachy.Part.Arm.Arm();
            }
            input.ReadMessage(RArm);
            break;
          }
          case 34: {
            if (head_ == null) {
              Head = new global::Reachy.Part.Head.Head();
            }
            input.ReadMessage(Head);
            break;
          }
          case 42: {
            if (lHand_ == null) {
              LHand = new global::Reachy.Part.Hand.Hand();
            }
            input.ReadMessage(LHand);
            break;
          }
          case 50: {
            if (rHand_ == null) {
              RHand = new global::Reachy.Part.Hand.Hand();
            }
            input.ReadMessage(RHand);
            break;
          }
          case 58: {
            if (mobileBase_ == null) {
              MobileBase = new global::Mobile.Base.Sdk.MobileBase();
            }
            input.ReadMessage(MobileBase);
            break;
          }
          case 66: {
            if (microphone_ == null) {
              Microphone = new global::Component.Sound.Microphone();
            }
            input.ReadMessage(Microphone);
            break;
          }
          case 74: {
            if (speaker_ == null) {
              Speaker = new global::Component.Sound.Speaker();
            }
            input.ReadMessage(Speaker);
            break;
          }
          case 82: {
            if (stereoCamera_ == null) {
              StereoCamera = new global::Component.Video.StereoCamera();
            }
            input.ReadMessage(StereoCamera);
            break;
          }
          case 162: {
            if (info_ == null) {
              Info = new global::Reachy.ReachyInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReachyId : pb::IMessage<ReachyId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReachyId> _parser = new pb::MessageParser<ReachyId>(() => new ReachyId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReachyId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.ReachyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyId(ReachyId other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyId Clone() {
      return new ReachyId(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReachyId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReachyId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReachyId other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReachyInfo : pb::IMessage<ReachyInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReachyInfo> _parser = new pb::MessageParser<ReachyInfo>(() => new ReachyInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReachyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.ReachyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyInfo(ReachyInfo other) : this() {
      serialNumber_ = other.serialNumber_;
      versionHard_ = other.versionHard_;
      versionSoft_ = other.versionSoft_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyInfo Clone() {
      return new ReachyInfo(this);
    }

    /// <summary>Field number for the "serial_number" field.</summary>
    public const int SerialNumberFieldNumber = 1;
    private string serialNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SerialNumber {
      get { return serialNumber_; }
      set {
        serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_hard" field.</summary>
    public const int VersionHardFieldNumber = 2;
    private string versionHard_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionHard {
      get { return versionHard_; }
      set {
        versionHard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_soft" field.</summary>
    public const int VersionSoftFieldNumber = 3;
    private string versionSoft_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionSoft {
      get { return versionSoft_; }
      set {
        versionSoft_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReachyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReachyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SerialNumber != other.SerialNumber) return false;
      if (VersionHard != other.VersionHard) return false;
      if (VersionSoft != other.VersionSoft) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SerialNumber.Length != 0) hash ^= SerialNumber.GetHashCode();
      if (VersionHard.Length != 0) hash ^= VersionHard.GetHashCode();
      if (VersionSoft.Length != 0) hash ^= VersionSoft.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SerialNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SerialNumber);
      }
      if (VersionHard.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VersionHard);
      }
      if (VersionSoft.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VersionSoft);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SerialNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SerialNumber);
      }
      if (VersionHard.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VersionHard);
      }
      if (VersionSoft.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VersionSoft);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SerialNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
      }
      if (VersionHard.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionHard);
      }
      if (VersionSoft.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionSoft);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReachyInfo other) {
      if (other == null) {
        return;
      }
      if (other.SerialNumber.Length != 0) {
        SerialNumber = other.SerialNumber;
      }
      if (other.VersionHard.Length != 0) {
        VersionHard = other.VersionHard;
      }
      if (other.VersionSoft.Length != 0) {
        VersionSoft = other.VersionSoft;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SerialNumber = input.ReadString();
            break;
          }
          case 18: {
            VersionHard = input.ReadString();
            break;
          }
          case 26: {
            VersionSoft = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SerialNumber = input.ReadString();
            break;
          }
          case 18: {
            VersionHard = input.ReadString();
            break;
          }
          case 26: {
            VersionSoft = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReachyState : pb::IMessage<ReachyState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReachyState> _parser = new pb::MessageParser<ReachyState>(() => new ReachyState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReachyState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.ReachyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyState(ReachyState other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      id_ = other.id_ != null ? other.id_.Clone() : null;
      lArmState_ = other.lArmState_ != null ? other.lArmState_.Clone() : null;
      rArmState_ = other.rArmState_ != null ? other.rArmState_.Clone() : null;
      headState_ = other.headState_ != null ? other.headState_.Clone() : null;
      lHandState_ = other.lHandState_ != null ? other.lHandState_.Clone() : null;
      rHandState_ = other.rHandState_ != null ? other.rHandState_.Clone() : null;
      mobileBaseState_ = other.mobileBaseState_ != null ? other.mobileBaseState_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyState Clone() {
      return new ReachyState(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private global::Reachy.ReachyId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.ReachyId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "l_arm_state" field.</summary>
    public const int LArmStateFieldNumber = 3;
    private global::Reachy.Part.Arm.ArmState lArmState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.Arm.ArmState LArmState {
      get { return lArmState_; }
      set {
        lArmState_ = value;
      }
    }

    /// <summary>Field number for the "r_arm_state" field.</summary>
    public const int RArmStateFieldNumber = 4;
    private global::Reachy.Part.Arm.ArmState rArmState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.Arm.ArmState RArmState {
      get { return rArmState_; }
      set {
        rArmState_ = value;
      }
    }

    /// <summary>Field number for the "head_state" field.</summary>
    public const int HeadStateFieldNumber = 5;
    private global::Reachy.Part.Head.HeadState headState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.Head.HeadState HeadState {
      get { return headState_; }
      set {
        headState_ = value;
      }
    }

    /// <summary>Field number for the "l_hand_state" field.</summary>
    public const int LHandStateFieldNumber = 6;
    private global::Reachy.Part.Hand.HandState lHandState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.Hand.HandState LHandState {
      get { return lHandState_; }
      set {
        lHandState_ = value;
      }
    }

    /// <summary>Field number for the "r_hand_state" field.</summary>
    public const int RHandStateFieldNumber = 7;
    private global::Reachy.Part.Hand.HandState rHandState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.Hand.HandState RHandState {
      get { return rHandState_; }
      set {
        rHandState_ = value;
      }
    }

    /// <summary>Field number for the "mobile_base_state" field.</summary>
    public const int MobileBaseStateFieldNumber = 8;
    private global::Mobile.Base.Sdk.MobileBaseState mobileBaseState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobile.Base.Sdk.MobileBaseState MobileBaseState {
      get { return mobileBaseState_; }
      set {
        mobileBaseState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReachyState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReachyState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(LArmState, other.LArmState)) return false;
      if (!object.Equals(RArmState, other.RArmState)) return false;
      if (!object.Equals(HeadState, other.HeadState)) return false;
      if (!object.Equals(LHandState, other.LHandState)) return false;
      if (!object.Equals(RHandState, other.RHandState)) return false;
      if (!object.Equals(MobileBaseState, other.MobileBaseState)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (lArmState_ != null) hash ^= LArmState.GetHashCode();
      if (rArmState_ != null) hash ^= RArmState.GetHashCode();
      if (headState_ != null) hash ^= HeadState.GetHashCode();
      if (lHandState_ != null) hash ^= LHandState.GetHashCode();
      if (rHandState_ != null) hash ^= RHandState.GetHashCode();
      if (mobileBaseState_ != null) hash ^= MobileBaseState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (id_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Id);
      }
      if (lArmState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LArmState);
      }
      if (rArmState_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RArmState);
      }
      if (headState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HeadState);
      }
      if (lHandState_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LHandState);
      }
      if (rHandState_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RHandState);
      }
      if (mobileBaseState_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MobileBaseState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (id_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Id);
      }
      if (lArmState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LArmState);
      }
      if (rArmState_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RArmState);
      }
      if (headState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HeadState);
      }
      if (lHandState_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LHandState);
      }
      if (rHandState_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RHandState);
      }
      if (mobileBaseState_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MobileBaseState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (lArmState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LArmState);
      }
      if (rArmState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RArmState);
      }
      if (headState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeadState);
      }
      if (lHandState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LHandState);
      }
      if (rHandState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RHandState);
      }
      if (mobileBaseState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MobileBaseState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReachyState other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Reachy.ReachyId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.lArmState_ != null) {
        if (lArmState_ == null) {
          LArmState = new global::Reachy.Part.Arm.ArmState();
        }
        LArmState.MergeFrom(other.LArmState);
      }
      if (other.rArmState_ != null) {
        if (rArmState_ == null) {
          RArmState = new global::Reachy.Part.Arm.ArmState();
        }
        RArmState.MergeFrom(other.RArmState);
      }
      if (other.headState_ != null) {
        if (headState_ == null) {
          HeadState = new global::Reachy.Part.Head.HeadState();
        }
        HeadState.MergeFrom(other.HeadState);
      }
      if (other.lHandState_ != null) {
        if (lHandState_ == null) {
          LHandState = new global::Reachy.Part.Hand.HandState();
        }
        LHandState.MergeFrom(other.LHandState);
      }
      if (other.rHandState_ != null) {
        if (rHandState_ == null) {
          RHandState = new global::Reachy.Part.Hand.HandState();
        }
        RHandState.MergeFrom(other.RHandState);
      }
      if (other.mobileBaseState_ != null) {
        if (mobileBaseState_ == null) {
          MobileBaseState = new global::Mobile.Base.Sdk.MobileBaseState();
        }
        MobileBaseState.MergeFrom(other.MobileBaseState);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            if (id_ == null) {
              Id = new global::Reachy.ReachyId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 26: {
            if (lArmState_ == null) {
              LArmState = new global::Reachy.Part.Arm.ArmState();
            }
            input.ReadMessage(LArmState);
            break;
          }
          case 34: {
            if (rArmState_ == null) {
              RArmState = new global::Reachy.Part.Arm.ArmState();
            }
            input.ReadMessage(RArmState);
            break;
          }
          case 42: {
            if (headState_ == null) {
              HeadState = new global::Reachy.Part.Head.HeadState();
            }
            input.ReadMessage(HeadState);
            break;
          }
          case 50: {
            if (lHandState_ == null) {
              LHandState = new global::Reachy.Part.Hand.HandState();
            }
            input.ReadMessage(LHandState);
            break;
          }
          case 58: {
            if (rHandState_ == null) {
              RHandState = new global::Reachy.Part.Hand.HandState();
            }
            input.ReadMessage(RHandState);
            break;
          }
          case 66: {
            if (mobileBaseState_ == null) {
              MobileBaseState = new global::Mobile.Base.Sdk.MobileBaseState();
            }
            input.ReadMessage(MobileBaseState);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            if (id_ == null) {
              Id = new global::Reachy.ReachyId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 26: {
            if (lArmState_ == null) {
              LArmState = new global::Reachy.Part.Arm.ArmState();
            }
            input.ReadMessage(LArmState);
            break;
          }
          case 34: {
            if (rArmState_ == null) {
              RArmState = new global::Reachy.Part.Arm.ArmState();
            }
            input.ReadMessage(RArmState);
            break;
          }
          case 42: {
            if (headState_ == null) {
              HeadState = new global::Reachy.Part.Head.HeadState();
            }
            input.ReadMessage(HeadState);
            break;
          }
          case 50: {
            if (lHandState_ == null) {
              LHandState = new global::Reachy.Part.Hand.HandState();
            }
            input.ReadMessage(LHandState);
            break;
          }
          case 58: {
            if (rHandState_ == null) {
              RHandState = new global::Reachy.Part.Hand.HandState();
            }
            input.ReadMessage(RHandState);
            break;
          }
          case 66: {
            if (mobileBaseState_ == null) {
              MobileBaseState = new global::Mobile.Base.Sdk.MobileBaseState();
            }
            input.ReadMessage(MobileBaseState);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReachyStreamStateRequest : pb::IMessage<ReachyStreamStateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReachyStreamStateRequest> _parser = new pb::MessageParser<ReachyStreamStateRequest>(() => new ReachyStreamStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReachyStreamStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.ReachyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyStreamStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyStreamStateRequest(ReachyStreamStateRequest other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      publishFrequency_ = other.publishFrequency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachyStreamStateRequest Clone() {
      return new ReachyStreamStateRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Reachy.ReachyId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.ReachyId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "publish_frequency" field.</summary>
    public const int PublishFrequencyFieldNumber = 2;
    private float publishFrequency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PublishFrequency {
      get { return publishFrequency_; }
      set {
        publishFrequency_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReachyStreamStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReachyStreamStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PublishFrequency, other.PublishFrequency)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (PublishFrequency != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PublishFrequency);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (PublishFrequency != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PublishFrequency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (PublishFrequency != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PublishFrequency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (PublishFrequency != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReachyStreamStateRequest other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Reachy.ReachyId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.PublishFrequency != 0F) {
        PublishFrequency = other.PublishFrequency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Reachy.ReachyId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 21: {
            PublishFrequency = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Reachy.ReachyId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 21: {
            PublishFrequency = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code

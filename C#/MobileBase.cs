// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mobile_base.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mobile.Base.Sdk {

  /// <summary>Holder for reflection information generated from mobile_base.proto</summary>
  public static partial class MobileBaseReflection {

    #region Descriptor
    /// <summary>File descriptor for mobile_base.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MobileBaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFtb2JpbGVfYmFzZS5wcm90bxIPbW9iaWxlLmJhc2Uuc2RrGhtnb29nbGUv",
            "cHJvdG9idWYvZW1wdHkucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVy",
            "cy5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoKcGFy",
            "dC5wcm90byKNAQoPRGlyZWN0aW9uVmVjdG9yEiYKAXgYASABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuRmxvYXRWYWx1ZRImCgF5GAIgASgLMhsuZ29vZ2xlLnBy",
            "b3RvYnVmLkZsb2F0VmFsdWUSKgoFdGhldGEYAyABKAsyGy5nb29nbGUucHJv",
            "dG9idWYuRmxvYXRWYWx1ZSKMAQoKTW9iaWxlQmFzZRIkCgdwYXJ0X2lkGAEg",
            "ASgLMhMucmVhY2h5LnBhcnQuUGFydElkEjMKB3ZlcnNpb24YAiABKAsyIi5t",
            "b2JpbGUuYmFzZS5zZGsuTW9iaWxlQmFzZVZlcnNpb24SIwoEaW5mbxgFIAEo",
            "CzIVLnJlYWNoeS5wYXJ0LlBhcnRJbmZvIk0KFlRhcmdldERpcmVjdGlvbkNv",
            "bW1hbmQSMwoJZGlyZWN0aW9uGAEgASgLMiAubW9iaWxlLmJhc2Uuc2RrLkRp",
            "cmVjdGlvblZlY3RvciJhCg9Nb2JpbGVCYXNlU3RhdGUSLQoJdGltZXN0YW1w",
            "GAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIfCgJpZBgCIAEo",
            "CzITLnJlYWNoeS5wYXJ0LlBhcnRJZCKXAQoKR29Ub1ZlY3RvchIrCgZ4X2dv",
            "YWwYASABKAsyGy5nb29nbGUucHJvdG9idWYuRmxvYXRWYWx1ZRIrCgZ5X2dv",
            "YWwYAiABKAsyGy5nb29nbGUucHJvdG9idWYuRmxvYXRWYWx1ZRIvCgp0aGV0",
            "YV9nb2FsGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkZsb2F0VmFsdWUixQEK",
            "DlNldFNwZWVkVmVjdG9yEioKBXhfdmVsGAEgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkZsb2F0VmFsdWUSKgoFeV92ZWwYAiABKAsyGy5nb29nbGUucHJvdG9i",
            "dWYuRmxvYXRWYWx1ZRIsCgdyb3RfdmVsGAMgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkZsb2F0VmFsdWUSLQoIZHVyYXRpb24YBCABKAsyGy5nb29nbGUucHJv",
            "dG9idWYuRmxvYXRWYWx1ZSKMAQoOT2RvbWV0cnlWZWN0b3ISJgoBeBgBIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5GbG9hdFZhbHVlEiYKAXkYAiABKAsyGy5n",
            "b29nbGUucHJvdG9idWYuRmxvYXRWYWx1ZRIqCgV0aGV0YRgDIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5GbG9hdFZhbHVlItMBChREaXN0YW5jZVRvR29hbFZl",
            "Y3RvchIsCgdkZWx0YV94GAEgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkZsb2F0",
            "VmFsdWUSLAoHZGVsdGFfeRgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5GbG9h",
            "dFZhbHVlEjAKC2RlbHRhX3RoZXRhGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkZsb2F0VmFsdWUSLQoIZGlzdGFuY2UYBCABKAsyGy5nb29nbGUucHJvdG9i",
            "dWYuRmxvYXRWYWx1ZSJMChJDb250cm9sTW9kZUNvbW1hbmQSNgoEbW9kZRgB",
            "IAEoDjIoLm1vYmlsZS5iYXNlLnNkay5Db250cm9sTW9kZVBvc3NpYmxpdGll",
            "cyJGCg9adXV1TW9kZUNvbW1hbmQSMwoEbW9kZRgBIAEoDjIlLm1vYmlsZS5i",
            "YXNlLnNkay5adXV1TW9kZVBvc3NpYmxpdGllcyI6CgxCYXR0ZXJ5TGV2ZWwS",
            "KgoFbGV2ZWwYASABKAsyGy5nb29nbGUucHJvdG9idWYuRmxvYXRWYWx1ZSJ2",
            "ChJNb2JpbGVCYXNlUHJlc2VuY2USLAoIcHJlc2VuY2UYASABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuQm9vbFZhbHVlEjIKDW1vZGVsX3ZlcnNpb24YAiABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuRmxvYXRWYWx1ZSJHChFNb2JpbGVCYXNlVmVy",
            "c2lvbhIyCg1tb2RlbF92ZXJzaW9uGAEgASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkZsb2F0VmFsdWUiqgEKC0xpZGFyU2FmZXR5Ei0KCXNhZmV0eV9vbhgBIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSNAoPc2FmZXR5X2Rpc3Rh",
            "bmNlGAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkZsb2F0VmFsdWUSNgoRY3Jp",
            "dGljYWxfZGlzdGFuY2UYAyABKAsyGy5nb29nbGUucHJvdG9idWYuRmxvYXRW",
            "YWx1ZSJBChJNb2JpbGl0eVNlcnZpY2VBY2sSKwoHc3VjY2VzcxgBIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUiGAoITGlkYXJNYXASDAoEZGF0",
            "YRgBIAEoDCpIChdDb250cm9sTW9kZVBvc3NpYmxpdGllcxIVChFOT05FX0NP",
            "TlRST0xfTU9ERRAAEg0KCU9QRU5fTE9PUBABEgcKA1BJRBACKnsKFFp1dXVN",
            "b2RlUG9zc2libGl0aWVzEhIKDk5PTkVfWlVVVV9NT0RFEAASCwoHQ01EX1ZF",
            "TBABEgkKBUJSQUtFEAISDgoKRlJFRV9XSEVFTBADEgkKBVNQRUVEEAQSCAoE",
            "R09UTxAFEhIKDkVNRVJHRU5DWV9TVE9QEAYywAkKD01vYmlsaXR5U2Vydmlj",
            "ZRJdCg1TZW5kRGlyZWN0aW9uEicubW9iaWxlLmJhc2Uuc2RrLlRhcmdldERp",
            "cmVjdGlvbkNvbW1hbmQaIy5tb2JpbGUuYmFzZS5zZGsuTW9iaWxpdHlTZXJ2",
            "aWNlQWNrElQKDFNlbmRTZXRTcGVlZBIfLm1vYmlsZS5iYXNlLnNkay5TZXRT",
            "cGVlZFZlY3RvchojLm1vYmlsZS5iYXNlLnNkay5Nb2JpbGl0eVNlcnZpY2VB",
            "Y2sSTAoIU2VuZEdvVG8SGy5tb2JpbGUuYmFzZS5zZGsuR29Ub1ZlY3Rvchoj",
            "Lm1vYmlsZS5iYXNlLnNkay5Nb2JpbGl0eVNlcnZpY2VBY2sSTwoORGlzdGFu",
            "Y2VUb0dvYWwSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaJS5tb2JpbGUuYmFz",
            "ZS5zZGsuRGlzdGFuY2VUb0dvYWxWZWN0b3ISWgoOU2V0Q29udHJvbE1vZGUS",
            "Iy5tb2JpbGUuYmFzZS5zZGsuQ29udHJvbE1vZGVDb21tYW5kGiMubW9iaWxl",
            "LmJhc2Uuc2RrLk1vYmlsaXR5U2VydmljZUFjaxJNCg5HZXRDb250cm9sTW9k",
            "ZRIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRojLm1vYmlsZS5iYXNlLnNkay5D",
            "b250cm9sTW9kZUNvbW1hbmQSVAoLU2V0WnV1dU1vZGUSIC5tb2JpbGUuYmFz",
            "ZS5zZGsuWnV1dU1vZGVDb21tYW5kGiMubW9iaWxlLmJhc2Uuc2RrLk1vYmls",
            "aXR5U2VydmljZUFjaxJHCgtHZXRadXV1TW9kZRIWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eRogLm1vYmlsZS5iYXNlLnNkay5adXV1TW9kZUNvbW1hbmQSSAoP",
            "R2V0QmF0dGVyeUxldmVsEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Gh0ubW9i",
            "aWxlLmJhc2Uuc2RrLkJhdHRlcnlMZXZlbBJGCgtHZXRPZG9tZXRyeRIWLmdv",
            "b2dsZS5wcm90b2J1Zi5FbXB0eRofLm1vYmlsZS5iYXNlLnNkay5PZG9tZXRy",
            "eVZlY3RvchJMCg1SZXNldE9kb21ldHJ5EhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5GiMubW9iaWxlLmJhc2Uuc2RrLk1vYmlsaXR5U2VydmljZUFjaxJSCg1T",
            "ZXRadXV1U2FmZXR5EhwubW9iaWxlLmJhc2Uuc2RrLkxpZGFyU2FmZXR5GiMu",
            "bW9iaWxlLmJhc2Uuc2RrLk1vYmlsaXR5U2VydmljZUFjaxJFCg1HZXRadXV1",
            "U2FmZXR5EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhwubW9iaWxlLmJhc2Uu",
            "c2RrLkxpZGFyU2FmZXR5EkAKC0dldExpZGFyTWFwEhYuZ29vZ2xlLnByb3Rv",
            "YnVmLkVtcHR5GhkubW9iaWxlLmJhc2Uuc2RrLkxpZGFyTWFwElIKFEdldE1v",
            "YmlsZUJhc2VWZXJzaW9uEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GiIubW9i",
            "aWxlLmJhc2Uuc2RrLk1vYmlsZUJhc2VWZXJzaW9uMnEKGU1vYmlsZUJhc2VQ",
            "cmVzZW5jZVNlcnZpY2USVAoVR2V0TW9iaWxlQmFzZVByZXNlbmNlEhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5GiMubW9iaWxlLmJhc2Uuc2RrLk1vYmlsZUJh",
            "c2VQcmVzZW5jZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Reachy.Part.PartReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Mobile.Base.Sdk.ControlModePossiblities), typeof(global::Mobile.Base.Sdk.ZuuuModePossiblities), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.DirectionVector), global::Mobile.Base.Sdk.DirectionVector.Parser, new[]{ "X", "Y", "Theta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.MobileBase), global::Mobile.Base.Sdk.MobileBase.Parser, new[]{ "PartId", "Version", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.TargetDirectionCommand), global::Mobile.Base.Sdk.TargetDirectionCommand.Parser, new[]{ "Direction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.MobileBaseState), global::Mobile.Base.Sdk.MobileBaseState.Parser, new[]{ "Timestamp", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.GoToVector), global::Mobile.Base.Sdk.GoToVector.Parser, new[]{ "XGoal", "YGoal", "ThetaGoal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.SetSpeedVector), global::Mobile.Base.Sdk.SetSpeedVector.Parser, new[]{ "XVel", "YVel", "RotVel", "Duration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.OdometryVector), global::Mobile.Base.Sdk.OdometryVector.Parser, new[]{ "X", "Y", "Theta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.DistanceToGoalVector), global::Mobile.Base.Sdk.DistanceToGoalVector.Parser, new[]{ "DeltaX", "DeltaY", "DeltaTheta", "Distance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.ControlModeCommand), global::Mobile.Base.Sdk.ControlModeCommand.Parser, new[]{ "Mode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.ZuuuModeCommand), global::Mobile.Base.Sdk.ZuuuModeCommand.Parser, new[]{ "Mode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.BatteryLevel), global::Mobile.Base.Sdk.BatteryLevel.Parser, new[]{ "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.MobileBasePresence), global::Mobile.Base.Sdk.MobileBasePresence.Parser, new[]{ "Presence", "ModelVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.MobileBaseVersion), global::Mobile.Base.Sdk.MobileBaseVersion.Parser, new[]{ "ModelVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.LidarSafety), global::Mobile.Base.Sdk.LidarSafety.Parser, new[]{ "SafetyOn", "SafetyDistance", "CriticalDistance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.MobilityServiceAck), global::Mobile.Base.Sdk.MobilityServiceAck.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Base.Sdk.LidarMap), global::Mobile.Base.Sdk.LidarMap.Parser, new[]{ "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ControlModePossiblities {
    [pbr::OriginalName("NONE_CONTROL_MODE")] NoneControlMode = 0,
    [pbr::OriginalName("OPEN_LOOP")] OpenLoop = 1,
    [pbr::OriginalName("PID")] Pid = 2,
  }

  public enum ZuuuModePossiblities {
    [pbr::OriginalName("NONE_ZUUU_MODE")] NoneZuuuMode = 0,
    [pbr::OriginalName("CMD_VEL")] CmdVel = 1,
    [pbr::OriginalName("BRAKE")] Brake = 2,
    [pbr::OriginalName("FREE_WHEEL")] FreeWheel = 3,
    [pbr::OriginalName("SPEED")] Speed = 4,
    [pbr::OriginalName("GOTO")] Goto = 5,
    [pbr::OriginalName("EMERGENCY_STOP")] EmergencyStop = 6,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Speed commands in SI units (m/s and rad/s)
  /// </summary>
  public sealed partial class DirectionVector : pb::IMessage<DirectionVector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DirectionVector> _parser = new pb::MessageParser<DirectionVector>(() => new DirectionVector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DirectionVector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectionVector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectionVector(DirectionVector other) : this() {
      X = other.X;
      Y = other.Y;
      Theta = other.Theta;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectionVector Clone() {
      return new DirectionVector(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private static readonly pb::FieldCodec<float?> _single_x_codec = pb::FieldCodec.ForStructWrapper<float>(10);
    private float? x_;
    /// <summary>
    /// use FloatValue instead of double to avoid 0.0 default value being ignored
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? X {
      get { return x_; }
      set {
        x_ = value;
      }
    }


    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private static readonly pb::FieldCodec<float?> _single_y_codec = pb::FieldCodec.ForStructWrapper<float>(18);
    private float? y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }


    /// <summary>Field number for the "theta" field.</summary>
    public const int ThetaFieldNumber = 3;
    private static readonly pb::FieldCodec<float?> _single_theta_codec = pb::FieldCodec.ForStructWrapper<float>(26);
    private float? theta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? Theta {
      get { return theta_; }
      set {
        theta_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DirectionVector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DirectionVector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Theta, other.Theta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (x_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(X);
      if (y_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Y);
      if (theta_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Theta);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (x_ != null) {
        _single_x_codec.WriteTagAndValue(output, X);
      }
      if (y_ != null) {
        _single_y_codec.WriteTagAndValue(output, Y);
      }
      if (theta_ != null) {
        _single_theta_codec.WriteTagAndValue(output, Theta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (x_ != null) {
        _single_x_codec.WriteTagAndValue(ref output, X);
      }
      if (y_ != null) {
        _single_y_codec.WriteTagAndValue(ref output, Y);
      }
      if (theta_ != null) {
        _single_theta_codec.WriteTagAndValue(ref output, Theta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (x_ != null) {
        size += _single_x_codec.CalculateSizeWithTag(X);
      }
      if (y_ != null) {
        size += _single_y_codec.CalculateSizeWithTag(Y);
      }
      if (theta_ != null) {
        size += _single_theta_codec.CalculateSizeWithTag(Theta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DirectionVector other) {
      if (other == null) {
        return;
      }
      if (other.x_ != null) {
        if (x_ == null || other.X != 0F) {
          X = other.X;
        }
      }
      if (other.y_ != null) {
        if (y_ == null || other.Y != 0F) {
          Y = other.Y;
        }
      }
      if (other.theta_ != null) {
        if (theta_ == null || other.Theta != 0F) {
          Theta = other.Theta;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            float? value = _single_x_codec.Read(input);
            if (x_ == null || value != 0F) {
              X = value;
            }
            break;
          }
          case 18: {
            float? value = _single_y_codec.Read(input);
            if (y_ == null || value != 0F) {
              Y = value;
            }
            break;
          }
          case 26: {
            float? value = _single_theta_codec.Read(input);
            if (theta_ == null || value != 0F) {
              Theta = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            float? value = _single_x_codec.Read(ref input);
            if (x_ == null || value != 0F) {
              X = value;
            }
            break;
          }
          case 18: {
            float? value = _single_y_codec.Read(ref input);
            if (y_ == null || value != 0F) {
              Y = value;
            }
            break;
          }
          case 26: {
            float? value = _single_theta_codec.Read(ref input);
            if (theta_ == null || value != 0F) {
              Theta = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MobileBase : pb::IMessage<MobileBase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MobileBase> _parser = new pb::MessageParser<MobileBase>(() => new MobileBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MobileBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBase(MobileBase other) : this() {
      partId_ = other.partId_ != null ? other.partId_.Clone() : null;
      version_ = other.version_ != null ? other.version_.Clone() : null;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBase Clone() {
      return new MobileBase(this);
    }

    /// <summary>Field number for the "part_id" field.</summary>
    public const int PartIdFieldNumber = 1;
    private global::Reachy.Part.PartId partId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.PartId PartId {
      get { return partId_; }
      set {
        partId_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private global::Mobile.Base.Sdk.MobileBaseVersion version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobile.Base.Sdk.MobileBaseVersion Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 5;
    private global::Reachy.Part.PartInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.PartInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MobileBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MobileBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PartId, other.PartId)) return false;
      if (!object.Equals(Version, other.Version)) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (partId_ != null) hash ^= PartId.GetHashCode();
      if (version_ != null) hash ^= Version.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (partId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PartId);
      }
      if (version_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Version);
      }
      if (info_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (partId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PartId);
      }
      if (version_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Version);
      }
      if (info_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (partId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartId);
      }
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MobileBase other) {
      if (other == null) {
        return;
      }
      if (other.partId_ != null) {
        if (partId_ == null) {
          PartId = new global::Reachy.Part.PartId();
        }
        PartId.MergeFrom(other.PartId);
      }
      if (other.version_ != null) {
        if (version_ == null) {
          Version = new global::Mobile.Base.Sdk.MobileBaseVersion();
        }
        Version.MergeFrom(other.Version);
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Reachy.Part.PartInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (partId_ == null) {
              PartId = new global::Reachy.Part.PartId();
            }
            input.ReadMessage(PartId);
            break;
          }
          case 18: {
            if (version_ == null) {
              Version = new global::Mobile.Base.Sdk.MobileBaseVersion();
            }
            input.ReadMessage(Version);
            break;
          }
          case 42: {
            if (info_ == null) {
              Info = new global::Reachy.Part.PartInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (partId_ == null) {
              PartId = new global::Reachy.Part.PartId();
            }
            input.ReadMessage(PartId);
            break;
          }
          case 18: {
            if (version_ == null) {
              Version = new global::Mobile.Base.Sdk.MobileBaseVersion();
            }
            input.ReadMessage(Version);
            break;
          }
          case 42: {
            if (info_ == null) {
              Info = new global::Reachy.Part.PartInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TargetDirectionCommand : pb::IMessage<TargetDirectionCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetDirectionCommand> _parser = new pb::MessageParser<TargetDirectionCommand>(() => new TargetDirectionCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetDirectionCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetDirectionCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetDirectionCommand(TargetDirectionCommand other) : this() {
      direction_ = other.direction_ != null ? other.direction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetDirectionCommand Clone() {
      return new TargetDirectionCommand(this);
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 1;
    private global::Mobile.Base.Sdk.DirectionVector direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobile.Base.Sdk.DirectionVector Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetDirectionCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetDirectionCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Direction, other.Direction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (direction_ != null) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (direction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (direction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (direction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetDirectionCommand other) {
      if (other == null) {
        return;
      }
      if (other.direction_ != null) {
        if (direction_ == null) {
          Direction = new global::Mobile.Base.Sdk.DirectionVector();
        }
        Direction.MergeFrom(other.Direction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (direction_ == null) {
              Direction = new global::Mobile.Base.Sdk.DirectionVector();
            }
            input.ReadMessage(Direction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (direction_ == null) {
              Direction = new global::Mobile.Base.Sdk.DirectionVector();
            }
            input.ReadMessage(Direction);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MobileBaseState : pb::IMessage<MobileBaseState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MobileBaseState> _parser = new pb::MessageParser<MobileBaseState>(() => new MobileBaseState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MobileBaseState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBaseState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBaseState(MobileBaseState other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBaseState Clone() {
      return new MobileBaseState(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private global::Reachy.Part.PartId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Part.PartId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MobileBaseState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MobileBaseState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (id_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (id_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MobileBaseState other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Reachy.Part.PartId();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            if (id_ == null) {
              Id = new global::Reachy.Part.PartId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            if (id_ == null) {
              Id = new global::Reachy.Part.PartId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GoToVector : pb::IMessage<GoToVector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GoToVector> _parser = new pb::MessageParser<GoToVector>(() => new GoToVector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GoToVector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoToVector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoToVector(GoToVector other) : this() {
      XGoal = other.XGoal;
      YGoal = other.YGoal;
      ThetaGoal = other.ThetaGoal;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoToVector Clone() {
      return new GoToVector(this);
    }

    /// <summary>Field number for the "x_goal" field.</summary>
    public const int XGoalFieldNumber = 1;
    private static readonly pb::FieldCodec<float?> _single_xGoal_codec = pb::FieldCodec.ForStructWrapper<float>(10);
    private float? xGoal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? XGoal {
      get { return xGoal_; }
      set {
        xGoal_ = value;
      }
    }


    /// <summary>Field number for the "y_goal" field.</summary>
    public const int YGoalFieldNumber = 2;
    private static readonly pb::FieldCodec<float?> _single_yGoal_codec = pb::FieldCodec.ForStructWrapper<float>(18);
    private float? yGoal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? YGoal {
      get { return yGoal_; }
      set {
        yGoal_ = value;
      }
    }


    /// <summary>Field number for the "theta_goal" field.</summary>
    public const int ThetaGoalFieldNumber = 3;
    private static readonly pb::FieldCodec<float?> _single_thetaGoal_codec = pb::FieldCodec.ForStructWrapper<float>(26);
    private float? thetaGoal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? ThetaGoal {
      get { return thetaGoal_; }
      set {
        thetaGoal_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GoToVector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GoToVector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(XGoal, other.XGoal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(YGoal, other.YGoal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(ThetaGoal, other.ThetaGoal)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (xGoal_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(XGoal);
      if (yGoal_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(YGoal);
      if (thetaGoal_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(ThetaGoal);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (xGoal_ != null) {
        _single_xGoal_codec.WriteTagAndValue(output, XGoal);
      }
      if (yGoal_ != null) {
        _single_yGoal_codec.WriteTagAndValue(output, YGoal);
      }
      if (thetaGoal_ != null) {
        _single_thetaGoal_codec.WriteTagAndValue(output, ThetaGoal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (xGoal_ != null) {
        _single_xGoal_codec.WriteTagAndValue(ref output, XGoal);
      }
      if (yGoal_ != null) {
        _single_yGoal_codec.WriteTagAndValue(ref output, YGoal);
      }
      if (thetaGoal_ != null) {
        _single_thetaGoal_codec.WriteTagAndValue(ref output, ThetaGoal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (xGoal_ != null) {
        size += _single_xGoal_codec.CalculateSizeWithTag(XGoal);
      }
      if (yGoal_ != null) {
        size += _single_yGoal_codec.CalculateSizeWithTag(YGoal);
      }
      if (thetaGoal_ != null) {
        size += _single_thetaGoal_codec.CalculateSizeWithTag(ThetaGoal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GoToVector other) {
      if (other == null) {
        return;
      }
      if (other.xGoal_ != null) {
        if (xGoal_ == null || other.XGoal != 0F) {
          XGoal = other.XGoal;
        }
      }
      if (other.yGoal_ != null) {
        if (yGoal_ == null || other.YGoal != 0F) {
          YGoal = other.YGoal;
        }
      }
      if (other.thetaGoal_ != null) {
        if (thetaGoal_ == null || other.ThetaGoal != 0F) {
          ThetaGoal = other.ThetaGoal;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            float? value = _single_xGoal_codec.Read(input);
            if (xGoal_ == null || value != 0F) {
              XGoal = value;
            }
            break;
          }
          case 18: {
            float? value = _single_yGoal_codec.Read(input);
            if (yGoal_ == null || value != 0F) {
              YGoal = value;
            }
            break;
          }
          case 26: {
            float? value = _single_thetaGoal_codec.Read(input);
            if (thetaGoal_ == null || value != 0F) {
              ThetaGoal = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            float? value = _single_xGoal_codec.Read(ref input);
            if (xGoal_ == null || value != 0F) {
              XGoal = value;
            }
            break;
          }
          case 18: {
            float? value = _single_yGoal_codec.Read(ref input);
            if (yGoal_ == null || value != 0F) {
              YGoal = value;
            }
            break;
          }
          case 26: {
            float? value = _single_thetaGoal_codec.Read(ref input);
            if (thetaGoal_ == null || value != 0F) {
              ThetaGoal = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetSpeedVector : pb::IMessage<SetSpeedVector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetSpeedVector> _parser = new pb::MessageParser<SetSpeedVector>(() => new SetSpeedVector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetSpeedVector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetSpeedVector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetSpeedVector(SetSpeedVector other) : this() {
      XVel = other.XVel;
      YVel = other.YVel;
      RotVel = other.RotVel;
      Duration = other.Duration;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetSpeedVector Clone() {
      return new SetSpeedVector(this);
    }

    /// <summary>Field number for the "x_vel" field.</summary>
    public const int XVelFieldNumber = 1;
    private static readonly pb::FieldCodec<float?> _single_xVel_codec = pb::FieldCodec.ForStructWrapper<float>(10);
    private float? xVel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? XVel {
      get { return xVel_; }
      set {
        xVel_ = value;
      }
    }


    /// <summary>Field number for the "y_vel" field.</summary>
    public const int YVelFieldNumber = 2;
    private static readonly pb::FieldCodec<float?> _single_yVel_codec = pb::FieldCodec.ForStructWrapper<float>(18);
    private float? yVel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? YVel {
      get { return yVel_; }
      set {
        yVel_ = value;
      }
    }


    /// <summary>Field number for the "rot_vel" field.</summary>
    public const int RotVelFieldNumber = 3;
    private static readonly pb::FieldCodec<float?> _single_rotVel_codec = pb::FieldCodec.ForStructWrapper<float>(26);
    private float? rotVel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? RotVel {
      get { return rotVel_; }
      set {
        rotVel_ = value;
      }
    }


    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 4;
    private static readonly pb::FieldCodec<float?> _single_duration_codec = pb::FieldCodec.ForStructWrapper<float>(34);
    private float? duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetSpeedVector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetSpeedVector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(XVel, other.XVel)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(YVel, other.YVel)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(RotVel, other.RotVel)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Duration, other.Duration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (xVel_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(XVel);
      if (yVel_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(YVel);
      if (rotVel_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(RotVel);
      if (duration_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Duration);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (xVel_ != null) {
        _single_xVel_codec.WriteTagAndValue(output, XVel);
      }
      if (yVel_ != null) {
        _single_yVel_codec.WriteTagAndValue(output, YVel);
      }
      if (rotVel_ != null) {
        _single_rotVel_codec.WriteTagAndValue(output, RotVel);
      }
      if (duration_ != null) {
        _single_duration_codec.WriteTagAndValue(output, Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (xVel_ != null) {
        _single_xVel_codec.WriteTagAndValue(ref output, XVel);
      }
      if (yVel_ != null) {
        _single_yVel_codec.WriteTagAndValue(ref output, YVel);
      }
      if (rotVel_ != null) {
        _single_rotVel_codec.WriteTagAndValue(ref output, RotVel);
      }
      if (duration_ != null) {
        _single_duration_codec.WriteTagAndValue(ref output, Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (xVel_ != null) {
        size += _single_xVel_codec.CalculateSizeWithTag(XVel);
      }
      if (yVel_ != null) {
        size += _single_yVel_codec.CalculateSizeWithTag(YVel);
      }
      if (rotVel_ != null) {
        size += _single_rotVel_codec.CalculateSizeWithTag(RotVel);
      }
      if (duration_ != null) {
        size += _single_duration_codec.CalculateSizeWithTag(Duration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetSpeedVector other) {
      if (other == null) {
        return;
      }
      if (other.xVel_ != null) {
        if (xVel_ == null || other.XVel != 0F) {
          XVel = other.XVel;
        }
      }
      if (other.yVel_ != null) {
        if (yVel_ == null || other.YVel != 0F) {
          YVel = other.YVel;
        }
      }
      if (other.rotVel_ != null) {
        if (rotVel_ == null || other.RotVel != 0F) {
          RotVel = other.RotVel;
        }
      }
      if (other.duration_ != null) {
        if (duration_ == null || other.Duration != 0F) {
          Duration = other.Duration;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            float? value = _single_xVel_codec.Read(input);
            if (xVel_ == null || value != 0F) {
              XVel = value;
            }
            break;
          }
          case 18: {
            float? value = _single_yVel_codec.Read(input);
            if (yVel_ == null || value != 0F) {
              YVel = value;
            }
            break;
          }
          case 26: {
            float? value = _single_rotVel_codec.Read(input);
            if (rotVel_ == null || value != 0F) {
              RotVel = value;
            }
            break;
          }
          case 34: {
            float? value = _single_duration_codec.Read(input);
            if (duration_ == null || value != 0F) {
              Duration = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            float? value = _single_xVel_codec.Read(ref input);
            if (xVel_ == null || value != 0F) {
              XVel = value;
            }
            break;
          }
          case 18: {
            float? value = _single_yVel_codec.Read(ref input);
            if (yVel_ == null || value != 0F) {
              YVel = value;
            }
            break;
          }
          case 26: {
            float? value = _single_rotVel_codec.Read(ref input);
            if (rotVel_ == null || value != 0F) {
              RotVel = value;
            }
            break;
          }
          case 34: {
            float? value = _single_duration_codec.Read(ref input);
            if (duration_ == null || value != 0F) {
              Duration = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OdometryVector : pb::IMessage<OdometryVector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OdometryVector> _parser = new pb::MessageParser<OdometryVector>(() => new OdometryVector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OdometryVector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OdometryVector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OdometryVector(OdometryVector other) : this() {
      X = other.X;
      Y = other.Y;
      Theta = other.Theta;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OdometryVector Clone() {
      return new OdometryVector(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private static readonly pb::FieldCodec<float?> _single_x_codec = pb::FieldCodec.ForStructWrapper<float>(10);
    private float? x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? X {
      get { return x_; }
      set {
        x_ = value;
      }
    }


    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private static readonly pb::FieldCodec<float?> _single_y_codec = pb::FieldCodec.ForStructWrapper<float>(18);
    private float? y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }


    /// <summary>Field number for the "theta" field.</summary>
    public const int ThetaFieldNumber = 3;
    private static readonly pb::FieldCodec<float?> _single_theta_codec = pb::FieldCodec.ForStructWrapper<float>(26);
    private float? theta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? Theta {
      get { return theta_; }
      set {
        theta_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OdometryVector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OdometryVector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Theta, other.Theta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (x_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(X);
      if (y_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Y);
      if (theta_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Theta);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (x_ != null) {
        _single_x_codec.WriteTagAndValue(output, X);
      }
      if (y_ != null) {
        _single_y_codec.WriteTagAndValue(output, Y);
      }
      if (theta_ != null) {
        _single_theta_codec.WriteTagAndValue(output, Theta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (x_ != null) {
        _single_x_codec.WriteTagAndValue(ref output, X);
      }
      if (y_ != null) {
        _single_y_codec.WriteTagAndValue(ref output, Y);
      }
      if (theta_ != null) {
        _single_theta_codec.WriteTagAndValue(ref output, Theta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (x_ != null) {
        size += _single_x_codec.CalculateSizeWithTag(X);
      }
      if (y_ != null) {
        size += _single_y_codec.CalculateSizeWithTag(Y);
      }
      if (theta_ != null) {
        size += _single_theta_codec.CalculateSizeWithTag(Theta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OdometryVector other) {
      if (other == null) {
        return;
      }
      if (other.x_ != null) {
        if (x_ == null || other.X != 0F) {
          X = other.X;
        }
      }
      if (other.y_ != null) {
        if (y_ == null || other.Y != 0F) {
          Y = other.Y;
        }
      }
      if (other.theta_ != null) {
        if (theta_ == null || other.Theta != 0F) {
          Theta = other.Theta;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            float? value = _single_x_codec.Read(input);
            if (x_ == null || value != 0F) {
              X = value;
            }
            break;
          }
          case 18: {
            float? value = _single_y_codec.Read(input);
            if (y_ == null || value != 0F) {
              Y = value;
            }
            break;
          }
          case 26: {
            float? value = _single_theta_codec.Read(input);
            if (theta_ == null || value != 0F) {
              Theta = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            float? value = _single_x_codec.Read(ref input);
            if (x_ == null || value != 0F) {
              X = value;
            }
            break;
          }
          case 18: {
            float? value = _single_y_codec.Read(ref input);
            if (y_ == null || value != 0F) {
              Y = value;
            }
            break;
          }
          case 26: {
            float? value = _single_theta_codec.Read(ref input);
            if (theta_ == null || value != 0F) {
              Theta = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DistanceToGoalVector : pb::IMessage<DistanceToGoalVector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DistanceToGoalVector> _parser = new pb::MessageParser<DistanceToGoalVector>(() => new DistanceToGoalVector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DistanceToGoalVector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistanceToGoalVector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistanceToGoalVector(DistanceToGoalVector other) : this() {
      DeltaX = other.DeltaX;
      DeltaY = other.DeltaY;
      DeltaTheta = other.DeltaTheta;
      Distance = other.Distance;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistanceToGoalVector Clone() {
      return new DistanceToGoalVector(this);
    }

    /// <summary>Field number for the "delta_x" field.</summary>
    public const int DeltaXFieldNumber = 1;
    private static readonly pb::FieldCodec<float?> _single_deltaX_codec = pb::FieldCodec.ForStructWrapper<float>(10);
    private float? deltaX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? DeltaX {
      get { return deltaX_; }
      set {
        deltaX_ = value;
      }
    }


    /// <summary>Field number for the "delta_y" field.</summary>
    public const int DeltaYFieldNumber = 2;
    private static readonly pb::FieldCodec<float?> _single_deltaY_codec = pb::FieldCodec.ForStructWrapper<float>(18);
    private float? deltaY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? DeltaY {
      get { return deltaY_; }
      set {
        deltaY_ = value;
      }
    }


    /// <summary>Field number for the "delta_theta" field.</summary>
    public const int DeltaThetaFieldNumber = 3;
    private static readonly pb::FieldCodec<float?> _single_deltaTheta_codec = pb::FieldCodec.ForStructWrapper<float>(26);
    private float? deltaTheta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? DeltaTheta {
      get { return deltaTheta_; }
      set {
        deltaTheta_ = value;
      }
    }


    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 4;
    private static readonly pb::FieldCodec<float?> _single_distance_codec = pb::FieldCodec.ForStructWrapper<float>(34);
    private float? distance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DistanceToGoalVector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DistanceToGoalVector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(DeltaX, other.DeltaX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(DeltaY, other.DeltaY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(DeltaTheta, other.DeltaTheta)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (deltaX_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(DeltaX);
      if (deltaY_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(DeltaY);
      if (deltaTheta_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(DeltaTheta);
      if (distance_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Distance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (deltaX_ != null) {
        _single_deltaX_codec.WriteTagAndValue(output, DeltaX);
      }
      if (deltaY_ != null) {
        _single_deltaY_codec.WriteTagAndValue(output, DeltaY);
      }
      if (deltaTheta_ != null) {
        _single_deltaTheta_codec.WriteTagAndValue(output, DeltaTheta);
      }
      if (distance_ != null) {
        _single_distance_codec.WriteTagAndValue(output, Distance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (deltaX_ != null) {
        _single_deltaX_codec.WriteTagAndValue(ref output, DeltaX);
      }
      if (deltaY_ != null) {
        _single_deltaY_codec.WriteTagAndValue(ref output, DeltaY);
      }
      if (deltaTheta_ != null) {
        _single_deltaTheta_codec.WriteTagAndValue(ref output, DeltaTheta);
      }
      if (distance_ != null) {
        _single_distance_codec.WriteTagAndValue(ref output, Distance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (deltaX_ != null) {
        size += _single_deltaX_codec.CalculateSizeWithTag(DeltaX);
      }
      if (deltaY_ != null) {
        size += _single_deltaY_codec.CalculateSizeWithTag(DeltaY);
      }
      if (deltaTheta_ != null) {
        size += _single_deltaTheta_codec.CalculateSizeWithTag(DeltaTheta);
      }
      if (distance_ != null) {
        size += _single_distance_codec.CalculateSizeWithTag(Distance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DistanceToGoalVector other) {
      if (other == null) {
        return;
      }
      if (other.deltaX_ != null) {
        if (deltaX_ == null || other.DeltaX != 0F) {
          DeltaX = other.DeltaX;
        }
      }
      if (other.deltaY_ != null) {
        if (deltaY_ == null || other.DeltaY != 0F) {
          DeltaY = other.DeltaY;
        }
      }
      if (other.deltaTheta_ != null) {
        if (deltaTheta_ == null || other.DeltaTheta != 0F) {
          DeltaTheta = other.DeltaTheta;
        }
      }
      if (other.distance_ != null) {
        if (distance_ == null || other.Distance != 0F) {
          Distance = other.Distance;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            float? value = _single_deltaX_codec.Read(input);
            if (deltaX_ == null || value != 0F) {
              DeltaX = value;
            }
            break;
          }
          case 18: {
            float? value = _single_deltaY_codec.Read(input);
            if (deltaY_ == null || value != 0F) {
              DeltaY = value;
            }
            break;
          }
          case 26: {
            float? value = _single_deltaTheta_codec.Read(input);
            if (deltaTheta_ == null || value != 0F) {
              DeltaTheta = value;
            }
            break;
          }
          case 34: {
            float? value = _single_distance_codec.Read(input);
            if (distance_ == null || value != 0F) {
              Distance = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            float? value = _single_deltaX_codec.Read(ref input);
            if (deltaX_ == null || value != 0F) {
              DeltaX = value;
            }
            break;
          }
          case 18: {
            float? value = _single_deltaY_codec.Read(ref input);
            if (deltaY_ == null || value != 0F) {
              DeltaY = value;
            }
            break;
          }
          case 26: {
            float? value = _single_deltaTheta_codec.Read(ref input);
            if (deltaTheta_ == null || value != 0F) {
              DeltaTheta = value;
            }
            break;
          }
          case 34: {
            float? value = _single_distance_codec.Read(ref input);
            if (distance_ == null || value != 0F) {
              Distance = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ControlModeCommand : pb::IMessage<ControlModeCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ControlModeCommand> _parser = new pb::MessageParser<ControlModeCommand>(() => new ControlModeCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ControlModeCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlModeCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlModeCommand(ControlModeCommand other) : this() {
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlModeCommand Clone() {
      return new ControlModeCommand(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private global::Mobile.Base.Sdk.ControlModePossiblities mode_ = global::Mobile.Base.Sdk.ControlModePossiblities.NoneControlMode;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobile.Base.Sdk.ControlModePossiblities Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ControlModeCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ControlModeCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode != global::Mobile.Base.Sdk.ControlModePossiblities.NoneControlMode) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Mode != global::Mobile.Base.Sdk.ControlModePossiblities.NoneControlMode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Mode != global::Mobile.Base.Sdk.ControlModePossiblities.NoneControlMode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mode != global::Mobile.Base.Sdk.ControlModePossiblities.NoneControlMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ControlModeCommand other) {
      if (other == null) {
        return;
      }
      if (other.Mode != global::Mobile.Base.Sdk.ControlModePossiblities.NoneControlMode) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mode = (global::Mobile.Base.Sdk.ControlModePossiblities) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Mode = (global::Mobile.Base.Sdk.ControlModePossiblities) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ZuuuModeCommand : pb::IMessage<ZuuuModeCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZuuuModeCommand> _parser = new pb::MessageParser<ZuuuModeCommand>(() => new ZuuuModeCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ZuuuModeCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZuuuModeCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZuuuModeCommand(ZuuuModeCommand other) : this() {
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZuuuModeCommand Clone() {
      return new ZuuuModeCommand(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private global::Mobile.Base.Sdk.ZuuuModePossiblities mode_ = global::Mobile.Base.Sdk.ZuuuModePossiblities.NoneZuuuMode;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobile.Base.Sdk.ZuuuModePossiblities Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ZuuuModeCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ZuuuModeCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode != global::Mobile.Base.Sdk.ZuuuModePossiblities.NoneZuuuMode) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Mode != global::Mobile.Base.Sdk.ZuuuModePossiblities.NoneZuuuMode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Mode != global::Mobile.Base.Sdk.ZuuuModePossiblities.NoneZuuuMode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mode != global::Mobile.Base.Sdk.ZuuuModePossiblities.NoneZuuuMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ZuuuModeCommand other) {
      if (other == null) {
        return;
      }
      if (other.Mode != global::Mobile.Base.Sdk.ZuuuModePossiblities.NoneZuuuMode) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mode = (global::Mobile.Base.Sdk.ZuuuModePossiblities) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Mode = (global::Mobile.Base.Sdk.ZuuuModePossiblities) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BatteryLevel : pb::IMessage<BatteryLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatteryLevel> _parser = new pb::MessageParser<BatteryLevel>(() => new BatteryLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatteryLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatteryLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatteryLevel(BatteryLevel other) : this() {
      Level = other.Level;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatteryLevel Clone() {
      return new BatteryLevel(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private static readonly pb::FieldCodec<float?> _single_level_codec = pb::FieldCodec.ForStructWrapper<float>(10);
    private float? level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatteryLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatteryLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Level, other.Level)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (level_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Level);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (level_ != null) {
        _single_level_codec.WriteTagAndValue(output, Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (level_ != null) {
        _single_level_codec.WriteTagAndValue(ref output, Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (level_ != null) {
        size += _single_level_codec.CalculateSizeWithTag(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatteryLevel other) {
      if (other == null) {
        return;
      }
      if (other.level_ != null) {
        if (level_ == null || other.Level != 0F) {
          Level = other.Level;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            float? value = _single_level_codec.Read(input);
            if (level_ == null || value != 0F) {
              Level = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            float? value = _single_level_codec.Read(ref input);
            if (level_ == null || value != 0F) {
              Level = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MobileBasePresence : pb::IMessage<MobileBasePresence>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MobileBasePresence> _parser = new pb::MessageParser<MobileBasePresence>(() => new MobileBasePresence());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MobileBasePresence> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBasePresence() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBasePresence(MobileBasePresence other) : this() {
      Presence = other.Presence;
      ModelVersion = other.ModelVersion;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBasePresence Clone() {
      return new MobileBasePresence(this);
    }

    /// <summary>Field number for the "presence" field.</summary>
    public const int PresenceFieldNumber = 1;
    private static readonly pb::FieldCodec<bool?> _single_presence_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
    private bool? presence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Presence {
      get { return presence_; }
      set {
        presence_ = value;
      }
    }


    /// <summary>Field number for the "model_version" field.</summary>
    public const int ModelVersionFieldNumber = 2;
    private static readonly pb::FieldCodec<float?> _single_modelVersion_codec = pb::FieldCodec.ForStructWrapper<float>(18);
    private float? modelVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? ModelVersion {
      get { return modelVersion_; }
      set {
        modelVersion_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MobileBasePresence);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MobileBasePresence other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Presence != other.Presence) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(ModelVersion, other.ModelVersion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (presence_ != null) hash ^= Presence.GetHashCode();
      if (modelVersion_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(ModelVersion);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (presence_ != null) {
        _single_presence_codec.WriteTagAndValue(output, Presence);
      }
      if (modelVersion_ != null) {
        _single_modelVersion_codec.WriteTagAndValue(output, ModelVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (presence_ != null) {
        _single_presence_codec.WriteTagAndValue(ref output, Presence);
      }
      if (modelVersion_ != null) {
        _single_modelVersion_codec.WriteTagAndValue(ref output, ModelVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (presence_ != null) {
        size += _single_presence_codec.CalculateSizeWithTag(Presence);
      }
      if (modelVersion_ != null) {
        size += _single_modelVersion_codec.CalculateSizeWithTag(ModelVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MobileBasePresence other) {
      if (other == null) {
        return;
      }
      if (other.presence_ != null) {
        if (presence_ == null || other.Presence != false) {
          Presence = other.Presence;
        }
      }
      if (other.modelVersion_ != null) {
        if (modelVersion_ == null || other.ModelVersion != 0F) {
          ModelVersion = other.ModelVersion;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bool? value = _single_presence_codec.Read(input);
            if (presence_ == null || value != false) {
              Presence = value;
            }
            break;
          }
          case 18: {
            float? value = _single_modelVersion_codec.Read(input);
            if (modelVersion_ == null || value != 0F) {
              ModelVersion = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bool? value = _single_presence_codec.Read(ref input);
            if (presence_ == null || value != false) {
              Presence = value;
            }
            break;
          }
          case 18: {
            float? value = _single_modelVersion_codec.Read(ref input);
            if (modelVersion_ == null || value != 0F) {
              ModelVersion = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MobileBaseVersion : pb::IMessage<MobileBaseVersion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MobileBaseVersion> _parser = new pb::MessageParser<MobileBaseVersion>(() => new MobileBaseVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MobileBaseVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBaseVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBaseVersion(MobileBaseVersion other) : this() {
      ModelVersion = other.ModelVersion;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileBaseVersion Clone() {
      return new MobileBaseVersion(this);
    }

    /// <summary>Field number for the "model_version" field.</summary>
    public const int ModelVersionFieldNumber = 1;
    private static readonly pb::FieldCodec<float?> _single_modelVersion_codec = pb::FieldCodec.ForStructWrapper<float>(10);
    private float? modelVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? ModelVersion {
      get { return modelVersion_; }
      set {
        modelVersion_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MobileBaseVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MobileBaseVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(ModelVersion, other.ModelVersion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (modelVersion_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(ModelVersion);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (modelVersion_ != null) {
        _single_modelVersion_codec.WriteTagAndValue(output, ModelVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (modelVersion_ != null) {
        _single_modelVersion_codec.WriteTagAndValue(ref output, ModelVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (modelVersion_ != null) {
        size += _single_modelVersion_codec.CalculateSizeWithTag(ModelVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MobileBaseVersion other) {
      if (other == null) {
        return;
      }
      if (other.modelVersion_ != null) {
        if (modelVersion_ == null || other.ModelVersion != 0F) {
          ModelVersion = other.ModelVersion;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            float? value = _single_modelVersion_codec.Read(input);
            if (modelVersion_ == null || value != 0F) {
              ModelVersion = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            float? value = _single_modelVersion_codec.Read(ref input);
            if (modelVersion_ == null || value != 0F) {
              ModelVersion = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LidarSafety : pb::IMessage<LidarSafety>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LidarSafety> _parser = new pb::MessageParser<LidarSafety>(() => new LidarSafety());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LidarSafety> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LidarSafety() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LidarSafety(LidarSafety other) : this() {
      SafetyOn = other.SafetyOn;
      SafetyDistance = other.SafetyDistance;
      CriticalDistance = other.CriticalDistance;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LidarSafety Clone() {
      return new LidarSafety(this);
    }

    /// <summary>Field number for the "safety_on" field.</summary>
    public const int SafetyOnFieldNumber = 1;
    private static readonly pb::FieldCodec<bool?> _single_safetyOn_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
    private bool? safetyOn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? SafetyOn {
      get { return safetyOn_; }
      set {
        safetyOn_ = value;
      }
    }


    /// <summary>Field number for the "safety_distance" field.</summary>
    public const int SafetyDistanceFieldNumber = 2;
    private static readonly pb::FieldCodec<float?> _single_safetyDistance_codec = pb::FieldCodec.ForStructWrapper<float>(18);
    private float? safetyDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? SafetyDistance {
      get { return safetyDistance_; }
      set {
        safetyDistance_ = value;
      }
    }


    /// <summary>Field number for the "critical_distance" field.</summary>
    public const int CriticalDistanceFieldNumber = 3;
    private static readonly pb::FieldCodec<float?> _single_criticalDistance_codec = pb::FieldCodec.ForStructWrapper<float>(26);
    private float? criticalDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? CriticalDistance {
      get { return criticalDistance_; }
      set {
        criticalDistance_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LidarSafety);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LidarSafety other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SafetyOn != other.SafetyOn) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(SafetyDistance, other.SafetyDistance)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(CriticalDistance, other.CriticalDistance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (safetyOn_ != null) hash ^= SafetyOn.GetHashCode();
      if (safetyDistance_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(SafetyDistance);
      if (criticalDistance_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(CriticalDistance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (safetyOn_ != null) {
        _single_safetyOn_codec.WriteTagAndValue(output, SafetyOn);
      }
      if (safetyDistance_ != null) {
        _single_safetyDistance_codec.WriteTagAndValue(output, SafetyDistance);
      }
      if (criticalDistance_ != null) {
        _single_criticalDistance_codec.WriteTagAndValue(output, CriticalDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (safetyOn_ != null) {
        _single_safetyOn_codec.WriteTagAndValue(ref output, SafetyOn);
      }
      if (safetyDistance_ != null) {
        _single_safetyDistance_codec.WriteTagAndValue(ref output, SafetyDistance);
      }
      if (criticalDistance_ != null) {
        _single_criticalDistance_codec.WriteTagAndValue(ref output, CriticalDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (safetyOn_ != null) {
        size += _single_safetyOn_codec.CalculateSizeWithTag(SafetyOn);
      }
      if (safetyDistance_ != null) {
        size += _single_safetyDistance_codec.CalculateSizeWithTag(SafetyDistance);
      }
      if (criticalDistance_ != null) {
        size += _single_criticalDistance_codec.CalculateSizeWithTag(CriticalDistance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LidarSafety other) {
      if (other == null) {
        return;
      }
      if (other.safetyOn_ != null) {
        if (safetyOn_ == null || other.SafetyOn != false) {
          SafetyOn = other.SafetyOn;
        }
      }
      if (other.safetyDistance_ != null) {
        if (safetyDistance_ == null || other.SafetyDistance != 0F) {
          SafetyDistance = other.SafetyDistance;
        }
      }
      if (other.criticalDistance_ != null) {
        if (criticalDistance_ == null || other.CriticalDistance != 0F) {
          CriticalDistance = other.CriticalDistance;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bool? value = _single_safetyOn_codec.Read(input);
            if (safetyOn_ == null || value != false) {
              SafetyOn = value;
            }
            break;
          }
          case 18: {
            float? value = _single_safetyDistance_codec.Read(input);
            if (safetyDistance_ == null || value != 0F) {
              SafetyDistance = value;
            }
            break;
          }
          case 26: {
            float? value = _single_criticalDistance_codec.Read(input);
            if (criticalDistance_ == null || value != 0F) {
              CriticalDistance = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bool? value = _single_safetyOn_codec.Read(ref input);
            if (safetyOn_ == null || value != false) {
              SafetyOn = value;
            }
            break;
          }
          case 18: {
            float? value = _single_safetyDistance_codec.Read(ref input);
            if (safetyDistance_ == null || value != 0F) {
              SafetyDistance = value;
            }
            break;
          }
          case 26: {
            float? value = _single_criticalDistance_codec.Read(ref input);
            if (criticalDistance_ == null || value != 0F) {
              CriticalDistance = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MobilityServiceAck : pb::IMessage<MobilityServiceAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MobilityServiceAck> _parser = new pb::MessageParser<MobilityServiceAck>(() => new MobilityServiceAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MobilityServiceAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobilityServiceAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobilityServiceAck(MobilityServiceAck other) : this() {
      Success = other.Success;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobilityServiceAck Clone() {
      return new MobilityServiceAck(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private static readonly pb::FieldCodec<bool?> _single_success_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
    private bool? success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MobilityServiceAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MobilityServiceAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (success_ != null) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (success_ != null) {
        _single_success_codec.WriteTagAndValue(output, Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (success_ != null) {
        _single_success_codec.WriteTagAndValue(ref output, Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (success_ != null) {
        size += _single_success_codec.CalculateSizeWithTag(Success);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MobilityServiceAck other) {
      if (other == null) {
        return;
      }
      if (other.success_ != null) {
        if (success_ == null || other.Success != false) {
          Success = other.Success;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bool? value = _single_success_codec.Read(input);
            if (success_ == null || value != false) {
              Success = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bool? value = _single_success_codec.Read(ref input);
            if (success_ == null || value != false) {
              Success = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LidarMap : pb::IMessage<LidarMap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LidarMap> _parser = new pb::MessageParser<LidarMap>(() => new LidarMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LidarMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Base.Sdk.MobileBaseReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LidarMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LidarMap(LidarMap other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LidarMap Clone() {
      return new LidarMap(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LidarMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LidarMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LidarMap other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: hand.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Reachy.Part.Hand {
  public static partial class HandService
  {
    static readonly string __ServiceName = "reachy.part.hand.HandService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::Reachy.Part.Hand.ListOfHand> __Marshaller_reachy_part_hand_ListOfHand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Part.Hand.ListOfHand.Parser));
    static readonly grpc::Marshaller<global::Reachy.Part.PartId> __Marshaller_reachy_part_PartId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Part.PartId.Parser));
    static readonly grpc::Marshaller<global::Reachy.Part.Hand.HandState> __Marshaller_reachy_part_hand_HandState = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Part.Hand.HandState.Parser));
    static readonly grpc::Marshaller<global::Reachy.Part.Hand.HandStatus> __Marshaller_reachy_part_hand_HandStatus = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Part.Hand.HandStatus.Parser));
    static readonly grpc::Marshaller<global::Reachy.Part.Hand.JointsLimits> __Marshaller_reachy_part_hand_JointsLimits = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Part.Hand.JointsLimits.Parser));
    static readonly grpc::Marshaller<global::Reachy.Part.Hand.HandTemperatures> __Marshaller_reachy_part_hand_HandTemperatures = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Part.Hand.HandTemperatures.Parser));
    static readonly grpc::Marshaller<global::Reachy.Part.Hand.HandPosition> __Marshaller_reachy_part_hand_HandPosition = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Part.Hand.HandPosition.Parser));
    static readonly grpc::Marshaller<global::Reachy.Part.Hand.SpeedLimitRequest> __Marshaller_reachy_part_hand_SpeedLimitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Part.Hand.SpeedLimitRequest.Parser));
    static readonly grpc::Marshaller<global::Reachy.Part.Hand.HandPositionRequest> __Marshaller_reachy_part_hand_HandPositionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Part.Hand.HandPositionRequest.Parser));
    static readonly grpc::Marshaller<global::Reachy.Part.Hand.Force> __Marshaller_reachy_part_hand_Force = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Part.Hand.Force.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Part.Hand.ListOfHand> __Method_GetAllHands = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Part.Hand.ListOfHand>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllHands",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_reachy_part_hand_ListOfHand);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandState> __Method_GetState = new grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandState>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetState",
        __Marshaller_reachy_part_PartId,
        __Marshaller_reachy_part_hand_HandState);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty> __Method_OpenHand = new grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OpenHand",
        __Marshaller_reachy_part_PartId,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CloseHand = new grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CloseHand",
        __Marshaller_reachy_part_PartId,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandStatus> __Method_Audit = new grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandStatus>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Audit",
        __Marshaller_reachy_part_PartId,
        __Marshaller_reachy_part_hand_HandStatus);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty> __Method_HeartBeat = new grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "HeartBeat",
        __Marshaller_reachy_part_PartId,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Restart = new grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Restart",
        __Marshaller_reachy_part_PartId,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ResetDefaultValues = new grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetDefaultValues",
        __Marshaller_reachy_part_PartId,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty> __Method_TurnOn = new grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TurnOn",
        __Marshaller_reachy_part_PartId,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty> __Method_TurnOff = new grpc::Method<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TurnOff",
        __Marshaller_reachy_part_PartId,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.JointsLimits> __Method_GetJointLimit = new grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.JointsLimits>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetJointLimit",
        __Marshaller_reachy_part_PartId,
        __Marshaller_reachy_part_hand_JointsLimits);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandTemperatures> __Method_GetTemperature = new grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandTemperatures>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTemperature",
        __Marshaller_reachy_part_PartId,
        __Marshaller_reachy_part_hand_HandTemperatures);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandPosition> __Method_GetHandGoalPosition = new grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandPosition>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHandGoalPosition",
        __Marshaller_reachy_part_PartId,
        __Marshaller_reachy_part_hand_HandPosition);

    static readonly grpc::Method<global::Reachy.Part.Hand.SpeedLimitRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetSpeedLimit = new grpc::Method<global::Reachy.Part.Hand.SpeedLimitRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetSpeedLimit",
        __Marshaller_reachy_part_hand_SpeedLimitRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Reachy.Part.Hand.HandPositionRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetHandPosition = new grpc::Method<global::Reachy.Part.Hand.HandPositionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetHandPosition",
        __Marshaller_reachy_part_hand_HandPositionRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.Force> __Method_GetForce = new grpc::Method<global::Reachy.Part.PartId, global::Reachy.Part.Hand.Force>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetForce",
        __Marshaller_reachy_part_PartId,
        __Marshaller_reachy_part_hand_Force);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Reachy.Part.Hand.HandReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of HandService</summary>
    [grpc::BindServiceMethod(typeof(HandService), "BindService")]
    public abstract partial class HandServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Reachy.Part.Hand.ListOfHand> GetAllHands(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Part.Hand.HandState> GetState(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> OpenHand(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> CloseHand(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Part.Hand.HandStatus> Audit(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> HeartBeat(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Restart(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ResetDefaultValues(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> TurnOn(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> TurnOff(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Part.Hand.JointsLimits> GetJointLimit(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Part.Hand.HandTemperatures> GetTemperature(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Part.Hand.HandPosition> GetHandGoalPosition(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SetSpeedLimit(global::Reachy.Part.Hand.SpeedLimitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SetHandPosition(global::Reachy.Part.Hand.HandPositionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Part.Hand.Force> GetForce(global::Reachy.Part.PartId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for HandService</summary>
    public partial class HandServiceClient : grpc::ClientBase<HandServiceClient>
    {
      /// <summary>Creates a new client for HandService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public HandServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for HandService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public HandServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected HandServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected HandServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Reachy.Part.Hand.ListOfHand GetAllHands(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllHands(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Part.Hand.ListOfHand GetAllHands(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllHands, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.ListOfHand> GetAllHandsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllHandsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.ListOfHand> GetAllHandsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllHands, null, options, request);
      }
      public virtual global::Reachy.Part.Hand.HandState GetState(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Part.Hand.HandState GetState(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetState, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.HandState> GetStateAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.HandState> GetStateAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetState, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty OpenHand(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenHand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty OpenHand(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OpenHand, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> OpenHandAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenHandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> OpenHandAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OpenHand, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CloseHand(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CloseHand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CloseHand(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CloseHand, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CloseHandAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CloseHandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CloseHandAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CloseHand, null, options, request);
      }
      public virtual global::Reachy.Part.Hand.HandStatus Audit(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Audit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Part.Hand.HandStatus Audit(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Audit, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.HandStatus> AuditAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AuditAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.HandStatus> AuditAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Audit, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty HeartBeat(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HeartBeat(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty HeartBeat(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_HeartBeat, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> HeartBeatAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HeartBeatAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> HeartBeatAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_HeartBeat, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Restart(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Restart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Restart(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Restart, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RestartAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RestartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RestartAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Restart, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ResetDefaultValues(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetDefaultValues(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ResetDefaultValues(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetDefaultValues, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ResetDefaultValuesAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetDefaultValuesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ResetDefaultValuesAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetDefaultValues, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty TurnOn(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TurnOn(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty TurnOn(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TurnOn, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> TurnOnAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TurnOnAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> TurnOnAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TurnOn, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty TurnOff(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TurnOff(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty TurnOff(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TurnOff, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> TurnOffAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TurnOffAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> TurnOffAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TurnOff, null, options, request);
      }
      public virtual global::Reachy.Part.Hand.JointsLimits GetJointLimit(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJointLimit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Part.Hand.JointsLimits GetJointLimit(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetJointLimit, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.JointsLimits> GetJointLimitAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJointLimitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.JointsLimits> GetJointLimitAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetJointLimit, null, options, request);
      }
      public virtual global::Reachy.Part.Hand.HandTemperatures GetTemperature(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTemperature(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Part.Hand.HandTemperatures GetTemperature(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTemperature, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.HandTemperatures> GetTemperatureAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTemperatureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.HandTemperatures> GetTemperatureAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTemperature, null, options, request);
      }
      public virtual global::Reachy.Part.Hand.HandPosition GetHandGoalPosition(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHandGoalPosition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Part.Hand.HandPosition GetHandGoalPosition(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHandGoalPosition, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.HandPosition> GetHandGoalPositionAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHandGoalPositionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.HandPosition> GetHandGoalPositionAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHandGoalPosition, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetSpeedLimit(global::Reachy.Part.Hand.SpeedLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSpeedLimit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetSpeedLimit(global::Reachy.Part.Hand.SpeedLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetSpeedLimit, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetSpeedLimitAsync(global::Reachy.Part.Hand.SpeedLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSpeedLimitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetSpeedLimitAsync(global::Reachy.Part.Hand.SpeedLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetSpeedLimit, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetHandPosition(global::Reachy.Part.Hand.HandPositionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetHandPosition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetHandPosition(global::Reachy.Part.Hand.HandPositionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetHandPosition, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetHandPositionAsync(global::Reachy.Part.Hand.HandPositionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetHandPositionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetHandPositionAsync(global::Reachy.Part.Hand.HandPositionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetHandPosition, null, options, request);
      }
      public virtual global::Reachy.Part.Hand.Force GetForce(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetForce(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Part.Hand.Force GetForce(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetForce, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.Force> GetForceAsync(global::Reachy.Part.PartId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetForceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Part.Hand.Force> GetForceAsync(global::Reachy.Part.PartId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetForce, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override HandServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new HandServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(HandServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllHands, serviceImpl.GetAllHands)
          .AddMethod(__Method_GetState, serviceImpl.GetState)
          .AddMethod(__Method_OpenHand, serviceImpl.OpenHand)
          .AddMethod(__Method_CloseHand, serviceImpl.CloseHand)
          .AddMethod(__Method_Audit, serviceImpl.Audit)
          .AddMethod(__Method_HeartBeat, serviceImpl.HeartBeat)
          .AddMethod(__Method_Restart, serviceImpl.Restart)
          .AddMethod(__Method_ResetDefaultValues, serviceImpl.ResetDefaultValues)
          .AddMethod(__Method_TurnOn, serviceImpl.TurnOn)
          .AddMethod(__Method_TurnOff, serviceImpl.TurnOff)
          .AddMethod(__Method_GetJointLimit, serviceImpl.GetJointLimit)
          .AddMethod(__Method_GetTemperature, serviceImpl.GetTemperature)
          .AddMethod(__Method_GetHandGoalPosition, serviceImpl.GetHandGoalPosition)
          .AddMethod(__Method_SetSpeedLimit, serviceImpl.SetSpeedLimit)
          .AddMethod(__Method_SetHandPosition, serviceImpl.SetHandPosition)
          .AddMethod(__Method_GetForce, serviceImpl.GetForce).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, HandServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllHands, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Part.Hand.ListOfHand>(serviceImpl.GetAllHands));
      serviceBinder.AddMethod(__Method_GetState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandState>(serviceImpl.GetState));
      serviceBinder.AddMethod(__Method_OpenHand, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.OpenHand));
      serviceBinder.AddMethod(__Method_CloseHand, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.CloseHand));
      serviceBinder.AddMethod(__Method_Audit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandStatus>(serviceImpl.Audit));
      serviceBinder.AddMethod(__Method_HeartBeat, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.HeartBeat));
      serviceBinder.AddMethod(__Method_Restart, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.Restart));
      serviceBinder.AddMethod(__Method_ResetDefaultValues, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ResetDefaultValues));
      serviceBinder.AddMethod(__Method_TurnOn, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.TurnOn));
      serviceBinder.AddMethod(__Method_TurnOff, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.TurnOff));
      serviceBinder.AddMethod(__Method_GetJointLimit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Reachy.Part.Hand.JointsLimits>(serviceImpl.GetJointLimit));
      serviceBinder.AddMethod(__Method_GetTemperature, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandTemperatures>(serviceImpl.GetTemperature));
      serviceBinder.AddMethod(__Method_GetHandGoalPosition, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Reachy.Part.Hand.HandPosition>(serviceImpl.GetHandGoalPosition));
      serviceBinder.AddMethod(__Method_SetSpeedLimit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.Hand.SpeedLimitRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SetSpeedLimit));
      serviceBinder.AddMethod(__Method_SetHandPosition, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.Hand.HandPositionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SetHandPosition));
      serviceBinder.AddMethod(__Method_GetForce, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Part.PartId, global::Reachy.Part.Hand.Force>(serviceImpl.GetForce));
    }

  }
}
#endregion

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import component_pb2 as component__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import sound_pb2 as sound__pb2


class SoundServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllMicrophone = channel.unary_unary(
                '/component.sound.SoundService/GetAllMicrophone',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=sound__pb2.ListOfMicrophone.FromString,
                )
        self.GetAllSpeaker = channel.unary_unary(
                '/component.sound.SoundService/GetAllSpeaker',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=sound__pb2.ListOfSpeaker.FromString,
                )
        self.StartRecording = channel.unary_unary(
                '/component.sound.SoundService/StartRecording',
                request_serializer=sound__pb2.RecordingRequest.SerializeToString,
                response_deserializer=sound__pb2.RecordingAck.FromString,
                )
        self.StopRecording = channel.unary_unary(
                '/component.sound.SoundService/StopRecording',
                request_serializer=component__pb2.ComponentId.SerializeToString,
                response_deserializer=sound__pb2.RecordingAck.FromString,
                )
        self.TestSpeaker = channel.unary_unary(
                '/component.sound.SoundService/TestSpeaker',
                request_serializer=component__pb2.ComponentId.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ChangeVolume = channel.unary_unary(
                '/component.sound.SoundService/ChangeVolume',
                request_serializer=sound__pb2.VolumeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.PlaySound = channel.unary_unary(
                '/component.sound.SoundService/PlaySound',
                request_serializer=sound__pb2.SoundRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.StopSound = channel.unary_unary(
                '/component.sound.SoundService/StopSound',
                request_serializer=component__pb2.ComponentId.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetSoundsList = channel.unary_unary(
                '/component.sound.SoundService/GetSoundsList',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=sound__pb2.ListOfSound.FromString,
                )
        self.SayText = channel.unary_unary(
                '/component.sound.SoundService/SayText',
                request_serializer=sound__pb2.TextRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class SoundServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAllMicrophone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllSpeaker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartRecording(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopRecording(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestSpeaker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlaySound(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopSound(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSoundsList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayText(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SoundServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllMicrophone': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllMicrophone,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=sound__pb2.ListOfMicrophone.SerializeToString,
            ),
            'GetAllSpeaker': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllSpeaker,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=sound__pb2.ListOfSpeaker.SerializeToString,
            ),
            'StartRecording': grpc.unary_unary_rpc_method_handler(
                    servicer.StartRecording,
                    request_deserializer=sound__pb2.RecordingRequest.FromString,
                    response_serializer=sound__pb2.RecordingAck.SerializeToString,
            ),
            'StopRecording': grpc.unary_unary_rpc_method_handler(
                    servicer.StopRecording,
                    request_deserializer=component__pb2.ComponentId.FromString,
                    response_serializer=sound__pb2.RecordingAck.SerializeToString,
            ),
            'TestSpeaker': grpc.unary_unary_rpc_method_handler(
                    servicer.TestSpeaker,
                    request_deserializer=component__pb2.ComponentId.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ChangeVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeVolume,
                    request_deserializer=sound__pb2.VolumeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'PlaySound': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaySound,
                    request_deserializer=sound__pb2.SoundRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'StopSound': grpc.unary_unary_rpc_method_handler(
                    servicer.StopSound,
                    request_deserializer=component__pb2.ComponentId.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetSoundsList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSoundsList,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=sound__pb2.ListOfSound.SerializeToString,
            ),
            'SayText': grpc.unary_unary_rpc_method_handler(
                    servicer.SayText,
                    request_deserializer=sound__pb2.TextRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'component.sound.SoundService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SoundService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAllMicrophone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.sound.SoundService/GetAllMicrophone',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            sound__pb2.ListOfMicrophone.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllSpeaker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.sound.SoundService/GetAllSpeaker',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            sound__pb2.ListOfSpeaker.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartRecording(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.sound.SoundService/StartRecording',
            sound__pb2.RecordingRequest.SerializeToString,
            sound__pb2.RecordingAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopRecording(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.sound.SoundService/StopRecording',
            component__pb2.ComponentId.SerializeToString,
            sound__pb2.RecordingAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestSpeaker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.sound.SoundService/TestSpeaker',
            component__pb2.ComponentId.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.sound.SoundService/ChangeVolume',
            sound__pb2.VolumeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlaySound(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.sound.SoundService/PlaySound',
            sound__pb2.SoundRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopSound(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.sound.SoundService/StopSound',
            component__pb2.ComponentId.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSoundsList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.sound.SoundService/GetSoundsList',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            sound__pb2.ListOfSound.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.sound.SoundService/SayText',
            sound__pb2.TextRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

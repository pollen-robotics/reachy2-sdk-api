"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing
import video_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class VideoServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    GetAvailableCameras: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        video_pb2.ListOfCameraFeatures,
    ]

    GetFrame: grpc.UnaryUnaryMultiCallable[
        video_pb2.ViewRequest,
        video_pb2.Frame,
    ]
<<<<<<< HEAD

    GetDepthFrame: grpc.UnaryUnaryMultiCallable[
=======
    GetParameters: grpc.UnaryUnaryMultiCallable[
>>>>>>> v1.0.9
        video_pb2.ViewRequest,
        video_pb2.CameraParameters,
    ]
<<<<<<< HEAD

    GetDepthMap: grpc.UnaryUnaryMultiCallable[
        video_pb2.CameraInfo,
        video_pb2.Frame,
    ]

    GetDisparity: grpc.UnaryUnaryMultiCallable[
        video_pb2.CameraInfo,
        video_pb2.Frame,
    ]

    GetIntrinsicMatrix: grpc.UnaryUnaryMultiCallable[
        video_pb2.ViewRequest,
        video_pb2.IntrinsicMatrix,
    ]

    GetDepthIntrinsicMatrix: grpc.UnaryUnaryMultiCallable[
        video_pb2.CameraInfo,
        video_pb2.IntrinsicMatrix,
    ]

    Capture: grpc.UnaryUnaryMultiCallable[
        video_pb2.CameraInfo,
        video_pb2.VideoAck,
    ]

    GoodBye: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        google.protobuf.empty_pb2.Empty,
=======
    GetDepth: grpc.UnaryUnaryMultiCallable[
        video_pb2.ViewRequest,
        video_pb2.FrameRaw,
>>>>>>> v1.0.9
    ]

class VideoServiceAsyncStub:
    GetAvailableCameras: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        video_pb2.ListOfCameraFeatures,
    ]

    GetFrame: grpc.aio.UnaryUnaryMultiCallable[
        video_pb2.ViewRequest,
        video_pb2.Frame,
    ]
<<<<<<< HEAD

    GetDepthFrame: grpc.aio.UnaryUnaryMultiCallable[
=======
    GetParameters: grpc.aio.UnaryUnaryMultiCallable[
>>>>>>> v1.0.9
        video_pb2.ViewRequest,
        video_pb2.CameraParameters,
    ]
<<<<<<< HEAD

    GetDepthMap: grpc.aio.UnaryUnaryMultiCallable[
        video_pb2.CameraInfo,
        video_pb2.Frame,
    ]

    GetDisparity: grpc.aio.UnaryUnaryMultiCallable[
        video_pb2.CameraInfo,
        video_pb2.Frame,
    ]

    GetIntrinsicMatrix: grpc.aio.UnaryUnaryMultiCallable[
        video_pb2.ViewRequest,
        video_pb2.IntrinsicMatrix,
    ]

    GetDepthIntrinsicMatrix: grpc.aio.UnaryUnaryMultiCallable[
        video_pb2.CameraInfo,
        video_pb2.IntrinsicMatrix,
    ]

    Capture: grpc.aio.UnaryUnaryMultiCallable[
        video_pb2.CameraInfo,
        video_pb2.VideoAck,
    ]

    GoodBye: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        google.protobuf.empty_pb2.Empty,
=======
    GetDepth: grpc.aio.UnaryUnaryMultiCallable[
        video_pb2.ViewRequest,
        video_pb2.FrameRaw,
>>>>>>> v1.0.9
    ]

class VideoServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetAvailableCameras(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
<<<<<<< HEAD
    ) -> typing.Union[video_pb2.ListOfCameraInfo, collections.abc.Awaitable[video_pb2.ListOfCameraInfo]]: ...

=======
    ) -> typing.Union[video_pb2.ListOfCameraFeatures, collections.abc.Awaitable[video_pb2.ListOfCameraFeatures]]: ...
>>>>>>> v1.0.9
    @abc.abstractmethod
    def GetFrame(
        self,
        request: video_pb2.ViewRequest,
        context: _ServicerContext,
    ) -> typing.Union[video_pb2.Frame, collections.abc.Awaitable[video_pb2.Frame]]: ...

    @abc.abstractmethod
    def GetParameters(
        self,
        request: video_pb2.ViewRequest,
        context: _ServicerContext,
<<<<<<< HEAD
    ) -> typing.Union[video_pb2.Frame, collections.abc.Awaitable[video_pb2.Frame]]: ...

=======
    ) -> typing.Union[video_pb2.CameraParameters, collections.abc.Awaitable[video_pb2.CameraParameters]]: ...
>>>>>>> v1.0.9
    @abc.abstractmethod
    def GetDepth(
        self,
        request: video_pb2.ViewRequest,
        context: _ServicerContext,
<<<<<<< HEAD
    ) -> typing.Union[video_pb2.Frame, collections.abc.Awaitable[video_pb2.Frame]]: ...

    @abc.abstractmethod
    def GetDisparity(
        self,
        request: video_pb2.CameraInfo,
        context: _ServicerContext,
    ) -> typing.Union[video_pb2.Frame, collections.abc.Awaitable[video_pb2.Frame]]: ...

    @abc.abstractmethod
    def GetIntrinsicMatrix(
        self,
        request: video_pb2.ViewRequest,
        context: _ServicerContext,
    ) -> typing.Union[video_pb2.IntrinsicMatrix, collections.abc.Awaitable[video_pb2.IntrinsicMatrix]]: ...

    @abc.abstractmethod
    def GetDepthIntrinsicMatrix(
        self,
        request: video_pb2.CameraInfo,
        context: _ServicerContext,
    ) -> typing.Union[video_pb2.IntrinsicMatrix, collections.abc.Awaitable[video_pb2.IntrinsicMatrix]]: ...

    @abc.abstractmethod
    def Capture(
        self,
        request: video_pb2.CameraInfo,
        context: _ServicerContext,
    ) -> typing.Union[video_pb2.VideoAck, collections.abc.Awaitable[video_pb2.VideoAck]]: ...

    @abc.abstractmethod
    def GoodBye(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...
=======
    ) -> typing.Union[video_pb2.FrameRaw, collections.abc.Awaitable[video_pb2.FrameRaw]]: ...
>>>>>>> v1.0.9

def add_VideoServiceServicer_to_server(servicer: VideoServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

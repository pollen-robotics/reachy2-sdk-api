"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import kinematics_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _MarkerShape:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _MarkerShapeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MarkerShape.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ARROW: _MarkerShape.ValueType  # 0
    CUBE: _MarkerShape.ValueType  # 1
    SPHERE: _MarkerShape.ValueType  # 2
    CYLINDER: _MarkerShape.ValueType  # 3
    LINE_STRIP: _MarkerShape.ValueType  # 4
    LINE_LIST: _MarkerShape.ValueType  # 5
    CUBE_LIST: _MarkerShape.ValueType  # 6
    SPHERE_LIST: _MarkerShape.ValueType  # 7
    POINTS: _MarkerShape.ValueType  # 8
    TEXT_VIEW_FACING: _MarkerShape.ValueType  # 9
    MESH_RESOURCE: _MarkerShape.ValueType  # 10
    TRIANGLE_LIST: _MarkerShape.ValueType  # 11
    ADD: _MarkerShape.ValueType  # 12
    MODIFY: _MarkerShape.ValueType  # 13
    DELETE: _MarkerShape.ValueType  # 14
    DELETEALL: _MarkerShape.ValueType  # 15
    GRASP_FORK: _MarkerShape.ValueType  # 16

class MarkerShape(_MarkerShape, metaclass=_MarkerShapeEnumTypeWrapper): ...

ARROW: MarkerShape.ValueType  # 0
CUBE: MarkerShape.ValueType  # 1
SPHERE: MarkerShape.ValueType  # 2
CYLINDER: MarkerShape.ValueType  # 3
LINE_STRIP: MarkerShape.ValueType  # 4
LINE_LIST: MarkerShape.ValueType  # 5
CUBE_LIST: MarkerShape.ValueType  # 6
SPHERE_LIST: MarkerShape.ValueType  # 7
POINTS: MarkerShape.ValueType  # 8
TEXT_VIEW_FACING: MarkerShape.ValueType  # 9
MESH_RESOURCE: MarkerShape.ValueType  # 10
TRIANGLE_LIST: MarkerShape.ValueType  # 11
ADD: MarkerShape.ValueType  # 12
MODIFY: MarkerShape.ValueType  # 13
DELETE: MarkerShape.ValueType  # 14
DELETEALL: MarkerShape.ValueType  # 15
GRASP_FORK: MarkerShape.ValueType  # 16
global___MarkerShape = MarkerShape

@typing.final
class Marker(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POSE_FIELD_NUMBER: builtins.int
    COLOR_FIELD_NUMBER: builtins.int
    SHAPE_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    SCALE_FIELD_NUMBER: builtins.int
    LIFETIME_FIELD_NUMBER: builtins.int
    shape: global___MarkerShape.ValueType
    id: builtins.int
    @property
    def pose(self) -> kinematics_pb2.Matrix4x4: ...
    @property
    def color(self) -> global___MarkerColor: ...
    @property
    def scale(self) -> global___MarkerScale: ...
    @property
    def lifetime(self) -> google.protobuf.wrappers_pb2.FloatValue: ...
    def __init__(
        self,
        *,
        pose: kinematics_pb2.Matrix4x4 | None = ...,
        color: global___MarkerColor | None = ...,
        shape: global___MarkerShape.ValueType = ...,
        id: builtins.int = ...,
        scale: global___MarkerScale | None = ...,
        lifetime: google.protobuf.wrappers_pb2.FloatValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["color", b"color", "lifetime", b"lifetime", "pose", b"pose", "scale", b"scale"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["color", b"color", "id", b"id", "lifetime", b"lifetime", "pose", b"pose", "scale", b"scale", "shape", b"shape"]) -> None: ...

global___Marker = Marker

@typing.final
class MarkerArray(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MARKERS_FIELD_NUMBER: builtins.int
    @property
    def markers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Marker]: ...
    def __init__(
        self,
        *,
        markers: collections.abc.Iterable[global___Marker] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["markers", b"markers"]) -> None: ...

global___MarkerArray = MarkerArray

@typing.final
class MarkerColor(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    R_FIELD_NUMBER: builtins.int
    G_FIELD_NUMBER: builtins.int
    B_FIELD_NUMBER: builtins.int
    A_FIELD_NUMBER: builtins.int
    @property
    def r(self) -> google.protobuf.wrappers_pb2.FloatValue: ...
    @property
    def g(self) -> google.protobuf.wrappers_pb2.FloatValue: ...
    @property
    def b(self) -> google.protobuf.wrappers_pb2.FloatValue: ...
    @property
    def a(self) -> google.protobuf.wrappers_pb2.FloatValue: ...
    def __init__(
        self,
        *,
        r: google.protobuf.wrappers_pb2.FloatValue | None = ...,
        g: google.protobuf.wrappers_pb2.FloatValue | None = ...,
        b: google.protobuf.wrappers_pb2.FloatValue | None = ...,
        a: google.protobuf.wrappers_pb2.FloatValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["a", b"a", "b", b"b", "g", b"g", "r", b"r"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["a", b"a", "b", b"b", "g", b"g", "r", b"r"]) -> None: ...

global___MarkerColor = MarkerColor

@typing.final
class MarkerScale(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    @property
    def x(self) -> google.protobuf.wrappers_pb2.FloatValue: ...
    @property
    def y(self) -> google.protobuf.wrappers_pb2.FloatValue: ...
    @property
    def z(self) -> google.protobuf.wrappers_pb2.FloatValue: ...
    def __init__(
        self,
        *,
        x: google.protobuf.wrappers_pb2.FloatValue | None = ...,
        y: google.protobuf.wrappers_pb2.FloatValue | None = ...,
        z: google.protobuf.wrappers_pb2.FloatValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["x", b"x", "y", b"y", "z", b"z"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___MarkerScale = MarkerScale

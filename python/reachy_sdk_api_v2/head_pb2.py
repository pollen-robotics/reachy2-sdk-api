# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: head.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import part_pb2 as part__pb2
import kinematics_pb2 as kinematics__pb2
import error_pb2 as error__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\nhead.proto\x12\x10reachy.part.head\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\npart.proto\x1a\x10kinematics.proto\x1a\x0b\x65rror.proto\"\x06\n\x04Head\"2\n\nListOfHead\x12$\n\x04head\x18\x01 \x03(\x0b\x32\x16.reachy.part.head.Head\"\x0b\n\tHeadState\"G\n\x0cNeckPosition\x12\x11\n\tneck_roll\x18\x01 \x01(\x02\x12\x12\n\nneck_pitch\x18\x02 \x01(\x02\x12\x10\n\x08neck_yaw\x18\x03 \x01(\x02\"\xa0\x01\n\x0cHeadPosition\x12\x30\n\x08position\x18\x01 \x01(\x0b\x32\x1e.reachy.part.head.NeckPosition\x12.\n\tl_antenna\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.FloatValue\x12.\n\tr_antenna\x18\x03 \x01(\x0b\x32\x1b.google.protobuf.FloatValue\"\x8b\x01\n\x08NeckGoal\x12\x1f\n\x02id\x18\x01 \x01(\x0b\x32\x13.reachy.part.PartId\x12/\n\x08rotation\x18\x02 \x01(\x0b\x32\x1d.reachy.kinematics.Rotation3D\x12-\n\x08\x64uration\x18\x03 \x01(\x0b\x32\x1b.google.protobuf.FloatValue\";\n\x0fNeckOrientation\x12(\n\x01q\x18\x01 \x01(\x0b\x32\x1d.reachy.kinematics.Quaternion\"A\n\rNeckFKRequest\x12\x30\n\x08position\x18\x02 \x01(\x0b\x32\x1e.reachy.part.head.HeadPosition\"Y\n\x0eNeckFKSolution\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x36\n\x0borientation\x18\x02 \x01(\x0b\x32!.reachy.part.head.NeckOrientation\"n\n\rNeckIKRequest\x12\x31\n\x06target\x18\x01 \x01(\x0b\x32!.reachy.part.head.NeckOrientation\x12*\n\x02q0\x18\x02 \x01(\x0b\x32\x1e.reachy.part.head.NeckPosition\"p\n\x0eNeckIKSolution\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x30\n\x08position\x18\x02 \x01(\x0b\x32\x1e.reachy.part.head.NeckPosition\x12\x1b\n\x05\x65rror\x18\x03 \x01(\x0b\x32\x0c.error.Error\"S\n\x07HeadAck\x12+\n\x07success\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x1b\n\x05\x65rror\x18\x03 \x01(\x0b\x32\x0c.error.Error\"\x0c\n\nHeadStatus\"[\n\x0fHeadTargetPoint\x12\x1f\n\x02id\x18\x01 \x01(\x0b\x32\x13.reachy.part.PartId\x12\'\n\x05point\x18\x02 \x01(\x0b\x32\x18.reachy.kinematics.Point\"a\n\x11SpeedLimitRequest\x12\x1f\n\x02id\x18\x01 \x01(\x0b\x32\x13.reachy.part.PartId\x12+\n\x05limit\x18\x02 \x01(\x0e\x32\x1c.reachy.part.head.SpeedLimit\"\'\n\x0bJointLimits\x12\x0b\n\x03min\x18\x01 \x01(\x02\x12\x0b\n\x03max\x18\x02 \x01(\x02\"\x88\x02\n\x0cJointsLimits\x12\x30\n\tneck_roll\x18\x01 \x01(\x0b\x32\x1d.reachy.part.head.JointLimits\x12\x31\n\nneck_pitch\x18\x02 \x01(\x0b\x32\x1d.reachy.part.head.JointLimits\x12/\n\x08neck_yaw\x18\x03 \x01(\x0b\x32\x1d.reachy.part.head.JointLimits\x12\x30\n\tl_antenna\x18\x04 \x01(\x0b\x32\x1d.reachy.part.head.JointLimits\x12\x30\n\tr_antenna\x18\x05 \x01(\x0b\x32\x1d.reachy.part.head.JointLimits\"-\n\x0cTemperatures\x12\r\n\x05motor\x18\x01 \x01(\x02\x12\x0e\n\x06\x64river\x18\x02 \x01(\x02\"\x99\x02\n\x0f\x41rmTemperatures\x12\x34\n\x0cneck_motor_1\x18\x01 \x01(\x0b\x32\x1e.reachy.part.head.Temperatures\x12\x34\n\x0cneck_motor_2\x18\x02 \x01(\x0b\x32\x1e.reachy.part.head.Temperatures\x12\x34\n\x0cneck_motor_3\x18\x03 \x01(\x0b\x32\x1e.reachy.part.head.Temperatures\x12\x31\n\tl_antenna\x18\x04 \x01(\x0b\x32\x1e.reachy.part.head.Temperatures\x12\x31\n\tr_antenna\x18\x05 \x01(\x0b\x32\x1e.reachy.part.head.Temperatures*:\n\nSpeedLimit\x12\x0c\n\x08NO_LIMIT\x10\x00\x12\x08\n\x04\x46\x41ST\x10\x01\x12\n\n\x06NORMAL\x10\x02\x12\x08\n\x04SLOW\x10\x03\x32\xf2\x08\n\x0bHeadService\x12\x43\n\x0bGetAllHeads\x12\x16.google.protobuf.Empty\x1a\x1c.reachy.part.head.ListOfHead\x12R\n\rComputeNeckFK\x12\x1f.reachy.part.head.NeckFKRequest\x1a .reachy.part.head.NeckFKSolution\x12R\n\rComputeNeckIK\x12\x1f.reachy.part.head.NeckIKRequest\x1a .reachy.part.head.NeckIKSolution\x12H\n\x0fGoToOrientation\x12\x1a.reachy.part.head.NeckGoal\x1a\x19.reachy.part.head.HeadAck\x12\x44\n\x0eGetOrientation\x12\x13.reachy.part.PartId\x1a\x1d.reachy.kinematics.Quaternion\x12\x46\n\x06LookAt\x12!.reachy.part.head.HeadTargetPoint\x1a\x19.reachy.part.head.HeadAck\x12:\n\x05\x41udit\x12\x13.reachy.part.PartId\x1a\x1c.reachy.part.head.HeadStatus\x12;\n\tHeartBeat\x12\x13.reachy.part.PartId\x1a\x19.reachy.part.head.HeadAck\x12\x39\n\x07Restart\x12\x13.reachy.part.PartId\x1a\x19.reachy.part.head.HeadAck\x12\x44\n\x12ResetDefaultValues\x12\x13.reachy.part.PartId\x1a\x19.reachy.part.head.HeadAck\x12\x38\n\x06TurnOn\x12\x13.reachy.part.PartId\x1a\x19.reachy.part.head.HeadAck\x12\x39\n\x07TurnOff\x12\x13.reachy.part.PartId\x1a\x19.reachy.part.head.HeadAck\x12\x46\n\x0fGetJointsLimits\x12\x13.reachy.part.PartId\x1a\x1e.reachy.part.head.JointsLimits\x12I\n\x0fGetTemperatures\x12\x13.reachy.part.PartId\x1a!.reachy.part.head.ArmTemperatures\x12K\n\x14GetJointGoalPosition\x12\x13.reachy.part.PartId\x1a\x1e.reachy.part.head.NeckPosition\x12O\n\rSetSpeedLimit\x12#.reachy.part.head.SpeedLimitRequest\x1a\x19.reachy.part.head.HeadAckb\x06proto3')

_SPEEDLIMIT = DESCRIPTOR.enum_types_by_name['SpeedLimit']
SpeedLimit = enum_type_wrapper.EnumTypeWrapper(_SPEEDLIMIT)
NO_LIMIT = 0
FAST = 1
NORMAL = 2
SLOW = 3


_HEAD = DESCRIPTOR.message_types_by_name['Head']
_LISTOFHEAD = DESCRIPTOR.message_types_by_name['ListOfHead']
_HEADSTATE = DESCRIPTOR.message_types_by_name['HeadState']
_NECKPOSITION = DESCRIPTOR.message_types_by_name['NeckPosition']
_HEADPOSITION = DESCRIPTOR.message_types_by_name['HeadPosition']
_NECKGOAL = DESCRIPTOR.message_types_by_name['NeckGoal']
_NECKORIENTATION = DESCRIPTOR.message_types_by_name['NeckOrientation']
_NECKFKREQUEST = DESCRIPTOR.message_types_by_name['NeckFKRequest']
_NECKFKSOLUTION = DESCRIPTOR.message_types_by_name['NeckFKSolution']
_NECKIKREQUEST = DESCRIPTOR.message_types_by_name['NeckIKRequest']
_NECKIKSOLUTION = DESCRIPTOR.message_types_by_name['NeckIKSolution']
_HEADACK = DESCRIPTOR.message_types_by_name['HeadAck']
_HEADSTATUS = DESCRIPTOR.message_types_by_name['HeadStatus']
_HEADTARGETPOINT = DESCRIPTOR.message_types_by_name['HeadTargetPoint']
_SPEEDLIMITREQUEST = DESCRIPTOR.message_types_by_name['SpeedLimitRequest']
_JOINTLIMITS = DESCRIPTOR.message_types_by_name['JointLimits']
_JOINTSLIMITS = DESCRIPTOR.message_types_by_name['JointsLimits']
_TEMPERATURES = DESCRIPTOR.message_types_by_name['Temperatures']
_ARMTEMPERATURES = DESCRIPTOR.message_types_by_name['ArmTemperatures']
Head = _reflection.GeneratedProtocolMessageType('Head', (_message.Message,), {
  'DESCRIPTOR' : _HEAD,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.Head)
  })
_sym_db.RegisterMessage(Head)

ListOfHead = _reflection.GeneratedProtocolMessageType('ListOfHead', (_message.Message,), {
  'DESCRIPTOR' : _LISTOFHEAD,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.ListOfHead)
  })
_sym_db.RegisterMessage(ListOfHead)

HeadState = _reflection.GeneratedProtocolMessageType('HeadState', (_message.Message,), {
  'DESCRIPTOR' : _HEADSTATE,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.HeadState)
  })
_sym_db.RegisterMessage(HeadState)

NeckPosition = _reflection.GeneratedProtocolMessageType('NeckPosition', (_message.Message,), {
  'DESCRIPTOR' : _NECKPOSITION,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.NeckPosition)
  })
_sym_db.RegisterMessage(NeckPosition)

HeadPosition = _reflection.GeneratedProtocolMessageType('HeadPosition', (_message.Message,), {
  'DESCRIPTOR' : _HEADPOSITION,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.HeadPosition)
  })
_sym_db.RegisterMessage(HeadPosition)

NeckGoal = _reflection.GeneratedProtocolMessageType('NeckGoal', (_message.Message,), {
  'DESCRIPTOR' : _NECKGOAL,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.NeckGoal)
  })
_sym_db.RegisterMessage(NeckGoal)

NeckOrientation = _reflection.GeneratedProtocolMessageType('NeckOrientation', (_message.Message,), {
  'DESCRIPTOR' : _NECKORIENTATION,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.NeckOrientation)
  })
_sym_db.RegisterMessage(NeckOrientation)

NeckFKRequest = _reflection.GeneratedProtocolMessageType('NeckFKRequest', (_message.Message,), {
  'DESCRIPTOR' : _NECKFKREQUEST,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.NeckFKRequest)
  })
_sym_db.RegisterMessage(NeckFKRequest)

NeckFKSolution = _reflection.GeneratedProtocolMessageType('NeckFKSolution', (_message.Message,), {
  'DESCRIPTOR' : _NECKFKSOLUTION,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.NeckFKSolution)
  })
_sym_db.RegisterMessage(NeckFKSolution)

NeckIKRequest = _reflection.GeneratedProtocolMessageType('NeckIKRequest', (_message.Message,), {
  'DESCRIPTOR' : _NECKIKREQUEST,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.NeckIKRequest)
  })
_sym_db.RegisterMessage(NeckIKRequest)

NeckIKSolution = _reflection.GeneratedProtocolMessageType('NeckIKSolution', (_message.Message,), {
  'DESCRIPTOR' : _NECKIKSOLUTION,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.NeckIKSolution)
  })
_sym_db.RegisterMessage(NeckIKSolution)

HeadAck = _reflection.GeneratedProtocolMessageType('HeadAck', (_message.Message,), {
  'DESCRIPTOR' : _HEADACK,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.HeadAck)
  })
_sym_db.RegisterMessage(HeadAck)

HeadStatus = _reflection.GeneratedProtocolMessageType('HeadStatus', (_message.Message,), {
  'DESCRIPTOR' : _HEADSTATUS,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.HeadStatus)
  })
_sym_db.RegisterMessage(HeadStatus)

HeadTargetPoint = _reflection.GeneratedProtocolMessageType('HeadTargetPoint', (_message.Message,), {
  'DESCRIPTOR' : _HEADTARGETPOINT,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.HeadTargetPoint)
  })
_sym_db.RegisterMessage(HeadTargetPoint)

SpeedLimitRequest = _reflection.GeneratedProtocolMessageType('SpeedLimitRequest', (_message.Message,), {
  'DESCRIPTOR' : _SPEEDLIMITREQUEST,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.SpeedLimitRequest)
  })
_sym_db.RegisterMessage(SpeedLimitRequest)

JointLimits = _reflection.GeneratedProtocolMessageType('JointLimits', (_message.Message,), {
  'DESCRIPTOR' : _JOINTLIMITS,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.JointLimits)
  })
_sym_db.RegisterMessage(JointLimits)

JointsLimits = _reflection.GeneratedProtocolMessageType('JointsLimits', (_message.Message,), {
  'DESCRIPTOR' : _JOINTSLIMITS,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.JointsLimits)
  })
_sym_db.RegisterMessage(JointsLimits)

Temperatures = _reflection.GeneratedProtocolMessageType('Temperatures', (_message.Message,), {
  'DESCRIPTOR' : _TEMPERATURES,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.Temperatures)
  })
_sym_db.RegisterMessage(Temperatures)

ArmTemperatures = _reflection.GeneratedProtocolMessageType('ArmTemperatures', (_message.Message,), {
  'DESCRIPTOR' : _ARMTEMPERATURES,
  '__module__' : 'head_pb2'
  # @@protoc_insertion_point(class_scope:reachy.part.head.ArmTemperatures)
  })
_sym_db.RegisterMessage(ArmTemperatures)

_HEADSERVICE = DESCRIPTOR.services_by_name['HeadService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SPEEDLIMIT._serialized_start=1962
  _SPEEDLIMIT._serialized_end=2020
  _HEAD._serialized_start=136
  _HEAD._serialized_end=142
  _LISTOFHEAD._serialized_start=144
  _LISTOFHEAD._serialized_end=194
  _HEADSTATE._serialized_start=196
  _HEADSTATE._serialized_end=207
  _NECKPOSITION._serialized_start=209
  _NECKPOSITION._serialized_end=280
  _HEADPOSITION._serialized_start=283
  _HEADPOSITION._serialized_end=443
  _NECKGOAL._serialized_start=446
  _NECKGOAL._serialized_end=585
  _NECKORIENTATION._serialized_start=587
  _NECKORIENTATION._serialized_end=646
  _NECKFKREQUEST._serialized_start=648
  _NECKFKREQUEST._serialized_end=713
  _NECKFKSOLUTION._serialized_start=715
  _NECKFKSOLUTION._serialized_end=804
  _NECKIKREQUEST._serialized_start=806
  _NECKIKREQUEST._serialized_end=916
  _NECKIKSOLUTION._serialized_start=918
  _NECKIKSOLUTION._serialized_end=1030
  _HEADACK._serialized_start=1032
  _HEADACK._serialized_end=1115
  _HEADSTATUS._serialized_start=1117
  _HEADSTATUS._serialized_end=1129
  _HEADTARGETPOINT._serialized_start=1131
  _HEADTARGETPOINT._serialized_end=1222
  _SPEEDLIMITREQUEST._serialized_start=1224
  _SPEEDLIMITREQUEST._serialized_end=1321
  _JOINTLIMITS._serialized_start=1323
  _JOINTLIMITS._serialized_end=1362
  _JOINTSLIMITS._serialized_start=1365
  _JOINTSLIMITS._serialized_end=1629
  _TEMPERATURES._serialized_start=1631
  _TEMPERATURES._serialized_end=1676
  _ARMTEMPERATURES._serialized_start=1679
  _ARMTEMPERATURES._serialized_end=1960
  _HEADSERVICE._serialized_start=2023
  _HEADSERVICE._serialized_end=3161
# @@protoc_insertion_point(module_scope)

syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

import "actuator.proto";
import "error.proto";

package actuator.parallel_gripper;

enum Field {
    NONE = 0;
    ALL = 15;
}

message ParallelGripperState {
    google.protobuf.Timestamp timestamp = 15;
}

message ParallelGripperStateRequest {
    repeated Field fields = 1;
    actuator.ActuatorId id = 2;
}

message ParallelGripperStreamStateRequest {
    ParallelGripperStateRequest req = 1;
    float freq = 2;
}


message ParallelGripperCommand {

}


message ParallelGripperInfo {
    ActuatorId id = 1;
    string serial_number = 2;
}

message ListOfParallelGripperInfo {
    repeated ParallelGripperInfo parallel_gripper_info = 1;
}

message ParallelGripperAck {
    google.protobuf.BoolValue success = 1;

    error.Error error = 2;
}

service GripperService {
    rpc GetAllParallelGripper (google.protobuf.Empty) returns (ListOfParallelGripperInfo);

    rpc GetState (ParallelGripperStateRequest) returns (ParallelGripperState);
    rpc StreamState (ParallelGripperStreamStateRequest) returns (stream ParallelGripperState);

    rpc SendCommand (ParallelGripperCommand) returns (ParallelGripperAck);
    rpc StreamCommand (stream ParallelGripperCommand) returns (ParallelGripperAck);
}
syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

import "part.proto";
import "kinematics.proto";
import "error.proto";

package reachy.part.arm;

enum ArmField {
    NONE = 0;

    NAME = 1;
    UID = 2;

    PRESENT_POSITION = 3;
    PRESENT_SPEED = 4;
    PRESENT_LOAD = 5;
    TEMPERATURE = 6;
    JOINT_LIMIT = 7;

    COMPLIANT = 8;
    GOAL_POSITION = 9;
    SPEED_LIMIT = 10;
    TORQUE_LIMIT = 11;
    PID = 12;

    ALL = 15;
}

message ArmState {
    
}

message Arm {
    PartId part_id = 1;

    PartInfo info = 5;
}

message ListOfArm {
    repeated Arm arm = 1;
}

message ArmPosition {
    float shoulder_pitch = 1;
    float shoulder_roll = 2;
    float elbow_yaw = 3;
    float elbow_pitch = 4;
    float wrist_roll = 5;
    float wrist_pitch = 6;
    float wrist_yaw = 7;
}

message ArmCartesianGoal {
    reachy.part.PartId id = 1;
    kinematics.Matrix4x4 position = 2;
    google.protobuf.FloatValue duration = 3;
}

message ArmJointGoal {
    reachy.part.PartId id = 1;
    ArmPosition position = 2;
    google.protobuf.FloatValue duration = 3;
}

message ArmEndEffector {
    reachy.kinematics.Matrix4x4 pose = 1;
}

message ArmFKSolution {
    bool success = 1;
    ArmEndEffector end_effector = 2;
}

message ArmIKRequest {
    ArmEndEffector target = 1;
    ArmPosition q0 = 2;
}

message ArmIKSolution {
    bool success = 1;
    ArmPosition arm_position = 2;

    error.Error error = 3;
}

message ArmAck {
    google.protobuf.BoolValue success = 1;

    error.Error error = 3;
}

message ArmStatus {
    ArmAck ack = 1;
}

enum SpeedLimit {
    NO_LIMIT = 0;
    FAST = 1;
    NORMAL = 2;
    SLOW = 3;
}

message SpeedLimitRequest {
    reachy.part.PartId id = 1;
    SpeedLimit limit = 2;
}

message JointLimits {
    float min = 1;
    float max = 2;
}

message JointsLimits {
    JointLimits shoulder_pitch = 1;
    JointLimits shoulder_roll = 2;
    JointLimits elbow_yaw = 3;
    JointLimits elbow_pitch = 4;
    JointLimits wrist_roll = 5;
    JointLimits wrist_pitch = 6;
    JointLimits wrist_yaw = 7;
}

message Temperatures {
    float motor = 1;
    float driver = 2;
}

message ArmTemperatures {
    Temperatures shoulder_motor_1 = 1;
    Temperatures shoulder_motor_2 = 2;
    Temperatures elbow_motor_1 = 3;
    Temperatures elbow_motor_2 = 4;
    Temperatures wrist_motor_1 = 5;
    Temperatures wrist_motor_2 = 6;
    Temperatures wrist_motor_3 = 7;
}

service ArmService {
    rpc GetAllArms (google.protobuf.Empty) returns (ListOfArm);

    rpc ComputeArmFK(ArmPosition) returns (ArmFKSolution);
    rpc ComputeArmIK(ArmIKRequest) returns (ArmIKSolution);

    rpc GoToCartesianPosition (ArmCartesianGoal) returns (ArmAck);
    rpc GoToJointPosition (ArmJointGoal) returns (ArmAck);

    rpc GetCartesianPosition (reachy.part.PartId) returns (kinematics.Matrix4x4);
    rpc GetJointPosition (reachy.part.PartId) returns (ArmPosition);

    rpc Audit (part.PartId) returns (ArmStatus);
    rpc HeartBeat (part.PartId) returns (ArmAck);

    rpc Restart (part.PartId) returns (ArmAck);
    rpc ResetDefaultValues(part.PartId) returns (ArmAck);

    rpc TurnOn (part.PartId) returns (ArmAck);
    rpc TurnOff (part.PartId) returns (ArmAck);

    rpc GetJointsLimits (part.PartId) returns (JointsLimits);
    rpc GetTemperatures (part.PartId) returns (ArmTemperatures);
    rpc GetJointGoalPosition (part.PartId) returns (ArmPosition);

    rpc SetSpeedLimit (SpeedLimitRequest) returns (ArmAck);
}

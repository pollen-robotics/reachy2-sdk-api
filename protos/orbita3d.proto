syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

import "component.proto";
import "kinematics.proto";

package component.orbita3d;

enum Orbita3DField {
    NONE = 0;

    NAME = 1;
    ID = 2;

    PRESENT_POSITION = 3;
    PRESENT_SPEED = 4;
    PRESENT_LOAD = 5;
    TEMPERATURE = 6;
    JOINT_LIMIT = 7;

    COMPLIANT = 8;
    GOAL_POSITION = 9;
    SPEED_LIMIT = 10;
    TORQUE_LIMIT = 11;
    PID = 12;

    ALL = 15;
}

message Orbita3DState {
    google.protobuf.Timestamp timestamp = 1;

    string name = 2;
    uint32 id = 3;

    reachy.kinematics.Rotation3D present_position = 4;
    Vector3D present_speed = 5;
    Vector3D present_load = 6;
    Float3D temperature = 7;

    google.protobuf.BoolValue compliant = 8;
    reachy.kinematics.Rotation3D goal_position = 9;
    Float3D speed_limit = 10;
    Float3D torque_limit = 11;

    PID3D pid = 12;
}

message Orbita3DStateRequest {
    repeated Orbita3DField fields = 1;
    component.ComponentId id = 2;
}

message Orbita3DStreamStateRequest {
    Orbita3DStateRequest req = 1;
    float freq = 2;
}

message PID3D {
    PIDGains motor_1 = 1;
    PIDGains motor_2 = 2;
    PIDGains motor_3 = 3;
}

message Float3D {
    float motor_1 = 1;
    float motor_2 = 2;
    float motor_3 = 3;
}

message Vector3D {
    float x = 1;
    float y = 2;
    float z = 3;
}

message Orbita3DCommand {
    component.ComponentId id = 1;

    google.protobuf.BoolValue compliant = 2;
    reachy.kinematics.Rotation3D goal_position = 3;
    Float3D speed_limit = 4;
    Float3D torque_limit = 5;
}

message Orbita3DsCommand {
    repeated Orbita3DCommand cmd = 1;
}

message Orbita3DInfo {
    ComponentId id = 1;
    string serial_number = 2;
}

message ListOfOrbita3DInfo {
    repeated Orbita3DInfo info = 1;
}

message Orbita3DStatus {

}

service Orbita3DService {
    rpc GetAllOrbita3D (google.protobuf.Empty) returns (ListOfOrbita3DInfo);

    rpc GetState (Orbita3DStateRequest) returns (Orbita3DState);
    rpc StreamState (Orbita3DStreamStateRequest) returns (stream Orbita3DState);

    rpc SendCommand (Orbita3DsCommand) returns (google.protobuf.Empty);
    rpc StreamCommand (stream Orbita3DsCommand) returns (google.protobuf.Empty);

    rpc Audit (component.ComponentId) returns (Orbita3DStatus);
    rpc HeartBeat (component.ComponentId) returns (google.protobuf.Empty);

    rpc Restart (component.ComponentId) returns (google.protobuf.Empty);
}
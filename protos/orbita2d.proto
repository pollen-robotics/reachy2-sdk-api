syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

import "component.proto";
import "error.proto";

package component.orbita2d;

enum Orbita2dField {
    NONE = 0;

    NAME = 1;
    ID = 2;

    PRESENT_POSITION = 3;
    PRESENT_SPEED = 4;
    PRESENT_LOAD = 5;
    TEMPERATURE = 6;
    JOINT_LIMITS = 7;

    COMPLIANT = 8;
    GOAL_POSITION = 9;
    SPEED_LIMIT = 10;
    TORQUE_LIMIT = 11;
    PID = 12;

    ALL = 15;
}

enum Axis {
    ROLL = 0;
    PITCH = 1;
    YAW = 2;
}

message Orbita2dState {
    google.protobuf.Timestamp timestamp = 1;

    component.ComponentId id = 2;

    Pose2d present_position = 3;
    Vector2d present_speed = 4;
    Vector2d present_load = 5;
    Float2d temperature = 6;
    Limits2d joint_limits = 7;

    google.protobuf.BoolValue compliant = 8;
    Pose2d goal_position = 9;
    Float2d speed_limit = 10;
    Float2d torque_limit = 11;

    PID2d pid = 12;
}

message Orbita2dStateRequest {
    repeated Orbita2dField fields = 1;
    component.ComponentId id = 2;
}

message Orbita2dStreamStateRequest {
    Orbita2dStateRequest req = 1;
    float freq = 2;
}

message PID2d {
    PIDGains motor_1 = 1;
    PIDGains motor_2 = 2;
}

message Limits2d {
    JointLimits axis_1 = 1;
    JointLimits axis_2 = 2;
}

message Pose2d {
    google.protobuf.FloatValue axis_1 = 1;
    google.protobuf.FloatValue axis_2 = 2;
}

message Float2d {
    google.protobuf.FloatValue motor_1 = 1;
    google.protobuf.FloatValue motor_2 = 2;
}

message Vector2d {
    google.protobuf.FloatValue x = 1;
    google.protobuf.FloatValue y = 2;
}

message Orbita2dCommand {
    component.ComponentId id = 1;

    google.protobuf.BoolValue compliant = 2;
    Pose2d goal_position = 3;
    Float2d speed_limit = 4;
    Float2d torque_limit = 5;

    PID2d pid = 12;
}

message Orbita2dsCommand {
    repeated Orbita2dCommand cmd = 1;
}

message Orbita2d {
    component.ComponentId id = 1;
    string serial_number = 2;
    Axis axis_1 = 3;
    Axis axis_2 = 4;
}

message ListOfOrbita2d {
    repeated Orbita2d orbita2d = 1;
}

message Orbita2dStatus {
    repeated error.Error errors = 1;
}

service Orbita2dService {
    rpc GetAllOrbita2d (google.protobuf.Empty) returns (ListOfOrbita2d);

    rpc GetState (Orbita2dStateRequest) returns (Orbita2dState);
    rpc StreamState (Orbita2dStreamStateRequest) returns (stream Orbita2dState);

    rpc SendCommand (Orbita2dsCommand) returns (google.protobuf.Empty);
    rpc StreamCommand (stream Orbita2dsCommand) returns (google.protobuf.Empty);

    rpc Audit (component.ComponentId) returns (Orbita2dStatus);
    rpc HeartBeat (component.ComponentId) returns (google.protobuf.Empty);

    rpc Restart (component.ComponentId) returns (google.protobuf.Empty);
}
syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

import "component.proto";

package component.orbita2d;

enum Orbita2DField {
    NONE = 0;

    NAME = 1;
    UID = 2;

    PRESENT_POSITION = 3;
    PRESENT_SPEED = 4;
    PRESENT_LOAD = 5;
    TEMPERATURE = 6;
    JOINT_LIMIT = 7;

    COMPLIANT = 8;
    GOAL_POSITION = 9;
    SPEED_LIMIT = 10;
    TORQUE_LIMIT = 11;
    PID = 12;

    ALL = 15;
}

enum Axis {
    ROLL = 0;
    PITCH = 1;
    YAW = 2;
}

message Orbita2DState {
    google.protobuf.Timestamp timestamp = 1;

    string name = 2;
    string uid = 3;

    Float2D present_position = 4;
    Float2D present_speed = 5;
    Float2D present_load = 6;
    Float2D temperature = 7;

    google.protobuf.BoolValue compliant = 8;
    Float2D goal_position = 9;
    Float2D speed_limit = 10;
    Float2D torque_limit = 11;

    PID2D pid = 12;
}

message Orbita2DStateRequest {
    repeated Orbita2DField fields = 1;
    component.ComponentId id = 2;
}

message Orbita2DStreamStateRequest {
    Orbita2DStateRequest req = 1;
    float freq = 2;
}

message PID2D {
    PIDGains gains_axis_1 = 1;
    PIDGains gains_axis_2 = 2;
}

message Float2D {
    float axis_1 = 1;
    float axis_2 = 2;
}

message Orbita2DCommand {
    component.ComponentId id = 1;

    google.protobuf.BoolValue compliant = 2;
    Float2D goal_position = 3;
    Float2D speed_limit = 4;
    Float2D torque_limit = 5;
}

message Orbita2DInfo {
    component.ComponentId id = 1;
    string serial_number = 2;
    Axis axis_1 = 3;
    Axis axis_2 = 4;
}

message ListOfOrbita2DInfo {
    repeated Orbita2DInfo info = 1;
}

message Orbita2DStatus {

}

service Orbita2DService {
    rpc GetAllOrbita2D (google.protobuf.Empty) returns (ListOfOrbita2DInfo);

    rpc GetState (Orbita2DStateRequest) returns (Orbita2DState);
    rpc StreamState (Orbita2DStreamStateRequest) returns (stream Orbita2DState);

    rpc SendCommand (Orbita2DCommand) returns (google.protobuf.Empty);
    rpc StreamCommand (stream Orbita2DCommand) returns (google.protobuf.Empty);

    rpc Audit (component.ComponentId) returns (Orbita2DStatus);
    rpc HeartBeat (component.ComponentId) returns (google.protobuf.Empty);

    rpc Restart (component.ComponentId) returns (google.protobuf.Empty);
}